android.support.v4.app.BackStackRecord -> android.support.v4.app.a:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    void bumpBackStackNesting(int) -> a
    int commitAllowingStateLoss() -> a
    void run() -> run
    void popFromBackStack$1385ff() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.b:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.c:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> j
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.e:
    java.util.HashMap sClassMap -> N
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    int mFragmentId -> u
    int mContainerId -> v
    java.lang.String mTag -> w
    boolean mHidden -> x
    boolean mDetached -> y
    boolean mRetainInstance -> z
    boolean mRetaining -> A
    boolean mHasMenu -> B
    boolean mMenuVisible -> C
    boolean mCalled -> D
    int mNextAnim -> E
    android.view.ViewGroup mContainer -> F
    android.view.View mView -> G
    android.view.View mInnerView -> H
    boolean mDeferStart -> I
    boolean mUserVisibleHint -> J
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> K
    boolean mLoadersStarted -> L
    boolean mCheckedForLoaderManager -> M
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState() -> a
    void setIndex(int) -> a
    boolean isInBackStack() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> a
    android.support.v4.app.FragmentActivity getActivity() -> c
    void onHiddenChanged$1385ff() -> d
    void setMenuVisibility(boolean) -> a
    void onActivityResult$6eb84b52() -> e
    android.view.LayoutInflater getLayoutInflater$2ee30c11() -> f
    void onInflate$423a76cd() -> g
    void onAttach$63a22f9() -> h
    android.view.animation.Animation onCreateAnimation$24236ca7() -> i
    void onCreate$79e5e33f() -> j
    android.view.View onCreateView$469ccb8a(android.view.LayoutInflater,android.view.ViewGroup) -> a
    void onViewCreated$65f1d89() -> k
    android.view.View getView() -> l
    void onActivityCreated$79e5e33f() -> m
    void onResume() -> n
    void onSaveInstanceState$79e5e33f() -> o
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> p
    void onLowMemory() -> onLowMemory
    void onDestroy() -> q
    void initState() -> r
    void onDetach() -> s
    void onCreateOptionsMenu$761f6f96() -> t
    void onPrepareOptionsMenu$1eec55bd() -> u
    void onDestroyOptionsMenu() -> v
    boolean onOptionsItemSelected$1b88ab4c() -> w
    void onOptionsMenuClosed$1eec55bd() -> x
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected$1b88ab4c() -> y
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void performStart() -> z
    void performStop() -> A
    void performReallyStop() -> B
    void performDestroyView() -> C
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.g:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.h:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    boolean mCreated -> c
    boolean mResumed -> d
    boolean mStopped -> e
    boolean mReallyStopped -> f
    boolean mRetaining -> g
    boolean mOptionsMenuInvalidated -> h
    boolean mCheckedForLoaderManager -> i
    boolean mLoadersStarted -> j
    android.support.v4.app.HCSparseArray mAllLoaderManagers -> k
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> l
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    void supportInvalidateOptionsMenu() -> a
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void doReallyStop(boolean) -> a
    void onAttachFragment$65850823() -> b
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> c
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragmentIndex(int) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager$3d2266e4(int) -> b
    boolean isRouteDisplayed() -> isRouteDisplayed
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.i:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.j:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.k:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.app.HCSparseArray loaders -> e
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.m:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    boolean mNeedMenuInvalidate -> p
    boolean mStateSaved -> q
    boolean mDestroyed -> r
    java.lang.String mNoTransactionsBecause -> s
    boolean mHavePendingDeferredStart -> t
    android.os.Bundle mStateBundle -> u
    android.util.SparseArray mStateArray -> v
    java.lang.Runnable mExecCommit -> w
    android.view.animation.Interpolator DECELERATE_QUINT -> x
    android.view.animation.Interpolator DECELERATE_CUBIC -> y
    android.view.animation.Interpolator ACCELERATE_QUINT -> z
    android.view.animation.Interpolator ACCELERATE_CUBIC -> A
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation$376f30fd(float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation$424ea1bd(float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState$2563266(int) -> d
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void enqueueAction$574583f(java.lang.Runnable) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> w
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    java.util.ArrayList retainNonConfig() -> f
    void saveFragmentViewState(android.support.v4.app.Fragment) -> c
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> d
    android.os.Parcelable saveAllState() -> g
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity) -> a
    void noteStateNotSaved() -> h
    void dispatchCreate() -> i
    void dispatchActivityCreated() -> j
    void dispatchStart() -> k
    void dispatchResume() -> l
    void dispatchPause() -> m
    void dispatchStop() -> n
    void dispatchReallyStop() -> o
    void dispatchDestroy() -> p
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> q
    boolean dispatchCreateOptionsMenu$761f6f92() -> r
    boolean dispatchPrepareOptionsMenu$1eec55b9() -> s
    boolean dispatchOptionsItemSelected$1b88ab4c() -> t
    boolean dispatchContextItemSelected$1b88ab4c() -> u
    void dispatchOptionsMenuClosed$1eec55bd() -> v
    int reverseTransit(int) -> c
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.n:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.o:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.p:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.q:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.r:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> l
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.s:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.t:
    android.support.v4.app.FragmentManager mFragmentManager -> a
    android.support.v4.app.FragmentTransaction mCurTransaction -> b
    java.util.ArrayList mSavedState -> c
    java.util.ArrayList mFragments -> d
    android.support.v4.app.Fragment mCurrentPrimaryItem -> e
    android.support.v4.app.Fragment getItem(int) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem$30510aeb(java.lang.Object) -> a
    void finishUpdate$52bc874c() -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
android.support.v4.app.FragmentTransaction -> android.support.v4.app.u:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> a
    int commitAllowingStateLoss() -> a
android.support.v4.app.HCSparseArray -> android.support.v4.app.v:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    java.lang.Object get(int) -> a
    void remove(int) -> b
    void removeAt(int) -> c
    void gc() -> c
    void put(int,java.lang.Object) -> a
    int size() -> a
    int keyAt(int) -> d
    java.lang.Object valueAt(int) -> e
    void clear() -> b
    int binarySearch$76412d8d(int[],int,int) -> a
    int idealIntArraySize(int) -> f
android.support.v4.app.LoaderManager -> android.support.v4.app.w:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.x:
    android.support.v4.content.Loader onCreateLoader$e57f803() -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.y:
    boolean DEBUG -> a
    android.support.v4.app.HCSparseArray mLoaders -> b
    android.support.v4.app.HCSparseArray mInactiveLoaders -> c
    android.support.v4.app.FragmentActivity mActivity -> d
    boolean mStarted -> e
    boolean mRetaining -> f
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.z:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void stop() -> b
    void destroy() -> c
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> b
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> a
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> a
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    android.app.PendingIntent mFullScreenIntent -> e
    android.widget.RemoteViews mTickerView -> f
    android.graphics.Bitmap mLargeIcon -> g
    java.lang.CharSequence mContentInfo -> h
    int mNumber -> i
    android.app.Notification mNotification -> j
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> a
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> a
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> a
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> b
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> a
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> a
    android.support.v4.app.NotificationCompat$Builder setLights$70eb83dc(int) -> b
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> a
    android.app.Notification getNotification() -> a
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.aa:
    android.app.Notification getNotification(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.ab:
    android.app.Notification getNotification(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.ac:
    android.app.Notification getNotification(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ad:
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> a
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> b
    long mUpdateThrottle -> c
    long mLastLoadCompleteTime -> d
    android.os.Handler mHandler -> e
    void onForceLoad() -> a
    boolean cancelLoad() -> b
    void onCanceled(java.lang.Object) -> a
    void executePendingTask() -> c
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> a
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> b
    java.lang.Object loadInBackground() -> d
    java.lang.Object onLoadInBackground() -> e
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.a:
    java.lang.Object result -> a
    boolean waiting -> b
    java.util.concurrent.CountDownLatch done -> e
    android.support.v4.content.AsyncTaskLoader this$0 -> c
    void onPostExecute(java.lang.Object) -> a
    void onCancelled() -> a
    void run() -> run
    java.lang.Object doInBackground$42af7916() -> b
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> f
    android.net.Uri mUri -> g
    java.lang.String[] mProjection -> h
    java.lang.String mSelection -> i
    java.lang.String[] mSelectionArgs -> j
    java.lang.String mSortOrder -> k
    android.database.Cursor mCursor -> l
    void deliverResult(android.database.Cursor) -> a
    void onStartLoading() -> f
    void onStopLoading() -> g
    void onReset() -> h
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    java.lang.Object loadInBackground() -> d
    void onCanceled(java.lang.Object) -> a
    void deliverResult(java.lang.Object) -> b
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> m
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> n
    android.content.Context mContext -> o
    boolean mStarted -> p
    boolean mAbandoned -> q
    boolean mReset -> r
    boolean mContentChanged -> s
    void deliverResult(java.lang.Object) -> b
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> i
    void onStartLoading() -> f
    void forceLoad() -> j
    void onForceLoad() -> a
    void stopLoading() -> k
    void onStopLoading() -> g
    void reset() -> l
    void onReset() -> h
    void onContentChanged() -> m
    java.lang.String dataToString(java.lang.Object) -> c
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.b:
    android.support.v4.content.Loader this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.c:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.d:
    java.util.concurrent.ThreadFactory sThreadFactory -> a
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> b
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> d
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> c
    java.util.concurrent.Executor sDefaultExecutor -> e
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> f
    java.util.concurrent.FutureTask mFuture -> g
    android.support.v4.content.ModernAsyncTask$Status mStatus -> h
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> i
    java.lang.Object postResult(java.lang.Object) -> b
    java.lang.Object doInBackground$42af7916() -> b
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate$1b4f7664() -> c
    void onCancelled() -> a
    boolean cancel$138603() -> d
    android.support.v4.content.ModernAsyncTask executeOnExecutor$46741b06(java.util.concurrent.Executor) -> a
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> a
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> a
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> b
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> c
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.e:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.f:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.g:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.h:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> a
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.i:
    android.support.v4.content.ModernAsyncTask mTask -> a
    java.lang.Object[] mData -> b
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.j:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.k:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> a
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> b
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> c
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> d
    android.support.v4.content.ModernAsyncTask$Status[] values() -> a
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.l:
    java.lang.Object[] mParams -> b
android.support.v4.os.ParcelableCompat -> android.support.v4.a.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.a.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.a.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.a.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.util.DebugUtils -> android.support.v4.b.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.b.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.TimeUtils -> android.support.v4.b.c:
    java.lang.Object sFormatSync -> a
    char[] sFormatStr -> b
    int printField$6419d3d2(char[],int,char,int,boolean) -> a
    void formatDuration$112769eb(long,java.io.PrintWriter) -> b
    void formatDuration(long,java.io.PrintWriter) -> a
    void formatDuration(long,long,java.io.PrintWriter) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.a:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers$79c6ddc0(android.view.KeyEvent) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.b:
    int metaStateFilterDirectionalModifiers$2e71581f(int,int,int,int) -> a
    int normalizeMetaState(int) -> c
    boolean metaStateHasModifiers$255f299(int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.c:
    boolean metaStateHasModifiers$255f299(int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.d:
    boolean metaStateHasModifiers$255f299(int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.e:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.f:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.g:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.h:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.i:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> c
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem$30510aeb(java.lang.Object) -> a
    void finishUpdate$52bc874c() -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem$7e55ba3e(android.view.View,java.lang.Object) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition$5d527804() -> d
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    java.lang.CharSequence getPageTitle(int) -> b
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> e
    float mLastKnownPositionOffset -> f
    int mScaledTextSpacing -> g
    boolean mUpdatingText -> h
    boolean mUpdatingPositions -> i
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> j
    int[] ATTRS -> k
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.j:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void onChanged() -> onChanged
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.k:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.l:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.m:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.n:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.o:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.p:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.q:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.r:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.s:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.t:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.u:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.v:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.w:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.PagerAdapter mAdapter -> e
    int mCurItem -> f
    int mRestoredCurItem -> g
    android.os.Parcelable mRestoredAdapterState -> h
    java.lang.ClassLoader mRestoredClassLoader -> i
    android.widget.Scroller mScroller -> j
    android.support.v4.view.ViewPager$PagerObserver mObserver -> k
    int mPageMargin -> l
    android.graphics.drawable.Drawable mMarginDrawable -> m
    int mTopPageBounds -> n
    int mBottomPageBounds -> o
    int mChildWidthMeasureSpec -> p
    int mChildHeightMeasureSpec -> q
    boolean mInLayout -> r
    boolean mScrollingCacheEnabled -> s
    boolean mPopulatePending -> t
    boolean mScrolling -> u
    int mOffscreenPageLimit -> v
    boolean mIsBeingDragged -> w
    boolean mIsUnableToDrag -> x
    int mTouchSlop -> y
    float mInitialMotionX -> z
    float mLastMotionX -> A
    float mLastMotionY -> B
    int mActivePointerId -> C
    android.view.VelocityTracker mVelocityTracker -> D
    int mMinimumVelocity -> E
    int mMaximumVelocity -> F
    int mFlingDistance -> G
    boolean mFakeDragging -> H
    long mFakeDragBeginTime -> I
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> J
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> K
    boolean mFirstLayout -> L
    boolean mCalledSuper -> M
    int mDecorChildCount -> N
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> O
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> P
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> Q
    int mScrollState -> R
    void initViewPager() -> h
    void setScrollState(int) -> b
    void setAdapter(android.support.v4.view.PagerAdapter) -> a
    android.support.v4.view.PagerAdapter getAdapter() -> a
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> a
    void setCurrentItem(int) -> a
    void setCurrentItem$2563266(int) -> c
    int getCurrentItem() -> b
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> b
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    void addNewItem(int,int) -> a
    void dataSetChanged() -> c
    void populate() -> i
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    void pageScrolled(int) -> d
    void completeScroll() -> j
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> d
    void endFakeDrag() -> e
    void fakeDragBy(float) -> a
    boolean isFakeDragging() -> f
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> k
    void setScrollingCacheEnabled(boolean) -> a
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean arrowScroll(int) -> e
    boolean pageLeft() -> l
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$100() -> g
android.support.v4.view.ViewPager$1 -> android.support.v4.view.x:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.y:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.z:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.aa:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ab:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ac:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ad:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ae:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> d
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.af:
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.a:
    boolean mDataValid -> a
    boolean mAutoRequery -> b
    android.database.Cursor mCursor -> c
    android.content.Context mContext -> d
    int mRowIDColumn -> e
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> f
    android.database.DataSetObserver mDataSetObserver -> g
    android.support.v4.widget.CursorFilter mCursorFilter -> h
    android.widget.FilterQueryProvider mFilterQueryProvider -> i
    android.database.Cursor getCursor() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView$4b8874c5(android.view.ViewGroup) -> a
    android.view.View newDropDownView$4b8874c5(android.view.ViewGroup) -> b
    void bindView$4693bf34(android.view.View,android.database.Cursor) -> a
    void changeCursor(android.database.Cursor) -> a
    android.database.Cursor swapCursor(android.database.Cursor) -> b
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.widget.Filter getFilter() -> getFilter
    void onContentChanged() -> b
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.b:
    android.support.v4.widget.CursorAdapter this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.c:
    android.support.v4.widget.CursorAdapter this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.d:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> a
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.e:
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.database.Cursor getCursor() -> a
    void changeCursor(android.database.Cursor) -> a
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.f:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.g:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.h:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.i:
    int mLayout -> j
    int mDropDownLayout -> k
    android.view.LayoutInflater mInflater -> l
    android.view.View newView$4b8874c5(android.view.ViewGroup) -> a
    android.view.View newDropDownView$4b8874c5(android.view.ViewGroup) -> b
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.j:
    int[] mFrom -> j
    int[] mTo -> k
    int mStringConversionColumn -> m
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> n
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> o
    java.lang.String[] mOriginalFrom -> l
    void bindView$4693bf34(android.view.View,android.database.Cursor) -> a
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    void findColumns(java.lang.String[]) -> a
    android.database.Cursor swapCursor(android.database.Cursor) -> b
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.k:
    java.lang.CharSequence convertToString$57f82248() -> a
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.l:
    boolean setViewValue$2e05ad4d() -> a
com.athlete.AthleteApplication -> com.athlete.AthleteApplication:
    android.media.MediaPlayer mediaPlayerVoice -> a
    android.media.MediaPlayer mediaPlayerMusic -> b
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> c
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> d
    java.lang.String publicKey -> e
    java.lang.String privateKey -> f
    java.lang.String urlHost -> g
    java.lang.String[] pathes -> h
    long offset -> i
    java.util.Date date -> j
    void onCreate() -> onCreate
    android.media.MediaPlayer getMediaPlayerVoice() -> a
    android.media.MediaPlayer getMediaPlayerMusic() -> b
    com.nostra13.universalimageloader.core.ImageLoader getImageLoader() -> c
    com.athlete.services.AsyncTaskManager getTaskManager(android.content.Context) -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions getDisplayImageOptions() -> d
    java.lang.String getPublicKey() -> e
    java.lang.String getPrivateKey() -> f
    java.lang.String getUrlHost() -> g
    void setUrlHost(java.lang.String) -> a
    java.lang.String[] getPathes() -> h
    void setPathes(java.lang.String[]) -> a
    java.util.Date getDate() -> i
    long getTime() -> j
    void setDate(java.util.Date) -> a
com.athlete.Constants -> com.athlete.a:
    java.lang.String[] UNITS -> a
    java.lang.String[] HOSTS_TIME -> b
    java.lang.String[] PERMS -> c
com.athlete.R -> com.athlete.b:
com.athlete.R$styleable -> com.athlete.c:
    int[] CirclePageIndicator -> a
    int[] LinePageIndicator -> b
    int[] RoundedImageView -> c
    int[] TitlePageIndicator -> d
    int[] UnderlinePageIndicator -> e
    int[] ViewPagerIndicator -> f
com.athlete.activity.ActivityWelcome -> com.athlete.activity.ActivityWelcome:
    boolean isActive -> a
    android.os.AsyncTask splashTask -> b
    int hungred -> c
    java.lang.String userName -> d
    java.lang.String apiKey -> e
    android.content.SharedPreferences sp -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    void access$0(com.athlete.activity.ActivityWelcome,android.content.SharedPreferences) -> a
    android.content.SharedPreferences access$1(com.athlete.activity.ActivityWelcome) -> a
    void access$2(com.athlete.activity.ActivityWelcome,java.lang.String) -> a
    void access$3(com.athlete.activity.ActivityWelcome,java.lang.String) -> b
    int access$4(com.athlete.activity.ActivityWelcome) -> b
    void access$5(com.athlete.activity.ActivityWelcome) -> c
com.athlete.activity.ActivityWelcome$1 -> com.athlete.activity.a:
    com.athlete.activity.ActivityWelcome this$0 -> a
    java.lang.Boolean doInBackground$7b29ea36() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.activity.BaseActivity -> com.athlete.activity.BaseActivity:
    com.athlete.bl.UserBL userBL -> userBL
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> imageLoader
    com.athlete.bl.FeedBL feedBL -> feedBL
    com.athlete.bl.WorkoutBL workoutBL -> workoutBL
    com.athlete.bl.IdleWorkoutBL idleWorkoutBL -> idleWorkoutBL
    com.athlete.bl.BaseBl baseBl -> baseBl
    com.athlete.bl.FriendsBL friendsBL -> friendsBL
    com.athlete.bl.User2FeedBl user2FeedBl -> user2FeedBl
    com.athlete.bl.StatsBL statsBL -> statsBL
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> options
    int corner5DP -> corner5DP
    int corner2DP -> corner2DP
    int size50dp -> size50dp
    int size40dp -> size40dp
    int size75dp -> size75dp
    int size100dp -> size100dp
    int padding2DP -> padding2DP
    int size35dp -> size35dp
    int size105dp -> size105dp
    android.content.SharedPreferences sp -> sp
    java.lang.String mUserName -> mUserName
    java.lang.String mApiKey -> mApiKey
    java.lang.String mId -> mId
    android.view.animation.Animation anim -> anim
    boolean isMetric -> isMetric
    android.widget.ImageButton mBtnRefresh -> mBtnRefresh
    android.widget.ImageButton mBtnBack -> mBtnBack
    com.athlete.services.AsyncTaskManager taskManager -> taskManager
    android.widget.ImageView splash -> splash
    com.athlete.util.AudioFocusHelper mAudioFocusHelper -> mAudioFocusHelper
    com.athlete.activity.BaseActivity$TransitionType transitionType -> transitionType
    long mNTPTime -> mNTPTime
    void onCreate(android.os.Bundle) -> onCreate
    void startTransferAnim() -> startTransferAnim
    com.athlete.services.AsyncTaskManager getTaskManager() -> getTaskManager
    void deleteAllDatabseTable() -> deleteAllDatabseTable
    android.content.Context getMainContext() -> getMainContext
    void setVisibleInvisible(java.lang.String,android.widget.TextView) -> setVisibleInvisible
    java.lang.String getUserID() -> getUserID
    java.lang.String getUserName() -> getUserName
    java.lang.String getApikey() -> getApikey
    java.lang.String getURLHost() -> getURLHost
    java.lang.String getPublicKey() -> getPublicKey
    java.lang.String getPrivateKey() -> getPrivateKey
    boolean isMetric() -> isMetric
    void onBackPressed() -> onBackPressed
    void hideKeyboard(android.app.Activity) -> hideKeyboard
    android.content.SharedPreferences getShared() -> getShared
    void onDestroy() -> onDestroy
    void logout(android.content.Context) -> logout
com.athlete.activity.BaseActivity$TransitionType -> com.athlete.activity.b:
    com.athlete.activity.BaseActivity$TransitionType Zoom -> a
    com.athlete.activity.BaseActivity$TransitionType SlideLeft -> b
    com.athlete.activity.BaseActivity$TransitionType Diagonal -> c
    com.athlete.activity.BaseActivity$TransitionType[] ENUM$VALUES -> d
com.athlete.activity.BaseActivity$ViewHolder -> com.athlete.activity.c:
    android.widget.TextView txtName -> a
    android.widget.TextView txtTime -> b
    android.widget.TextView txtBody -> c
    com.athlete.control.RoundedImageView imAva -> d
    com.athlete.control.RoundedImageView imageMap -> e
    android.widget.ImageView imType -> f
    android.widget.TextView txtCommentCount -> g
    android.widget.TextView txtLikeCount -> h
    android.widget.TextView txtDistance -> i
    android.widget.TextView txtDuration -> j
    android.widget.TextView txtTitle -> k
    android.widget.TextView txtArea -> l
    android.widget.TextView txtAVGPace -> m
    android.widget.TextView txtClimb -> n
    android.widget.TextView txtConnect -> o
    android.widget.TextView txtToSync -> p
    android.widget.ImageView imRecycle -> q
    android.widget.ProgressBar progressSplit -> r
    android.widget.LinearLayout itemList -> s
    android.widget.LinearLayout linearConnectToSync -> t
    android.widget.Button btnAccept -> u
    android.widget.ImageButton btnCancel -> v
    com.athlete.activity.BaseActivity this$0 -> w
com.athlete.activity.TabActivityMain -> com.athlete.activity.TabActivityMain:
    java.lang.String mTrackPath -> c
    android.widget.TabHost mTabs -> d
    java.lang.String FEED_TAG -> e
    java.lang.String CONVERSATION_TAG -> f
    java.lang.String SETUP_TAG -> g
    java.lang.String LOG_TAG -> h
    java.lang.String FAKE_TAG -> i
    android.widget.TextView txtNotify -> a
    java.lang.String stringNotify -> b
    com.athlete.bl.BaseOperationsBL baseBl -> j
    com.athlete.bl.FriendsBL friendsBL -> k
    int logId -> l
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.View prepareTabView(int,java.lang.String,java.lang.String) -> a
    void setTextNotify(java.lang.String) -> a
com.athlete.activity.TabActivityMain$1 -> com.athlete.activity.d:
    com.athlete.activity.TabActivityMain this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.auth.ActivityAuthPagers -> com.athlete.activity.auth.ActivityAuthPagers:
    java.util.List mPages -> a
    android.view.View mViewLoginPager -> b
    android.view.View mView2Pager -> c
    android.view.View mView4Pager -> d
    android.view.View mView5Pager -> e
    android.view.View mViewShare -> f
    android.support.v4.view.ViewPager mPager -> g
    com.athlete.control.viewpagerindicator.CirclePageIndicator mCirclePageIndicator -> h
    android.widget.Button mBtnLogin -> i
    android.widget.Button mBtnSignUp -> j
    java.lang.String pageColor -> k
    java.lang.String fillColor -> l
    int currentItem -> m
    int strokeWidth -> n
    java.lang.String TAG_LOGIN -> o
    java.lang.String TAG_2 -> p
    java.lang.String TAG_SHARE -> q
    java.lang.String TAG_4 -> r
    java.lang.String TAG_5 -> s
    int learnMoreID -> t
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void access$0(com.athlete.activity.auth.ActivityAuthPagers) -> a
    android.support.v4.view.ViewPager access$1(com.athlete.activity.auth.ActivityAuthPagers) -> b
com.athlete.activity.auth.ActivityAuthPagers$1 -> com.athlete.activity.auth.a:
    com.athlete.activity.auth.ActivityAuthPagers this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.auth.ActivityAuthPagers$2 -> com.athlete.activity.auth.b:
    com.athlete.activity.auth.ActivityAuthPagers this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.auth.ActivityAuthPagers$3 -> com.athlete.activity.auth.c:
    com.athlete.activity.auth.ActivityAuthPagers this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.auth.ActivityBaseAuth -> com.athlete.activity.auth.ActivityBaseAuth:
    java.lang.String GENDER -> GENDER
    java.lang.String WEIGHT -> WEIGHT
    java.lang.String WEIGHT_UNIT -> WEIGHT_UNIT
    java.lang.String BIRTH_DAY -> BIRTH_DAY
    java.lang.String FIRST_NAME -> FIRST_NAME
    java.lang.String LAST_NAME -> LAST_NAME
    com.facebook.android.Facebook mFacebook -> mFacebook
    com.facebook.android.AsyncFacebookRunner mAsyncRunner -> mAsyncRunner
    com.athlete.activity.auth.ActivityBaseAuth$SessionListener mSessionListener -> mSessionListener
    boolean mFBClick -> mFBClick
    boolean mIsLogin -> mIsLogin
    boolean isSaveTrack -> isSaveTrack
    android.content.SharedPreferences sp -> sp
    java.lang.String mCurrentPhotoPath -> mCurrentPhotoPath
    int CAMERA_REQUEST -> CAMERA_REQUEST
    int CAMERA_GALLERY -> CAMERA_GALLERY
    java.lang.String JPEG_FILE_PREFIX -> JPEG_FILE_PREFIX
    java.lang.String JPEG_FILE_SUFFIX -> JPEG_FILE_SUFFIX
    com.athlete.activity.auth.ActivityBaseAuth$AlbumStorageDirFactory mAlbumStorageDirFactory -> mAlbumStorageDirFactory
    android.widget.ImageView mImageView -> mImageView
    double weight -> weight
    int deffWeight -> deffWeight
    java.lang.String weightUnits -> weightUnits
    java.io.File file -> file
    byte[] bytePhoto -> bytePhoto
    void onCreate(android.os.Bundle) -> onCreate
    void addPhoto() -> addPhoto
    java.io.File setUpPhotoFile() -> setUpPhotoFile
    java.io.File createImageFile() -> createImageFile
    java.lang.String getAlbumName() -> getAlbumName
    java.io.File getAlbumDir() -> getAlbumDir
    java.lang.String[] getAvaMode() -> getAvaMode
    void selectAvatarMode() -> selectAvatarMode
    void addGallery() -> addGallery
    void restoreFB() -> restoreFB
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void loginViaFB(java.lang.String) -> loginViaFB
    void meTaskLogin(java.lang.String,java.lang.String) -> meTaskLogin
    void getProfileTask(java.lang.String,java.lang.String,com.athlete.model.User) -> getProfileTask
    void startApp() -> startApp
    void handleBigCameraPhoto() -> handleBigCameraPhoto
    void galleryAddPic() -> galleryAddPic
    void setPic() -> setPic
    void meTask(java.lang.String,java.lang.String) -> meTask
    android.content.SharedPreferences access$0(com.athlete.activity.auth.ActivityBaseAuth) -> access$0
    void access$1(com.athlete.activity.auth.ActivityBaseAuth,java.lang.String) -> access$1
    void access$2(com.athlete.activity.auth.ActivityBaseAuth) -> access$2
    void access$3(com.athlete.activity.auth.ActivityBaseAuth) -> access$3
    com.athlete.bl.UserBL access$4(com.athlete.activity.auth.ActivityBaseAuth) -> access$4
    void access$5(com.athlete.activity.auth.ActivityBaseAuth) -> access$5
    void access$6(com.athlete.activity.auth.ActivityBaseAuth) -> access$6
com.athlete.activity.auth.ActivityBaseAuth$1 -> com.athlete.activity.auth.d:
    com.athlete.activity.auth.ActivityBaseAuth this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.athlete.activity.auth.ActivityBaseAuth$2 -> com.athlete.activity.auth.e:
    com.athlete.activity.auth.ActivityBaseAuth this$0 -> a
    java.lang.String val$acces_token -> b
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.auth.ActivityBaseAuth$3 -> com.athlete.activity.auth.f:
    com.athlete.activity.auth.ActivityBaseAuth this$0 -> a
    java.lang.String val$userName -> b
    java.lang.String val$getApi_key -> c
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.auth.ActivityBaseAuth$4 -> com.athlete.activity.auth.g:
    com.athlete.activity.auth.ActivityBaseAuth this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.auth.ActivityBaseAuth$5 -> com.athlete.activity.auth.h:
    com.athlete.activity.auth.ActivityBaseAuth this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.auth.ActivityBaseAuth$AlbumStorageDirFactory -> com.athlete.activity.auth.i:
    com.athlete.activity.auth.ActivityBaseAuth this$0 -> a
    java.io.File getAlbumStorageDir(java.lang.String) -> a
com.athlete.activity.auth.ActivityBaseAuth$BaseAlbumDirFactory -> com.athlete.activity.auth.j:
    com.athlete.activity.auth.ActivityBaseAuth this$0 -> b
    java.io.File getAlbumStorageDir(java.lang.String) -> a
com.athlete.activity.auth.ActivityBaseAuth$FroyoAlbumDirFactory -> com.athlete.activity.auth.k:
    com.athlete.activity.auth.ActivityBaseAuth this$0 -> b
    java.io.File getAlbumStorageDir(java.lang.String) -> a
com.athlete.activity.auth.ActivityBaseAuth$LoginDialogListener -> com.athlete.activity.auth.l:
    com.athlete.activity.auth.ActivityBaseAuth this$0 -> a
    void onComplete(android.os.Bundle) -> a
    void onFacebookError(com.facebook.android.FacebookError) -> a
    void onError(com.facebook.android.DialogError) -> a
    void onCancel() -> a
com.athlete.activity.auth.ActivityBaseAuth$SampleRequestListener -> com.athlete.activity.auth.m:
    com.athlete.activity.auth.ActivityBaseAuth this$0 -> a
    void onComplete$645b3fe5(java.lang.String) -> a
    void onFileNotFoundException$64f06040(java.io.FileNotFoundException) -> a
    void onIOException$7e5565fb(java.io.IOException) -> a
    void onMalformedURLException$11b5f444(java.net.MalformedURLException) -> a
com.athlete.activity.auth.ActivityBaseAuth$SampleRequestListener$1 -> com.athlete.activity.auth.n:
    com.athlete.activity.auth.ActivityBaseAuth$SampleRequestListener this$1 -> a
    java.lang.String val$acces_token -> b
    void run() -> run
com.athlete.activity.auth.ActivityBaseAuth$SessionListener -> com.athlete.activity.auth.o:
    com.athlete.activity.auth.ActivityBaseAuth this$0 -> a
    void onAuthSucceed() -> a
com.athlete.activity.auth.ActivityLogin -> com.athlete.activity.auth.ActivityLogin:
    android.widget.EditText mEdTxtEmail -> a
    android.widget.EditText mEdTxtPass -> b
    android.widget.Button mBtnLogIn -> c
    android.widget.Button mBtnLogInFB -> d
    android.widget.Button mBtnPass -> e
    java.lang.String emailAdmin -> f
    java.lang.String passAdmin -> g
    android.widget.TextView txtServer -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onBackPressed() -> onBackPressed
    void onTaskComplete(com.athlete.services.BaseTask) -> a
    void setAdapterForDialog() -> a
    void access$0(com.athlete.activity.auth.ActivityLogin,android.app.Activity) -> a
    android.widget.EditText access$1(com.athlete.activity.auth.ActivityLogin) -> a
    android.widget.EditText access$2(com.athlete.activity.auth.ActivityLogin) -> b
    java.lang.String access$3(com.athlete.activity.auth.ActivityLogin) -> c
    java.lang.String access$4(com.athlete.activity.auth.ActivityLogin) -> d
    java.lang.String access$5(com.athlete.activity.auth.ActivityLogin) -> e
    void access$6(com.athlete.activity.auth.ActivityLogin) -> f
    android.content.SharedPreferences access$7(com.athlete.activity.auth.ActivityLogin) -> g
    android.widget.TextView access$8(com.athlete.activity.auth.ActivityLogin) -> h
com.athlete.activity.auth.ActivityLogin$1 -> com.athlete.activity.auth.p:
    com.athlete.activity.auth.ActivityLogin this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.auth.ActivityLogin$2 -> com.athlete.activity.auth.q:
    com.athlete.activity.auth.ActivityLogin this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.auth.ActivityLogin$3 -> com.athlete.activity.auth.r:
    com.athlete.activity.auth.ActivityLogin this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.auth.ActivityLogin$4 -> com.athlete.activity.auth.s:
    com.athlete.activity.auth.ActivityLogin this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.auth.ActivityLogin$5 -> com.athlete.activity.auth.t:
    com.athlete.activity.auth.ActivityLogin this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.athlete.activity.auth.ActivityLogin$6 -> com.athlete.activity.auth.u:
    com.athlete.activity.auth.ActivityLogin this$0 -> a
    java.lang.String[] val$items -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.athlete.activity.auth.ActivitySignup -> com.athlete.activity.auth.ActivitySignup:
    android.widget.EditText mEdTxtEmail -> a
    android.widget.EditText mEdTxtPass -> b
    android.widget.EditText mEdTxtFullName -> c
    android.widget.Button mBtnSignUp -> d
    android.widget.Button mBtnSignUpWithFB -> e
    android.widget.TextView mTxtTerms -> f
    int countOfFullName -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onTaskComplete(com.athlete.services.BaseTask) -> a
    android.widget.EditText access$0(com.athlete.activity.auth.ActivitySignup) -> a
    java.lang.String access$1(com.athlete.activity.auth.ActivitySignup) -> b
    java.lang.String access$2(com.athlete.activity.auth.ActivitySignup) -> c
    java.lang.String access$3(com.athlete.activity.auth.ActivitySignup) -> d
    android.widget.EditText access$4(com.athlete.activity.auth.ActivitySignup) -> e
    android.widget.EditText access$5(com.athlete.activity.auth.ActivitySignup) -> f
    void access$6(com.athlete.activity.auth.ActivitySignup) -> g
com.athlete.activity.auth.ActivitySignup$1 -> com.athlete.activity.auth.v:
    com.athlete.activity.auth.ActivitySignup this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.auth.ActivitySignup$2 -> com.athlete.activity.auth.w:
    com.athlete.activity.auth.ActivitySignup this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.auth.ActivitySignup$3 -> com.athlete.activity.auth.x:
    com.athlete.activity.auth.ActivitySignup this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.auth.ActivitySignupDetails -> com.athlete.activity.auth.ActivitySignupDetails:
    android.widget.Button mBtnGender -> a
    android.widget.Button mBtnWeight -> b
    android.widget.Button mBtnDB -> c
    android.widget.Button mBtnLetsgo -> d
    java.lang.String gender -> e
    java.lang.String birthDate -> f
    java.lang.String mUserName -> g
    java.lang.String mApiKey -> h
    java.lang.String mId -> i
    com.athlete.model.User currentUser -> j
    com.athlete.model.ProfileUser profileUser -> k
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onTaskComplete(com.athlete.services.BaseTask) -> a
    void access$0(com.athlete.activity.auth.ActivitySignupDetails) -> a
    java.lang.String access$1(com.athlete.activity.auth.ActivitySignupDetails) -> b
    java.lang.String access$2(com.athlete.activity.auth.ActivitySignupDetails) -> c
    java.lang.String access$3(com.athlete.activity.auth.ActivitySignupDetails) -> d
    java.lang.String access$4(com.athlete.activity.auth.ActivitySignupDetails) -> e
    java.lang.String access$5(com.athlete.activity.auth.ActivitySignupDetails) -> f
    java.lang.String access$6(com.athlete.activity.auth.ActivitySignupDetails) -> g
    java.lang.String access$7(com.athlete.activity.auth.ActivitySignupDetails) -> h
    com.athlete.model.User access$8(com.athlete.activity.auth.ActivitySignupDetails) -> i
    java.lang.String access$9(com.athlete.activity.auth.ActivitySignupDetails) -> j
    java.lang.String access$10(com.athlete.activity.auth.ActivitySignupDetails) -> k
com.athlete.activity.auth.ActivitySignupDetails$1 -> com.athlete.activity.auth.y:
    com.athlete.activity.auth.ActivitySignupDetails this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.auth.ActivitySignupDetails$2 -> com.athlete.activity.auth.z:
    com.athlete.activity.auth.ActivitySignupDetails this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.auth.ActivitySignupDetails$3 -> com.athlete.activity.auth.aa:
    com.athlete.activity.auth.ActivitySignupDetails this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.auth.ActivitySignupDetails$4 -> com.athlete.activity.auth.ab:
    com.athlete.activity.auth.ActivitySignupDetails this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.auth.ActivitySignupDetails$5 -> com.athlete.activity.auth.ac:
    com.athlete.activity.auth.ActivitySignupDetails this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.auth.ActivitySignupDetails$6 -> com.athlete.activity.auth.ad:
    com.athlete.activity.auth.ActivitySignupDetails this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.auth.ActivitySignupDetails$7 -> com.athlete.activity.auth.ae:
    com.athlete.activity.auth.ActivitySignupDetails this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.auth.ActivitySignupDetailsBD -> com.athlete.activity.auth.ActivitySignupDetailsBD:
    java.util.Calendar calendar -> a
    kankan.wheel.widget.WheelView month -> b
    kankan.wheel.widget.WheelView year -> c
    kankan.wheel.widget.WheelView day -> d
    int curYear -> e
    int countYears -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void updateDays(kankan.wheel.widget.WheelView,kankan.wheel.widget.WheelView,kankan.wheel.widget.WheelView) -> a
    kankan.wheel.widget.WheelView access$0(com.athlete.activity.auth.ActivitySignupDetailsBD) -> a
    kankan.wheel.widget.WheelView access$1(com.athlete.activity.auth.ActivitySignupDetailsBD) -> b
    kankan.wheel.widget.WheelView access$2(com.athlete.activity.auth.ActivitySignupDetailsBD) -> c
    int access$3(com.athlete.activity.auth.ActivitySignupDetailsBD) -> d
    int access$4(com.athlete.activity.auth.ActivitySignupDetailsBD) -> e
    void access$5(com.athlete.activity.auth.ActivitySignupDetailsBD) -> f
    void access$6(com.athlete.activity.auth.ActivitySignupDetailsBD,kankan.wheel.widget.WheelView,kankan.wheel.widget.WheelView,kankan.wheel.widget.WheelView) -> a
com.athlete.activity.auth.ActivitySignupDetailsBD$1 -> com.athlete.activity.auth.af:
    com.athlete.activity.auth.ActivitySignupDetailsBD this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.auth.ActivitySignupDetailsBD$2 -> com.athlete.activity.auth.ag:
    com.athlete.activity.auth.ActivitySignupDetailsBD this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.auth.ActivitySignupDetailsBD$3 -> com.athlete.activity.auth.ah:
    com.athlete.activity.auth.ActivitySignupDetailsBD this$0 -> a
    void onChanged$38d22c4c() -> a
com.athlete.activity.auth.ActivitySignupDetailsBD$4 -> com.athlete.activity.auth.ai:
    com.athlete.activity.auth.ActivitySignupDetailsBD this$0 -> a
    void onItemClicked(kankan.wheel.widget.WheelView,int) -> a
com.athlete.activity.auth.ActivitySignupDetailsBD$DateArrayAdapter -> com.athlete.activity.auth.aj:
    int currentItem -> a
    int currentValue -> b
    com.athlete.activity.auth.ActivitySignupDetailsBD this$0 -> c
    void configureTextView(android.widget.TextView) -> a
    android.view.View getItem(int,android.view.View,android.view.ViewGroup) -> a
com.athlete.activity.auth.ActivitySignupDetailsBD$DateNumericAdapter -> com.athlete.activity.auth.ak:
    int currentItem -> a
    int currentValue -> b
    com.athlete.activity.auth.ActivitySignupDetailsBD this$0 -> c
    void configureTextView(android.widget.TextView) -> a
    android.view.View getItem(int,android.view.View,android.view.ViewGroup) -> a
com.athlete.activity.auth.ActivitySignupDetailsGender -> com.athlete.activity.auth.ActivitySignupDetailsGender:
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void access$0(com.athlete.activity.auth.ActivitySignupDetailsGender) -> a
com.athlete.activity.auth.ActivitySignupDetailsGender$1 -> com.athlete.activity.auth.al:
    com.athlete.activity.auth.ActivitySignupDetailsGender this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.auth.ActivitySignupDetailsGender$2 -> com.athlete.activity.auth.am:
    com.athlete.activity.auth.ActivitySignupDetailsGender this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.auth.ActivitySignupDetailsGender$3 -> com.athlete.activity.auth.an:
    com.athlete.activity.auth.ActivitySignupDetailsGender this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.auth.ActivitySignupDetailsTermsOfUse -> com.athlete.activity.auth.ActivitySignupDetailsTermsOfUse:
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
com.athlete.activity.auth.ActivitySignupDetailsTermsOfUse$1 -> com.athlete.activity.auth.ao:
    com.athlete.activity.auth.ActivitySignupDetailsTermsOfUse this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.auth.ActivitySignupDetailsWeight -> com.athlete.activity.auth.ActivitySignupDetailsWeight:
    kankan.wheel.widget.WheelView weightUnit -> a
    kankan.wheel.widget.WheelView weight -> b
    kankan.wheel.widget.WheelView weightFractional -> c
    int minWeight -> d
    int maxWeight -> e
    int currentDeff -> f
    double minDistance -> g
    double maxDistance -> h
    double stepAdapter -> i
    int currentWeightUnit -> j
    int textSizeElementOfPicker -> k
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    kankan.wheel.widget.WheelView access$0(com.athlete.activity.auth.ActivitySignupDetailsWeight) -> a
    kankan.wheel.widget.WheelView access$1(com.athlete.activity.auth.ActivitySignupDetailsWeight) -> b
    int access$2(com.athlete.activity.auth.ActivitySignupDetailsWeight) -> c
    kankan.wheel.widget.WheelView access$3(com.athlete.activity.auth.ActivitySignupDetailsWeight) -> d
    double access$4(com.athlete.activity.auth.ActivitySignupDetailsWeight) -> e
    double access$5(com.athlete.activity.auth.ActivitySignupDetailsWeight) -> f
    void access$6(com.athlete.activity.auth.ActivitySignupDetailsWeight) -> g
com.athlete.activity.auth.ActivitySignupDetailsWeight$1 -> com.athlete.activity.auth.ap:
    com.athlete.activity.auth.ActivitySignupDetailsWeight this$0 -> a
    void onItemClicked(kankan.wheel.widget.WheelView,int) -> a
com.athlete.activity.auth.ActivitySignupDetailsWeight$2 -> com.athlete.activity.auth.aq:
    com.athlete.activity.auth.ActivitySignupDetailsWeight this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.auth.ActivitySignupDetailsWeight$3 -> com.athlete.activity.auth.ar:
    com.athlete.activity.auth.ActivitySignupDetailsWeight this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.auth.ActivitySignupDetailsWeight$WeightAdapter -> com.athlete.activity.auth.as:
    int currentItem -> a
    int currentValue -> b
    com.athlete.activity.auth.ActivitySignupDetailsWeight this$0 -> c
    void configureTextView(android.widget.TextView) -> a
    android.view.View getItem(int,android.view.View,android.view.ViewGroup) -> a
com.athlete.activity.auth.ActivitySignupDetailsWeight$WeightUnitArrayAdapter -> com.athlete.activity.auth.at:
    int currentItem -> a
    int currentValue -> b
    com.athlete.activity.auth.ActivitySignupDetailsWeight this$0 -> c
    void configureTextView(android.widget.TextView) -> a
    android.view.View getItem(int,android.view.View,android.view.ViewGroup) -> a
com.athlete.activity.auth.ActivitySignupDetailsWhy -> com.athlete.activity.auth.ActivitySignupDetailsWhy:
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
com.athlete.activity.auth.ActivitySignupDetailsWhy$1 -> com.athlete.activity.auth.au:
    com.athlete.activity.auth.ActivitySignupDetailsWhy this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.feed.ActivityFeedFeatured -> com.athlete.activity.feed.ActivityFeedFeatured:
    int typeFeatured -> j
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void updateFeedsFromLocalDB() -> c
    void updateFeed(java.lang.String,boolean) -> a
    void updateTheFeed(java.lang.String,boolean) -> b
    void access$0$58beacb0(com.athlete.activity.feed.ActivityFeedFeatured) -> a
com.athlete.activity.feed.ActivityFeedFeatured$1 -> com.athlete.activity.feed.a:
    com.athlete.activity.feed.ActivityFeedFeatured this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.feed.ActivityFeedFeatured$2 -> com.athlete.activity.feed.b:
    com.athlete.activity.feed.ActivityFeedFeatured this$0 -> a
    boolean val$update -> b
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.feed.ActivityFeedFriends -> com.athlete.activity.feed.ActivityFeedFriends:
    int typeFriends -> j
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void updateFeedsFromLocalDB() -> c
    void updateFeed(java.lang.String,boolean) -> a
    void updateTheFeed(java.lang.String,boolean) -> b
    void access$0$36092737(com.athlete.activity.feed.ActivityFeedFriends) -> a
com.athlete.activity.feed.ActivityFeedFriends$1 -> com.athlete.activity.feed.c:
    com.athlete.activity.feed.ActivityFeedFriends this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.feed.ActivityFeedFriends$2 -> com.athlete.activity.feed.d:
    com.athlete.activity.feed.ActivityFeedFriends this$0 -> a
    boolean val$update -> b
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.feed.ActivityFeedLocal -> com.athlete.activity.feed.ActivityFeedLocal:
    int typeLocal -> j
    void onCreate(android.os.Bundle) -> onCreate
    void updateFeed(java.lang.String,boolean) -> a
    void onResume() -> onResume
    void updateFeedsFromLocalDB() -> c
    void updateTheFeed(java.lang.String,boolean) -> b
    void access$0$4ebad08d(com.athlete.activity.feed.ActivityFeedLocal) -> a
    android.view.animation.Animation access$1(com.athlete.activity.feed.ActivityFeedLocal) -> b
    android.content.SharedPreferences access$2(com.athlete.activity.feed.ActivityFeedLocal) -> c
com.athlete.activity.feed.ActivityFeedLocal$1 -> com.athlete.activity.feed.e:
    com.athlete.activity.feed.ActivityFeedLocal this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.feed.ActivityFeedLocal$2 -> com.athlete.activity.feed.f:
    com.athlete.activity.feed.ActivityFeedLocal this$0 -> a
    boolean val$update -> b
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.feed.BaseActivityFeed -> com.athlete.activity.feed.BaseActivityFeed:
    java.util.List listOfFeed -> a
    com.athlete.adapter.BaseListAdapter adapter -> b
    android.widget.ListView listView -> c
    boolean isAllDialogsLoaded -> d
    android.widget.RelativeLayout progressBar -> e
    android.widget.ImageButton mBtnRefresh -> f
    android.widget.ImageButton mBtnSearch -> g
    android.widget.ImageView splash -> h
    android.view.animation.Animation animLarge -> j
    android.app.Activity tabActivity -> i
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void setView() -> a
    void updateFeed(java.lang.String,boolean) -> a
    void setAdapter() -> b
    android.view.animation.Animation access$0(com.athlete.activity.feed.BaseActivityFeed) -> a
    int access$1(com.athlete.activity.feed.BaseActivityFeed) -> b
    int access$2(com.athlete.activity.feed.BaseActivityFeed) -> c
    void access$3(com.athlete.activity.feed.BaseActivityFeed,java.lang.String,android.widget.TextView) -> a
    boolean access$4(com.athlete.activity.feed.BaseActivityFeed) -> d
    boolean access$5(com.athlete.activity.feed.BaseActivityFeed) -> e
    com.nostra13.universalimageloader.core.ImageLoader access$6(com.athlete.activity.feed.BaseActivityFeed) -> f
    com.nostra13.universalimageloader.core.DisplayImageOptions access$7(com.athlete.activity.feed.BaseActivityFeed) -> g
com.athlete.activity.feed.BaseActivityFeed$1 -> com.athlete.activity.feed.g:
    com.athlete.activity.feed.BaseActivityFeed this$0 -> a
com.athlete.activity.feed.BaseActivityFeed$2 -> com.athlete.activity.feed.h:
    com.athlete.activity.feed.BaseActivityFeed this$0 -> a
    int getCount() -> getCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.athlete.activity.feed.BaseActivityFeed access$0(com.athlete.activity.feed.BaseActivityFeed$2) -> a
com.athlete.activity.feed.BaseActivityFeed$2$1 -> com.athlete.activity.feed.i:
    com.athlete.activity.feed.BaseActivityFeed$2 this$1 -> a
    com.athlete.model.Feed val$item -> b
    void onClick(android.view.View) -> onClick
com.athlete.activity.feed.BaseActivityFeed$2$2 -> com.athlete.activity.feed.j:
    com.athlete.activity.feed.BaseActivityFeed$2 this$1 -> a
    com.athlete.model.Feed val$item -> b
    void onClick(android.view.View) -> onClick
com.athlete.activity.feed.TabActivityFeed -> com.athlete.activity.feed.TabActivityFeed:
    android.widget.TabHost tabs -> a
    android.content.SharedPreferences sp -> b
    android.widget.ImageButton btnFriend -> c
    android.widget.TextView txtCountFriends -> d
    java.lang.String mId -> e
    java.lang.String mUserName -> f
    java.lang.String mApiKey -> g
    com.athlete.bl.BaseOperationsBL baseBL -> h
    com.athlete.bl.FriendsBL friendsBL -> i
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    java.lang.String getURLHost() -> a
    java.lang.String getPublicKey() -> b
    java.lang.String getPrivateKey() -> c
    void setTab$2563266(int) -> a
    void setFriendTitle() -> d
    void setBtnType(android.widget.Button) -> a
    com.athlete.bl.FriendsBL access$0(com.athlete.activity.feed.TabActivityFeed) -> a
    java.lang.String access$1(com.athlete.activity.feed.TabActivityFeed) -> b
    void access$2(com.athlete.activity.feed.TabActivityFeed) -> c
    com.athlete.bl.BaseOperationsBL access$3(com.athlete.activity.feed.TabActivityFeed) -> d
com.athlete.activity.feed.TabActivityFeed$1 -> com.athlete.activity.feed.k:
    com.athlete.activity.feed.TabActivityFeed this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.feed.TabActivityFeed$2 -> com.athlete.activity.feed.l:
    com.athlete.activity.feed.TabActivityFeed this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.feed.TabActivityFeed$3 -> com.athlete.activity.feed.m:
    com.athlete.activity.feed.TabActivityFeed this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.feed.TabActivityFeed$4 -> com.athlete.activity.feed.n:
    com.athlete.activity.feed.TabActivityFeed this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.log.ActivityLog -> com.athlete.activity.log.ActivityLog:
    com.segment.SegmentListView lsComposer -> a
    com.athlete.adapter.SectionWorkoutAdapter adapter -> b
    java.util.List listOfWorkOut -> c
    java.util.List listOfIdleWorkOut -> d
    java.util.HashMap hashIdleWorkOut -> e
    boolean isAllDialogsLoaded -> f
    java.lang.String sizeOfMap -> g
    java.util.ArrayList arrayListID -> h
    java.util.ArrayList arrayListDownloadID -> i
    java.util.ArrayList arrayListGPXID -> j
    android.view.animation.Animation animLargeConnectToSync -> k
    android.view.animation.Animation animLarge -> l
    org.json.JSONObject jsonObjSend -> m
    boolean isUploading -> n
    android.view.View emptyview -> o
    android.widget.RelativeLayout progressBar -> p
    android.widget.ImageView splash -> q
    android.widget.ImageButton btnRefresh -> r
    android.view.animation.Animation anim -> s
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void startProgress() -> a
    void stopProgress() -> b
    void updateWorkout() -> c
    void convertIdletoWorkout() -> d
    void startUpload(com.athlete.model.WorkOut) -> a
    void putJSON(java.lang.String,java.lang.Object) -> a
    void uploadPhoto(java.util.ArrayList,java.lang.String,int,com.athlete.model.WorkOut) -> a
    void access$0(com.athlete.activity.log.ActivityLog) -> a
    void access$1(com.athlete.activity.log.ActivityLog,int) -> a
    boolean access$2(com.athlete.activity.log.ActivityLog) -> b
    android.view.animation.Animation access$3(com.athlete.activity.log.ActivityLog) -> c
    int access$4(com.athlete.activity.log.ActivityLog) -> d
    int access$5(com.athlete.activity.log.ActivityLog) -> e
    void access$6(com.athlete.activity.log.ActivityLog,java.lang.String,android.widget.TextView) -> a
    boolean access$7(com.athlete.activity.log.ActivityLog) -> f
    boolean access$8(com.athlete.activity.log.ActivityLog) -> g
    java.util.ArrayList access$9(com.athlete.activity.log.ActivityLog) -> h
    java.util.ArrayList access$10(com.athlete.activity.log.ActivityLog) -> i
    android.view.animation.Animation access$11(com.athlete.activity.log.ActivityLog) -> j
    void access$12(com.athlete.activity.log.ActivityLog,com.athlete.model.WorkOut) -> a
    com.athlete.adapter.SectionWorkoutAdapter access$13(com.athlete.activity.log.ActivityLog) -> k
    com.nostra13.universalimageloader.core.ImageLoader access$14(com.athlete.activity.log.ActivityLog) -> l
    java.lang.String access$15(com.athlete.activity.log.ActivityLog) -> m
    com.nostra13.universalimageloader.core.DisplayImageOptions access$16(com.athlete.activity.log.ActivityLog) -> n
    void access$17(com.athlete.activity.log.ActivityLog,com.athlete.model.TaskResult,int) -> a
    java.util.HashMap access$18(com.athlete.activity.log.ActivityLog) -> o
    com.athlete.bl.BaseBl access$19(com.athlete.activity.log.ActivityLog) -> p
    void access$20(com.athlete.activity.log.ActivityLog,java.util.ArrayList,java.lang.String,int,com.athlete.model.WorkOut) -> a
    void access$21(com.athlete.activity.log.ActivityLog) -> q
    void access$22$40428868(com.athlete.activity.log.ActivityLog) -> r
    void access$23(com.athlete.activity.log.ActivityLog,boolean) -> a
    void access$24(com.athlete.activity.log.ActivityLog,java.util.List) -> a
    com.segment.SegmentListView access$25(com.athlete.activity.log.ActivityLog) -> s
    java.util.List access$26(com.athlete.activity.log.ActivityLog) -> t
    void access$27(com.athlete.activity.log.ActivityLog) -> u
com.athlete.activity.log.ActivityLog$1 -> com.athlete.activity.log.a:
    com.athlete.activity.log.ActivityLog this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.log.ActivityLog$2 -> com.athlete.activity.log.b:
    com.athlete.activity.log.ActivityLog this$0 -> a
    int getCount() -> getCount
    android.view.View getSectionView$4e45925b(int,android.view.View) -> a
    com.athlete.activity.log.ActivityLog access$0(com.athlete.activity.log.ActivityLog$2) -> a
com.athlete.activity.log.ActivityLog$2$1 -> com.athlete.activity.log.c:
    com.athlete.activity.log.ActivityLog$2 this$1 -> a
    com.athlete.model.WorkOut val$workOut -> b
    void onClick(android.view.View) -> onClick
com.athlete.activity.log.ActivityLog$2$2 -> com.athlete.activity.log.d:
    com.athlete.activity.log.ActivityLog$2 this$1 -> a
    com.athlete.model.WorkOut val$workOut -> b
    void onClick(android.view.View) -> onClick
com.athlete.activity.log.ActivityLog$3 -> com.athlete.activity.log.e:
    com.athlete.activity.log.ActivityLog this$0 -> a
    int val$id -> b
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.log.ActivityLog$4 -> com.athlete.activity.log.f:
    com.athlete.activity.log.ActivityLog this$0 -> a
    int val$id -> b
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.log.ActivityLog$5 -> com.athlete.activity.log.g:
    com.athlete.activity.log.ActivityLog this$0 -> a
    int val$id -> b
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.log.ActivityLog$6 -> com.athlete.activity.log.h:
    com.athlete.activity.log.ActivityLog this$0 -> a
    int val$offset -> b
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.log.ActivityLog$7 -> com.athlete.activity.log.i:
    com.athlete.activity.log.ActivityLog this$0 -> a
    java.util.ArrayList val$pathes -> b
    int val$idleID -> c
    java.lang.String val$postID -> d
    com.athlete.model.WorkOut val$out -> e
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.msg.ActivityConversation -> com.athlete.activity.msg.ActivityConversation:
    android.widget.ImageButton mBtnNewMessage -> a
    android.widget.ListView mListView -> b
    android.widget.ImageButton mBtnRefresh -> c
    android.widget.ImageView splash -> d
    android.widget.RelativeLayout progressBar -> e
    com.athlete.adapter.BaseListAdapter adapter -> f
    java.util.List conversations -> g
    boolean isAllDialogsLoaded -> h
    android.view.animation.Animation animLarge -> i
    java.util.HashMap hashMapUsers -> j
    int mPosition -> k
    com.athlete.activity.TabActivityMain activityMain -> l
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void startProgress() -> a
    void getConversation(java.lang.String,boolean) -> a
    void setAdapter() -> b
    void access$0(com.athlete.activity.msg.ActivityConversation,java.lang.String,boolean) -> a
    void access$1(com.athlete.activity.msg.ActivityConversation) -> a
    java.util.List access$2(com.athlete.activity.msg.ActivityConversation) -> b
    android.widget.ListView access$3(com.athlete.activity.msg.ActivityConversation) -> c
    void access$4(com.athlete.activity.msg.ActivityConversation) -> d
    void access$5(com.athlete.activity.msg.ActivityConversation,boolean) -> a
    com.athlete.adapter.BaseListAdapter access$6(com.athlete.activity.msg.ActivityConversation) -> e
    com.athlete.bl.BaseBl access$7(com.athlete.activity.msg.ActivityConversation) -> f
    com.athlete.activity.TabActivityMain access$8(com.athlete.activity.msg.ActivityConversation) -> g
    boolean access$9(com.athlete.activity.msg.ActivityConversation) -> h
    android.widget.ImageButton access$10(com.athlete.activity.msg.ActivityConversation) -> i
    android.view.animation.Animation access$11(com.athlete.activity.msg.ActivityConversation) -> j
    int access$12(com.athlete.activity.msg.ActivityConversation) -> k
    int access$13(com.athlete.activity.msg.ActivityConversation) -> l
    java.util.HashMap access$14(com.athlete.activity.msg.ActivityConversation) -> m
    java.lang.String access$15(com.athlete.activity.msg.ActivityConversation) -> n
    com.nostra13.universalimageloader.core.ImageLoader access$16(com.athlete.activity.msg.ActivityConversation) -> o
    com.nostra13.universalimageloader.core.DisplayImageOptions access$17(com.athlete.activity.msg.ActivityConversation) -> p
    void access$18(com.athlete.activity.msg.ActivityConversation,int) -> a
    void access$19(com.athlete.activity.msg.ActivityConversation,com.athlete.model.Conversation,int) -> a
com.athlete.activity.msg.ActivityConversation$1 -> com.athlete.activity.msg.a:
    com.athlete.activity.msg.ActivityConversation this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.msg.ActivityConversation$2 -> com.athlete.activity.msg.b:
    com.athlete.activity.msg.ActivityConversation this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.msg.ActivityConversation$3 -> com.athlete.activity.msg.c:
    com.athlete.activity.msg.ActivityConversation this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.msg.ActivityConversation$4 -> com.athlete.activity.msg.d:
    com.athlete.activity.msg.ActivityConversation this$0 -> a
    boolean val$update -> b
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.msg.ActivityConversation$5 -> com.athlete.activity.msg.e:
    com.athlete.activity.msg.ActivityConversation this$0 -> a
com.athlete.activity.msg.ActivityConversation$6 -> com.athlete.activity.msg.f:
    com.athlete.activity.msg.ActivityConversation this$0 -> a
    int getCount() -> getCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.athlete.activity.msg.ActivityConversation access$0(com.athlete.activity.msg.ActivityConversation$6) -> a
com.athlete.activity.msg.ActivityConversation$6$1 -> com.athlete.activity.msg.g:
    com.athlete.activity.msg.ActivityConversation$6 this$1 -> a
    com.athlete.model.Conversation val$item -> b
    void onClick(android.view.View) -> onClick
com.athlete.activity.msg.ActivityConversation$6$2 -> com.athlete.activity.msg.h:
    com.athlete.activity.msg.ActivityConversation$6 this$1 -> a
    int val$position -> b
    com.athlete.model.Conversation val$item -> c
    void onClick(android.view.View) -> onClick
com.athlete.activity.msg.ActivityConversation$7 -> com.athlete.activity.msg.i:
    com.athlete.activity.msg.ActivityConversation this$0 -> a
    com.athlete.model.Conversation val$conversation -> b
    int val$position -> c
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.msg.ActivityMSGFromEmail -> com.athlete.activity.msg.ActivityMSGFromEmail:
    android.widget.ImageButton mBtnDelete -> a
    android.widget.ListView mListView -> b
    android.widget.ImageButton mBtnRefresh -> c
    android.widget.ImageView splash -> d
    android.widget.RelativeLayout progressBar -> e
    com.athlete.adapter.BaseListAdapter adapter -> f
    java.util.List messages -> g
    boolean isAllDialogsLoaded -> h
    android.view.animation.Animation animLarge -> i
    com.athlete.model.Conversation currentConversation -> j
    android.widget.EditText mEditReply -> k
    com.athlete.model.User currentUser -> l
    com.athlete.control.RoundedImageView roundedImageView -> m
    android.widget.LinearLayout$LayoutParams paramsAvaForward -> n
    java.lang.StringBuffer users -> o
    android.widget.LinearLayout txtUsersLinear -> p
    android.widget.LinearLayout linear1 -> q
    android.widget.LinearLayout linear2 -> r
    int converstionID -> s
    void onResume() -> onResume
    void onCreate(android.os.Bundle) -> onCreate
    void setViewConversation() -> a
    void startProgress() -> b
    void getMessages(java.lang.String,boolean) -> a
    void setAdapter() -> c
    java.util.List access$0(com.athlete.activity.msg.ActivityMSGFromEmail) -> a
    void access$1(com.athlete.activity.msg.ActivityMSGFromEmail) -> b
    void access$2(com.athlete.activity.msg.ActivityMSGFromEmail) -> c
    void access$3(com.athlete.activity.msg.ActivityMSGFromEmail,com.athlete.model.Conversation) -> a
    void access$4(com.athlete.activity.msg.ActivityMSGFromEmail) -> d
    void access$5(com.athlete.activity.msg.ActivityMSGFromEmail,java.lang.String,boolean) -> a
    android.widget.EditText access$6(com.athlete.activity.msg.ActivityMSGFromEmail) -> e
    com.athlete.model.Conversation access$7(com.athlete.activity.msg.ActivityMSGFromEmail) -> f
    void access$8(com.athlete.activity.msg.ActivityMSGFromEmail,java.lang.String,int) -> a
    void access$9(com.athlete.activity.msg.ActivityMSGFromEmail,int) -> a
    void access$10(com.athlete.activity.msg.ActivityMSGFromEmail,java.lang.String) -> a
    void access$11(com.athlete.activity.msg.ActivityMSGFromEmail,boolean) -> a
    com.athlete.adapter.BaseListAdapter access$12(com.athlete.activity.msg.ActivityMSGFromEmail) -> g
    android.widget.ListView access$13(com.athlete.activity.msg.ActivityMSGFromEmail) -> h
    com.athlete.model.User access$14(com.athlete.activity.msg.ActivityMSGFromEmail) -> i
    com.athlete.bl.BaseBl access$15(com.athlete.activity.msg.ActivityMSGFromEmail) -> j
    boolean access$16(com.athlete.activity.msg.ActivityMSGFromEmail) -> k
    android.view.animation.Animation access$17(com.athlete.activity.msg.ActivityMSGFromEmail) -> l
    int access$18(com.athlete.activity.msg.ActivityMSGFromEmail) -> m
    int access$19(com.athlete.activity.msg.ActivityMSGFromEmail) -> n
    com.nostra13.universalimageloader.core.ImageLoader access$20(com.athlete.activity.msg.ActivityMSGFromEmail) -> o
    com.nostra13.universalimageloader.core.DisplayImageOptions access$21(com.athlete.activity.msg.ActivityMSGFromEmail) -> p
com.athlete.activity.msg.ActivityMSGFromEmail$1 -> com.athlete.activity.msg.j:
    com.athlete.activity.msg.ActivityMSGFromEmail this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.msg.ActivityMSGFromEmail$10 -> com.athlete.activity.msg.k:
    com.athlete.activity.msg.ActivityMSGFromEmail this$0 -> a
com.athlete.activity.msg.ActivityMSGFromEmail$11 -> com.athlete.activity.msg.l:
    com.athlete.activity.msg.ActivityMSGFromEmail this$0 -> a
    int getCount() -> getCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.athlete.activity.msg.ActivityMSGFromEmail access$0(com.athlete.activity.msg.ActivityMSGFromEmail$11) -> a
com.athlete.activity.msg.ActivityMSGFromEmail$11$1 -> com.athlete.activity.msg.m:
    com.athlete.activity.msg.ActivityMSGFromEmail$11 this$1 -> a
    com.athlete.model.Message val$item -> b
    void onClick(android.view.View) -> onClick
com.athlete.activity.msg.ActivityMSGFromEmail$12 -> com.athlete.activity.msg.n:
    com.athlete.activity.msg.ActivityMSGFromEmail this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.msg.ActivityMSGFromEmail$2 -> com.athlete.activity.msg.o:
    com.athlete.activity.msg.ActivityMSGFromEmail this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.msg.ActivityMSGFromEmail$3 -> com.athlete.activity.msg.p:
    com.athlete.activity.msg.ActivityMSGFromEmail this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.msg.ActivityMSGFromEmail$4 -> com.athlete.activity.msg.q:
    com.athlete.activity.msg.ActivityMSGFromEmail this$0 -> a
    com.athlete.model.User val$us -> b
    void onClick(android.view.View) -> onClick
com.athlete.activity.msg.ActivityMSGFromEmail$5 -> com.athlete.activity.msg.r:
    com.athlete.activity.msg.ActivityMSGFromEmail this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.athlete.activity.msg.ActivityMSGFromEmail$6 -> com.athlete.activity.msg.s:
    com.athlete.activity.msg.ActivityMSGFromEmail this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.msg.ActivityMSGFromEmail$7 -> com.athlete.activity.msg.t:
    com.athlete.activity.msg.ActivityMSGFromEmail this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.msg.ActivityMSGFromEmail$8 -> com.athlete.activity.msg.u:
    com.athlete.activity.msg.ActivityMSGFromEmail this$0 -> a
    boolean val$update -> b
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.msg.ActivityMSGFromEmail$9 -> com.athlete.activity.msg.v:
    com.athlete.activity.msg.ActivityMSGFromEmail this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.msg.ActivityMSGFromEmail$MainSearchLayout -> com.athlete.activity.msg.w:
    com.athlete.activity.msg.ActivityMSGFromEmail this$0 -> a
    void onMeasure(int,int) -> onMeasure
com.athlete.activity.msg.ActivityMSGs -> com.athlete.activity.msg.ActivityMSGs:
    android.widget.ImageButton mBtnDelete -> a
    android.widget.ListView mListView -> b
    android.widget.ImageButton mBtnRefresh -> c
    android.widget.ImageView splash -> d
    android.widget.RelativeLayout progressBar -> e
    com.athlete.adapter.BaseListAdapter adapter -> f
    java.util.List messages -> g
    boolean isAllDialogsLoaded -> h
    android.view.animation.Animation animLarge -> i
    com.athlete.model.Conversation currentConversation -> j
    android.widget.EditText mEditReply -> k
    com.athlete.model.User currentUser -> l
    com.athlete.control.RoundedImageView roundedImageView -> m
    android.widget.LinearLayout$LayoutParams paramsAvaForward -> n
    java.lang.StringBuffer users -> o
    android.widget.LinearLayout txtUsersLinear -> p
    android.widget.LinearLayout linear1 -> q
    android.widget.LinearLayout linear2 -> r
    void onResume() -> onResume
    void onCreate(android.os.Bundle) -> onCreate
    void getMessages(java.lang.String,boolean) -> a
    void setAdapter() -> a
    java.util.List access$0(com.athlete.activity.msg.ActivityMSGs) -> a
    void access$1(com.athlete.activity.msg.ActivityMSGs) -> b
    android.widget.EditText access$2(com.athlete.activity.msg.ActivityMSGs) -> c
    com.athlete.model.Conversation access$3(com.athlete.activity.msg.ActivityMSGs) -> d
    void access$4(com.athlete.activity.msg.ActivityMSGs,java.lang.String,int) -> a
    void access$5(com.athlete.activity.msg.ActivityMSGs,java.lang.String,boolean) -> a
    void access$6(com.athlete.activity.msg.ActivityMSGs,int) -> a
    void access$7(com.athlete.activity.msg.ActivityMSGs,java.lang.String) -> a
    android.widget.ImageButton access$8(com.athlete.activity.msg.ActivityMSGs) -> e
    android.widget.RelativeLayout access$9(com.athlete.activity.msg.ActivityMSGs) -> f
    android.widget.ImageView access$10(com.athlete.activity.msg.ActivityMSGs) -> g
    void access$11(com.athlete.activity.msg.ActivityMSGs,boolean) -> a
    com.athlete.adapter.BaseListAdapter access$12(com.athlete.activity.msg.ActivityMSGs) -> h
    android.widget.ListView access$13(com.athlete.activity.msg.ActivityMSGs) -> i
    com.athlete.model.User access$14(com.athlete.activity.msg.ActivityMSGs) -> j
    com.athlete.bl.BaseBl access$15(com.athlete.activity.msg.ActivityMSGs) -> k
    boolean access$16(com.athlete.activity.msg.ActivityMSGs) -> l
    android.view.animation.Animation access$17(com.athlete.activity.msg.ActivityMSGs) -> m
    int access$18(com.athlete.activity.msg.ActivityMSGs) -> n
    int access$19(com.athlete.activity.msg.ActivityMSGs) -> o
    com.nostra13.universalimageloader.core.ImageLoader access$20(com.athlete.activity.msg.ActivityMSGs) -> p
    com.nostra13.universalimageloader.core.DisplayImageOptions access$21(com.athlete.activity.msg.ActivityMSGs) -> q
com.athlete.activity.msg.ActivityMSGs$1 -> com.athlete.activity.msg.x:
    com.athlete.activity.msg.ActivityMSGs this$0 -> a
    com.athlete.model.User val$us -> b
    void onClick(android.view.View) -> onClick
com.athlete.activity.msg.ActivityMSGs$10 -> com.athlete.activity.msg.y:
    com.athlete.activity.msg.ActivityMSGs this$0 -> a
    int getCount() -> getCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.athlete.activity.msg.ActivityMSGs access$0(com.athlete.activity.msg.ActivityMSGs$10) -> a
com.athlete.activity.msg.ActivityMSGs$10$1 -> com.athlete.activity.msg.z:
    com.athlete.activity.msg.ActivityMSGs$10 this$1 -> a
    com.athlete.model.Message val$item -> b
    void onClick(android.view.View) -> onClick
com.athlete.activity.msg.ActivityMSGs$11 -> com.athlete.activity.msg.aa:
    com.athlete.activity.msg.ActivityMSGs this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.msg.ActivityMSGs$2 -> com.athlete.activity.msg.ab:
    com.athlete.activity.msg.ActivityMSGs this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.athlete.activity.msg.ActivityMSGs$3 -> com.athlete.activity.msg.ac:
    com.athlete.activity.msg.ActivityMSGs this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.msg.ActivityMSGs$4 -> com.athlete.activity.msg.ad:
    com.athlete.activity.msg.ActivityMSGs this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.msg.ActivityMSGs$5 -> com.athlete.activity.msg.ae:
    com.athlete.activity.msg.ActivityMSGs this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.msg.ActivityMSGs$6 -> com.athlete.activity.msg.af:
    com.athlete.activity.msg.ActivityMSGs this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.msg.ActivityMSGs$7 -> com.athlete.activity.msg.ag:
    com.athlete.activity.msg.ActivityMSGs this$0 -> a
    boolean val$update -> b
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.msg.ActivityMSGs$8 -> com.athlete.activity.msg.ah:
    com.athlete.activity.msg.ActivityMSGs this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.msg.ActivityMSGs$9 -> com.athlete.activity.msg.ai:
    com.athlete.activity.msg.ActivityMSGs this$0 -> a
com.athlete.activity.msg.ActivityMSGs$MainSearchLayout -> com.athlete.activity.msg.aj:
    com.athlete.activity.msg.ActivityMSGs this$0 -> a
    void onMeasure(int,int) -> onMeasure
com.athlete.activity.msg.ActivityNewMessage -> com.athlete.activity.msg.ActivityNewMessage:
    android.widget.Button mBtnSendMessage -> a
    android.widget.EditText mEditWriteMessage -> b
    android.widget.ImageButton mImBtnAdd -> c
    com.athlete.model.User currentUser -> d
    com.athlete.control.RoundedImageView roundedImageView -> e
    android.widget.LinearLayout linear1 -> f
    android.widget.LinearLayout linear2 -> g
    android.widget.LinearLayout linearForEdit -> h
    java.util.HashMap userAddresse -> i
    android.widget.LinearLayout$LayoutParams paramsForTextView -> j
    android.widget.RelativeLayout progressBar -> k
    android.widget.ImageView splash -> l
    android.widget.EditText mEdText -> m
    android.widget.FrameLayout linearWithTextViewAndEditText -> n
    android.view.View headerView -> o
    android.widget.ListView mListView -> p
    com.athlete.adapter.BaseListAdapter adapter -> q
    java.util.List searchUser -> r
    java.util.List friends -> s
    void onResume() -> onResume
    void onCreate(android.os.Bundle) -> onCreate
    void setTableUsers() -> a
    void changeMode() -> b
    void editMode() -> c
    void chooseMode() -> d
    void startProgress() -> e
    void onBackPressed() -> onBackPressed
    java.util.HashMap access$0(com.athlete.activity.msg.ActivityNewMessage) -> a
    java.util.List access$1(com.athlete.activity.msg.ActivityNewMessage) -> b
    void access$2(com.athlete.activity.msg.ActivityNewMessage) -> c
    android.widget.RelativeLayout access$3(com.athlete.activity.msg.ActivityNewMessage) -> d
    android.widget.EditText access$4(com.athlete.activity.msg.ActivityNewMessage) -> e
    void access$5(com.athlete.activity.msg.ActivityNewMessage,java.lang.String) -> a
    android.widget.LinearLayout access$6(com.athlete.activity.msg.ActivityNewMessage) -> f
    void access$7(com.athlete.activity.msg.ActivityNewMessage) -> g
    android.widget.Button access$8(com.athlete.activity.msg.ActivityNewMessage) -> h
    android.widget.ImageView access$9(com.athlete.activity.msg.ActivityNewMessage) -> i
    void access$10(com.athlete.activity.msg.ActivityNewMessage) -> j
    android.widget.EditText access$11(com.athlete.activity.msg.ActivityNewMessage) -> k
    void access$12(com.athlete.activity.msg.ActivityNewMessage,java.lang.String,java.lang.Integer[]) -> a
    void access$13(com.athlete.activity.msg.ActivityNewMessage) -> l
    int access$14(com.athlete.activity.msg.ActivityNewMessage) -> m
    int access$15(com.athlete.activity.msg.ActivityNewMessage) -> n
    com.athlete.model.User access$16(com.athlete.activity.msg.ActivityNewMessage) -> o
    com.athlete.bl.BaseBl access$17(com.athlete.activity.msg.ActivityNewMessage) -> p
    com.athlete.adapter.BaseListAdapter access$18(com.athlete.activity.msg.ActivityNewMessage) -> q
    void access$19(com.athlete.activity.msg.ActivityNewMessage,android.app.Activity) -> a
    com.nostra13.universalimageloader.core.ImageLoader access$20(com.athlete.activity.msg.ActivityNewMessage) -> r
    com.nostra13.universalimageloader.core.DisplayImageOptions access$21(com.athlete.activity.msg.ActivityNewMessage) -> s
    void access$22(com.athlete.activity.msg.ActivityNewMessage) -> t
    com.athlete.bl.UserBL access$23(com.athlete.activity.msg.ActivityNewMessage) -> u
    void access$24(com.athlete.activity.msg.ActivityNewMessage,java.util.List) -> a
com.athlete.activity.msg.ActivityNewMessage$1 -> com.athlete.activity.msg.ak:
    com.athlete.activity.msg.ActivityNewMessage this$0 -> a
    java.util.List val$users -> b
    void onClick(android.view.View) -> onClick
com.athlete.activity.msg.ActivityNewMessage$2 -> com.athlete.activity.msg.al:
    com.athlete.activity.msg.ActivityNewMessage this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.athlete.activity.msg.ActivityNewMessage$3 -> com.athlete.activity.msg.am:
    com.athlete.activity.msg.ActivityNewMessage this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.athlete.activity.msg.ActivityNewMessage$4 -> com.athlete.activity.msg.an:
    com.athlete.activity.msg.ActivityNewMessage this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.msg.ActivityNewMessage$5 -> com.athlete.activity.msg.ao:
    com.athlete.activity.msg.ActivityNewMessage this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.msg.ActivityNewMessage$6 -> com.athlete.activity.msg.ap:
    com.athlete.activity.msg.ActivityNewMessage this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.msg.ActivityNewMessage$7 -> com.athlete.activity.msg.aq:
    com.athlete.activity.msg.ActivityNewMessage this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.athlete.activity.msg.ActivityNewMessage access$0(com.athlete.activity.msg.ActivityNewMessage$7) -> a
com.athlete.activity.msg.ActivityNewMessage$7$1 -> com.athlete.activity.msg.ar:
    com.athlete.activity.msg.ActivityNewMessage$7 this$1 -> a
    com.athlete.model.User val$user -> b
    void onClick(android.view.View) -> onClick
com.athlete.activity.msg.ActivityNewMessage$8 -> com.athlete.activity.msg.as:
    com.athlete.activity.msg.ActivityNewMessage this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.msg.ActivityNewMessage$9 -> com.athlete.activity.msg.at:
    com.athlete.activity.msg.ActivityNewMessage this$0 -> a
    java.lang.String val$q -> b
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.setup.ActivityAudioTiming -> com.athlete.activity.setup.ActivityAudioTiming:
    android.content.SharedPreferences sp -> d
    float mAudioTiming -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onBackPressed() -> onBackPressed
    boolean access$0(com.athlete.activity.setup.ActivityAudioTiming) -> a
    void access$1(com.athlete.activity.setup.ActivityAudioTiming) -> b
com.athlete.activity.setup.ActivityAudioTiming$1 -> com.athlete.activity.setup.a:
    com.athlete.activity.setup.ActivityAudioTiming this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.setup.ActivityAudioTiming$2 -> com.athlete.activity.setup.b:
    com.athlete.activity.setup.ActivityAudioTiming this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.setup.ActivityAudioTiming$3 -> com.athlete.activity.setup.c:
    com.athlete.activity.setup.ActivityAudioTiming this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.setup.ActivityAudioTiming$4 -> com.athlete.activity.setup.d:
    com.athlete.activity.setup.ActivityAudioTiming this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.setup.ActivityCountDount -> com.athlete.activity.setup.ActivityCountDount:
    android.content.SharedPreferences sp -> d
    int typeZero -> e
    int typeCountDount10 -> f
    int typeCountDount30 -> g
    int typeCountDount5 -> h
    int typeCountDount3 -> i
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onBackPressed() -> onBackPressed
    void access$0(com.athlete.activity.setup.ActivityCountDount) -> a
com.athlete.activity.setup.ActivityCountDount$1 -> com.athlete.activity.setup.e:
    com.athlete.activity.setup.ActivityCountDount this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.setup.ActivityCountDount$2 -> com.athlete.activity.setup.f:
    com.athlete.activity.setup.ActivityCountDount this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.setup.ActivityCountDount$3 -> com.athlete.activity.setup.g:
    com.athlete.activity.setup.ActivityCountDount this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.setup.ActivityCountDount$4 -> com.athlete.activity.setup.h:
    com.athlete.activity.setup.ActivityCountDount this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.setup.ActivityCountDount$5 -> com.athlete.activity.setup.i:
    com.athlete.activity.setup.ActivityCountDount this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.setup.ActivityCountDount$6 -> com.athlete.activity.setup.j:
    com.athlete.activity.setup.ActivityCountDount this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.setup.ActivityLocation -> com.athlete.activity.setup.ActivityLocation:
    double latitude -> d
    double longitude -> e
    android.location.LocationManager mLocManager -> f
    java.lang.String location -> g
    android.widget.TextView txtDetectLocation -> h
    android.app.Dialog mDialog -> i
    android.widget.EditText edTxtCustomLocation -> j
    java.lang.String LOCATION_NAME -> k
    java.lang.String sharedKeyIsDetect -> l
    boolean isDetect -> m
    void onResume() -> onResume
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    void setText() -> a
    void updateLocation() -> b
    void hideProgress() -> c
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void access$0(com.athlete.activity.setup.ActivityLocation,android.app.Activity) -> a
    void access$1(com.athlete.activity.setup.ActivityLocation) -> a
    void access$2(com.athlete.activity.setup.ActivityLocation,boolean) -> a
    android.content.SharedPreferences access$3(com.athlete.activity.setup.ActivityLocation) -> b
    boolean access$4(com.athlete.activity.setup.ActivityLocation) -> c
    void access$5(com.athlete.activity.setup.ActivityLocation) -> d
    void access$6(com.athlete.activity.setup.ActivityLocation,android.location.LocationManager) -> a
    android.location.LocationManager access$7(com.athlete.activity.setup.ActivityLocation) -> e
    java.lang.String access$8(com.athlete.activity.setup.ActivityLocation) -> f
    android.widget.EditText access$9(com.athlete.activity.setup.ActivityLocation) -> g
    void access$10(com.athlete.activity.setup.ActivityLocation,java.lang.String) -> a
    void access$11(com.athlete.activity.setup.ActivityLocation) -> h
    void access$12(com.athlete.activity.setup.ActivityLocation) -> i
com.athlete.activity.setup.ActivityLocation$1 -> com.athlete.activity.setup.k:
    com.athlete.activity.setup.ActivityLocation this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.setup.ActivityLocation$2 -> com.athlete.activity.setup.l:
    com.athlete.activity.setup.ActivityLocation this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.setup.ActivityLocation$3 -> com.athlete.activity.setup.m:
    com.athlete.activity.setup.ActivityLocation this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.setup.ActivityLocation$4 -> com.athlete.activity.setup.n:
    com.athlete.activity.setup.ActivityLocation this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.athlete.activity.setup.ActivityMetric -> com.athlete.activity.setup.ActivityMetric:
    android.content.SharedPreferences sp -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    void onResume() -> onResume
    void access$0(com.athlete.activity.setup.ActivityMetric) -> a
com.athlete.activity.setup.ActivityMetric$1 -> com.athlete.activity.setup.o:
    com.athlete.activity.setup.ActivityMetric this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.setup.ActivityMetric$2 -> com.athlete.activity.setup.p:
    com.athlete.activity.setup.ActivityMetric this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.setup.ActivityMetric$3 -> com.athlete.activity.setup.q:
    com.athlete.activity.setup.ActivityMetric this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.setup.ActivitySetup -> com.athlete.activity.setup.ActivitySetup:
    android.widget.Button mBtnLogOut -> d
    android.content.SharedPreferences sp -> e
    android.widget.LinearLayout mLinearMentricType -> f
    android.widget.LinearLayout mLinearCountDount -> g
    java.lang.String mMetricType -> h
    int mCountDown -> i
    double mAudioTiming -> j
    android.widget.EditText mEditFullName -> k
    int deffCountdown -> l
    android.widget.TextView mTxtMetricType -> m
    android.widget.TextView mTxtCountDount -> n
    android.widget.TextView mTxtAudioTiming -> o
    android.widget.TextView mTxtWeight -> p
    android.widget.TextView mTxtLocation -> q
    android.widget.TextView mTxtEmail -> r
    int countOfFullName -> s
    java.lang.String updateUser -> t
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void setAudioTimming() -> b
    void setData() -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void uploadPhoto() -> d
    void meTask() -> a
    void access$0(com.athlete.activity.setup.ActivitySetup) -> a
    void access$1(com.athlete.activity.setup.ActivitySetup) -> b
    double access$2(com.athlete.activity.setup.ActivitySetup) -> c
    java.lang.String access$3(com.athlete.activity.setup.ActivitySetup) -> d
    void access$4(com.athlete.activity.setup.ActivitySetup,android.content.Context) -> a
    void access$5(com.athlete.activity.setup.ActivitySetup,android.app.Activity) -> a
    android.widget.EditText access$6(com.athlete.activity.setup.ActivitySetup) -> e
    com.athlete.bl.BaseBl access$7(com.athlete.activity.setup.ActivitySetup) -> f
    void access$8(com.athlete.activity.setup.ActivitySetup,android.content.SharedPreferences) -> a
    com.athlete.bl.UserBL access$9(com.athlete.activity.setup.ActivitySetup) -> g
    android.content.SharedPreferences access$10(com.athlete.activity.setup.ActivitySetup) -> h
    void access$11(com.athlete.activity.setup.ActivitySetup) -> i
com.athlete.activity.setup.ActivitySetup$1 -> com.athlete.activity.setup.r:
    com.athlete.activity.setup.ActivitySetup this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.setup.ActivitySetup$10 -> com.athlete.activity.setup.s:
    com.athlete.activity.setup.ActivitySetup this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.setup.ActivitySetup$11 -> com.athlete.activity.setup.t:
    com.athlete.activity.setup.ActivitySetup this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.setup.ActivitySetup$2 -> com.athlete.activity.setup.u:
    com.athlete.activity.setup.ActivitySetup this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.setup.ActivitySetup$3 -> com.athlete.activity.setup.v:
    com.athlete.activity.setup.ActivitySetup this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.setup.ActivitySetup$4 -> com.athlete.activity.setup.w:
    com.athlete.activity.setup.ActivitySetup this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.setup.ActivitySetup$5 -> com.athlete.activity.setup.x:
    com.athlete.activity.setup.ActivitySetup this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.setup.ActivitySetup$6 -> com.athlete.activity.setup.y:
    com.athlete.activity.setup.ActivitySetup this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.setup.ActivitySetup$7 -> com.athlete.activity.setup.z:
    com.athlete.activity.setup.ActivitySetup this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.setup.ActivitySetup$8 -> com.athlete.activity.setup.aa:
    com.athlete.activity.setup.ActivitySetup this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.setup.ActivitySetup$9 -> com.athlete.activity.setup.ab:
    com.athlete.activity.setup.ActivitySetup this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.athlete.activity.setup.BaseSetupActivity -> com.athlete.activity.setup.BaseSetupActivity:
    com.athlete.model.ProfileUser profileUser -> a
    com.athlete.model.User currentUser -> b
    org.json.JSONObject jsonObjSend -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onTaskComplete(com.athlete.services.BaseTask) -> a
    void updateUser(java.lang.String) -> a
com.athlete.activity.track.ActivityManual -> com.athlete.activity.track.ActivityManual:
    long distanceInMeters -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void alertDialog() -> a
    void setTitle() -> b
    void access$0(com.athlete.activity.track.ActivityManual) -> a
    void access$1(com.athlete.activity.track.ActivityManual,android.app.Activity) -> a
    void access$2(com.athlete.activity.track.ActivityManual) -> b
    long access$3(com.athlete.activity.track.ActivityManual) -> c
    java.lang.String access$4(com.athlete.activity.track.ActivityManual) -> d
    com.athlete.bl.BaseBl access$5(com.athlete.activity.track.ActivityManual) -> e
    android.content.SharedPreferences access$6(com.athlete.activity.track.ActivityManual) -> f
    void access$7(com.athlete.activity.track.ActivityManual) -> g
com.athlete.activity.track.ActivityManual$1 -> com.athlete.activity.track.a:
    com.athlete.activity.track.ActivityManual this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.ActivityManual$2 -> com.athlete.activity.track.b:
    com.athlete.activity.track.ActivityManual this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.ActivityManual$3 -> com.athlete.activity.track.c:
    com.athlete.activity.track.ActivityManual this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.ActivityManual$4 -> com.athlete.activity.track.d:
    com.athlete.activity.track.ActivityManual this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.ActivityManual$5 -> com.athlete.activity.track.e:
    com.athlete.activity.track.ActivityManual this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.ActivityManual$6 -> com.athlete.activity.track.f:
    com.athlete.activity.track.ActivityManual this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.ActivityManual$7 -> com.athlete.activity.track.g:
    com.athlete.activity.track.ActivityManual this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.athlete.activity.track.ActivityManual$8 -> com.athlete.activity.track.h:
    com.athlete.activity.track.ActivityManual this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.athlete.activity.track.ActivityManual$9 -> com.athlete.activity.track.i:
    com.athlete.activity.track.ActivityManual this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.athlete.activity.track.ActivityMapTrack -> com.athlete.activity.track.ActivityMapTrack:
    com.athlete.google.android.apps.mytracks.content.TrackDataHub trackDataHub -> a
    boolean zoomToMyLocation -> b
    android.location.Location currentLocation -> c
    android.widget.ImageButton myLocationImageButton -> d
    double waypointValue -> e
    double ONE_KM_OR_MI -> f
    boolean isMetric -> g
    com.athlete.activity.track.TabActivityTrack tabactivity -> h
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    boolean showMarker(com.athlete.google.android.apps.mytracks.stats.TripStatistics,com.athlete.google.android.apps.mytracks.stats.TripStatistics,android.location.Location,android.location.Location) -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onClick(android.view.View) -> onClick
    void onLocationStateChanged(com.athlete.google.android.apps.mytracks.content.TrackDataListener$LocationState) -> onLocationStateChanged
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onHeadingChanged(double) -> onHeadingChanged
    void onSelectedTrackChanged(com.athlete.google.android.apps.mytracks.content.Track) -> onSelectedTrackChanged
    void onTrackUpdated(com.athlete.google.android.apps.mytracks.content.Track) -> onTrackUpdated
    void onSampledOutTrackPoint(android.location.Location) -> onSampledOutTrackPoint
    void onSegmentSplit(android.location.Location) -> onSegmentSplit
    void onNewTrackPointsDone() -> onNewTrackPointsDone
    boolean onMetricUnitsChanged(boolean) -> onMetricUnitsChanged
    boolean onReportSpeedChanged(boolean) -> onReportSpeedChanged
    boolean onMinRecordingDistanceChanged(int) -> onMinRecordingDistanceChanged
    void resumeTrackDataHub() -> a
    void updateTrackDataHub() -> b
    boolean isSelectedTrackRecording() -> c
    void updateCurrentLocation() -> d
    boolean isRouteDisplayed() -> isRouteDisplayed
    void access$0(com.athlete.activity.track.ActivityMapTrack) -> a
    com.athlete.google.android.apps.mytracks.MapOverlay access$1(com.athlete.activity.track.ActivityMapTrack) -> b
    boolean access$2(com.athlete.activity.track.ActivityMapTrack) -> c
    void access$3(com.athlete.activity.track.ActivityMapTrack,com.athlete.google.android.apps.mytracks.content.Track) -> a
    com.google.android.maps.MapView access$4(com.athlete.activity.track.ActivityMapTrack) -> d
com.athlete.activity.track.ActivityMapTrack$1 -> com.athlete.activity.track.j:
    com.athlete.activity.track.ActivityMapTrack this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.ActivityMapTrack$2 -> com.athlete.activity.track.k:
    com.athlete.activity.track.ActivityMapTrack this$0 -> a
    com.athlete.google.android.apps.mytracks.content.Track val$track -> b
    void run() -> run
com.athlete.activity.track.ActivityPicker -> com.athlete.activity.track.ActivityPicker:
    kankan.wheel.widget.WheelView distanceUnit -> a
    kankan.wheel.widget.WheelView distance -> b
    double minDistance -> c
    double maxDistance -> d
    double stepAdapter -> e
    int currentItem -> f
    int textSizeForItem -> g
    void onCreate(android.os.Bundle) -> onCreate
    kankan.wheel.widget.WheelView access$0(com.athlete.activity.track.ActivityPicker) -> a
    kankan.wheel.widget.WheelView access$1(com.athlete.activity.track.ActivityPicker) -> b
    void access$2(com.athlete.activity.BaseActivity$TransitionType) -> a
com.athlete.activity.track.ActivityPicker$1 -> com.athlete.activity.track.l:
    com.athlete.activity.track.ActivityPicker this$0 -> a
    void onItemClicked(kankan.wheel.widget.WheelView,int) -> a
com.athlete.activity.track.ActivityPicker$2 -> com.athlete.activity.track.m:
    com.athlete.activity.track.ActivityPicker this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.ActivityPicker$WeightUnitArrayAdapter -> com.athlete.activity.track.n:
    int currentItem -> a
    int currentValue -> b
    com.athlete.activity.track.ActivityPicker this$0 -> c
    void configureTextView(android.widget.TextView) -> a
    android.view.View getItem(int,android.view.View,android.view.ViewGroup) -> a
com.athlete.activity.track.ActivitySplits -> com.athlete.activity.track.ActivitySplits:
    android.widget.ListView listSplit -> a
    com.athlete.adapter.BaseListAdapter adapter -> b
    java.util.List splits -> c
    double maxAvg -> d
    com.athlete.activity.track.TabActivityTrack parentActivity -> e
    java.lang.String type -> f
    int hundredPercent -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    void onResume() -> onResume
    void updateSplits() -> a
    double access$0(com.athlete.activity.track.ActivitySplits) -> a
    java.lang.String access$1(com.athlete.activity.track.ActivitySplits) -> b
    java.util.List access$2(com.athlete.activity.track.ActivitySplits) -> c
com.athlete.activity.track.ActivitySplits$1 -> com.athlete.activity.track.o:
    com.athlete.activity.track.ActivitySplits this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.athlete.activity.track.ActivityTimePicker -> com.athlete.activity.track.ActivityTimePicker:
    kankan.wheel.widget.WheelView hourWeel -> a
    kankan.wheel.widget.WheelView minuteWeel -> b
    kankan.wheel.widget.WheelView secsWeel -> c
    int minValue -> d
    int maxValueHour -> e
    int maxValueMinSec -> f
    int time60 -> g
    int currentDefMinutes -> h
    int textSize -> i
    void onCreate(android.os.Bundle) -> onCreate
    kankan.wheel.widget.WheelView access$0(com.athlete.activity.track.ActivityTimePicker) -> a
    kankan.wheel.widget.WheelView access$1(com.athlete.activity.track.ActivityTimePicker) -> b
    kankan.wheel.widget.WheelView access$2(com.athlete.activity.track.ActivityTimePicker) -> c
    void access$3(com.athlete.activity.BaseActivity$TransitionType) -> a
com.athlete.activity.track.ActivityTimePicker$1 -> com.athlete.activity.track.p:
    com.athlete.activity.track.ActivityTimePicker this$0 -> a
    void onItemClicked(kankan.wheel.widget.WheelView,int) -> a
com.athlete.activity.track.ActivityTimePicker$2 -> com.athlete.activity.track.q:
    com.athlete.activity.track.ActivityTimePicker this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.ActivityTimePicker$WeightAdapter -> com.athlete.activity.track.r:
    int currentItem -> a
    int currentValue -> b
    com.athlete.activity.track.ActivityTimePicker this$0 -> c
    void configureTextView(android.widget.TextView) -> a
    android.view.View getItem(int,android.view.View,android.view.ViewGroup) -> a
com.athlete.activity.track.AlbumStorageDirFactory -> com.athlete.activity.track.s:
    java.io.File getAlbumStorageDir(java.lang.String) -> a
com.athlete.activity.track.BaseAlbumDirFactory -> com.athlete.activity.track.t:
    java.io.File getAlbumStorageDir(java.lang.String) -> a
com.athlete.activity.track.BaseSaveTrackActivity -> com.athlete.activity.track.BaseSaveTrackActivity:
    double distance -> distance
    int typeID -> typeID
    java.lang.Long time -> time
    java.lang.String EXTRA_TRACK_ID -> EXTRA_TRACK_ID
    java.lang.String EXTRA_NEW_TRACK -> EXTRA_NEW_TRACK
    java.lang.String TAG -> TAG
    java.lang.Long trackId -> trackId
    com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils myTracksProviderUtils -> myTracksProviderUtils
    com.athlete.google.android.apps.mytracks.content.Track track -> track
    android.widget.EditText name -> name
    android.widget.EditText description -> description
    android.widget.TextView mTxtRunType -> mTxtRunType
    android.widget.TextView mTxtRouteView -> mTxtRouteView
    android.widget.TextView mTxtTitle -> mTxtTitle
    java.lang.String mFBAcces -> mFBAcces
    android.widget.CheckBox checkFB -> checkFB
    void onCreate(android.os.Bundle) -> onCreate
    void setAdapterForDialog() -> setAdapterForDialog
    void setAdapterForDialogPrivacy() -> setAdapterForDialogPrivacy
com.athlete.activity.track.BaseSaveTrackActivity$1 -> com.athlete.activity.track.u:
    com.athlete.activity.track.BaseSaveTrackActivity this$0 -> a
    com.athlete.activity.track.BaseSaveTrackActivity$Item[] val$items -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.athlete.activity.track.BaseSaveTrackActivity$2 -> com.athlete.activity.track.v:
    com.athlete.activity.track.BaseSaveTrackActivity this$0 -> a
    com.athlete.activity.track.BaseSaveTrackActivity$Item[] val$items -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.athlete.activity.track.BaseSaveTrackActivity$3 -> com.athlete.activity.track.w:
    com.athlete.activity.track.BaseSaveTrackActivity this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.athlete.activity.track.BaseSaveTrackActivity$4 -> com.athlete.activity.track.x:
    com.athlete.activity.track.BaseSaveTrackActivity this$0 -> a
    java.lang.String[] val$items -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.athlete.activity.track.BaseSaveTrackActivity$Item -> com.athlete.activity.track.y:
    java.lang.String text -> a
    int icon -> b
    java.lang.String toString() -> toString
com.athlete.activity.track.BaseTabTrack -> com.athlete.activity.track.BaseTabTrack:
    com.athlete.bl.UserBL userBL -> a
    com.athlete.bl.BaseOperationsBL baseOperationsBL -> b
    com.athlete.google.android.apps.mytracks.content.TrackDataHub trackDataHub -> c
    com.athlete.google.android.apps.mytracks.TrackController trackController -> d
    long recordingTrackId -> e
    long prevMaxMovingTime -> f
    com.athlete.google.android.apps.mytracks.services.TrackRecordingServiceConnection trackRecordingServiceConnection -> g
    android.location.Location lastLocation -> h
    android.location.Location prevLocation -> i
    android.location.Location lastLocationPause -> j
    android.widget.TabHost tabs -> k
    boolean isStop -> l
    boolean isAutopause -> m
    boolean startNewRecording -> n
    boolean recordingTrackPaused -> o
    boolean isMetric -> p
    boolean isAutoPauseCheck -> q
    android.widget.LinearLayout linearGPS -> r
    android.widget.LinearLayout$LayoutParams layoutGPSParams -> s
    java.util.Timer mTimerAutoPause -> t
    java.util.Timer mTimerCountDown -> u
    int mSecond -> v
    int minRecordingDistance -> w
    int minRequiredAccuracy -> x
    int time -> y
    int countGPSPosition -> z
    com.athlete.activity.track.ActivityMapTrack trackMapTrack -> A
    com.athlete.activity.track.ActivitySplits activitySplits -> B
    android.content.SharedPreferences baseShared -> C
    android.widget.TextView txtCountDown -> D
    android.media.MediaPlayer mSoundPlayer -> E
    java.util.HashMap rawIDforTime -> F
    java.lang.String defType -> G
    com.athlete.model.Split mSplit -> H
    java.util.List mSplits -> I
    double distanceForRunUpdate -> J
    double ONE_VALUE -> K
    double prevMaxTotalDistance -> L
    double firstElevation -> M
    boolean isNotification -> N
    com.athlete.model.User currenUser -> O
    com.athlete.model.ProfileUser profileUser -> P
    com.athlete.activity.track.AlbumStorageDirFactory mAlbumStorageDirFactory -> Q
    java.io.File file -> S
    java.lang.String mCurrentPhotoPath -> T
    boolean pauseAfterPhoto -> R
    void addPhoto() -> a
    void handleBigCameraPhoto() -> b
    void addPictureMode() -> c
    boolean isSelectedTrackRecording() -> d
    boolean isSelectedTrackPaused() -> e
    void paused2resume() -> f
    void recording2paused() -> g
    java.lang.String getCurrentPhotoPath() -> h
    void setCurrentPhotoPath(java.lang.String) -> a
    void access$0(com.athlete.activity.track.BaseTabTrack) -> a
com.athlete.activity.track.BaseTabTrack$1 -> com.athlete.activity.track.z:
    com.athlete.activity.track.BaseTabTrack this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.athlete.activity.track.FroyoAlbumDirFactory -> com.athlete.activity.track.aa:
    java.io.File getAlbumStorageDir(java.lang.String) -> a
com.athlete.activity.track.MockGpsProviderActivity -> com.athlete.activity.track.MockGpsProviderActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
com.athlete.activity.track.TabActivityTrack -> com.athlete.activity.track.TabActivityTrack:
    int timeOutForPause -> S
    int timeOutForGPSFOUND -> T
    int accurate -> U
    int countOfSectors -> V
    int oneSector -> W
    double oneMinute -> X
    double double100 -> Y
    int countDown5 -> Z
    int countDown10 -> aa
    int countDown30 -> ab
    int countSecondRaw -> ac
    int countSecondRawMore100 -> ad
    int startForRaws -> ae
    java.util.ArrayList pathes -> af
    android.widget.TextView txtNotifyCamera -> ag
    boolean isNoFix -> ah
    java.lang.Boolean isTrackStartedFinish -> ai
    java.lang.String message -> aj
    android.widget.TextView messageTextView -> ak
    int lostTime -> al
    java.util.Timer mTimerLostSignal -> am
    double weightDeff -> an
    com.athlete.google.android.apps.mytracks.stats.TripStatistics lastTripStatistics -> ao
    com.athlete.google.android.apps.mytracks.stats.TripStatistics prevTrackStatistics -> ap
    android.view.View$OnClickListener stopListener -> aq
    android.content.SharedPreferences$OnSharedPreferenceChangeListener sharedPreferenceChangeListener -> ar
    android.view.View$OnClickListener recordListener -> as
    java.lang.Runnable bindChangedCallback -> at
    int[] $SWITCH_TABLE$com$athlete$google$android$apps$mytracks$content$TrackDataListener$LocationState -> au
    void onBackPressed() -> onBackPressed
    void onCreate(android.os.Bundle) -> onCreate
    void setMapActivity(com.athlete.activity.track.ActivityMapTrack) -> a
    void setActivitySplits(com.athlete.activity.track.ActivitySplits) -> a
    void onResume() -> onResume
    android.media.MediaPlayer getMediaPlayer() -> i
    java.util.List getListOfSplit() -> j
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    com.athlete.google.android.apps.mytracks.content.TrackDataHub getTrackDataHub() -> k
    java.util.HashMap getHashRawID() -> l
    com.athlete.google.android.apps.mytracks.stats.TripStatistics getTripStatistics() -> m
    android.view.View prepareTabView(int,java.lang.String) -> a
    void onDestroy() -> onDestroy
    void onLocationStateChanged(com.athlete.google.android.apps.mytracks.content.TrackDataListener$LocationState) -> onLocationStateChanged
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void setAccuratedGPSTitle(int) -> b
    void onHeadingChanged(double) -> onHeadingChanged
    void onSelectedTrackChanged(com.athlete.google.android.apps.mytracks.content.Track) -> onSelectedTrackChanged
    void onTrackUpdated(com.athlete.google.android.apps.mytracks.content.Track) -> onTrackUpdated
    void startCountDownTimer(int) -> a
    void clearTrackPoints() -> clearTrackPoints
    void onSampledInTrackPoint(android.location.Location) -> onSampledInTrackPoint
    void onSampledOutTrackPoint(android.location.Location) -> onSampledOutTrackPoint
    void onSegmentSplit(android.location.Location) -> onSegmentSplit
    void onNewTrackPointsDone() -> onNewTrackPointsDone
    boolean onMetricUnitsChanged(boolean) -> onMetricUnitsChanged
    boolean onReportSpeedChanged(boolean) -> onReportSpeedChanged
    boolean onMinRecordingDistanceChanged(int) -> onMinRecordingDistanceChanged
    void setSecondsHashMap() -> n
    java.util.ArrayList access$0(com.athlete.activity.track.TabActivityTrack) -> a
    com.athlete.google.android.apps.mytracks.stats.TripStatistics access$1(com.athlete.activity.track.TabActivityTrack) -> b
    void access$2(com.athlete.activity.track.TabActivityTrack) -> c
    void access$3(com.athlete.activity.track.TabActivityTrack) -> d
    void access$4(com.athlete.activity.track.TabActivityTrack,java.lang.Boolean) -> a
    void access$5$acd1cab(com.athlete.activity.track.TabActivityTrack) -> e
    int[] $SWITCH_TABLE$com$athlete$google$android$apps$mytracks$content$TrackDataListener$LocationState() -> o
    java.lang.String access$7(com.athlete.activity.track.TabActivityTrack) -> f
    android.widget.TextView access$8(com.athlete.activity.track.TabActivityTrack) -> g
    void access$9(com.athlete.activity.track.TabActivityTrack,int) -> a
    void access$10(com.athlete.activity.track.TabActivityTrack,com.athlete.google.android.apps.mytracks.stats.TripStatistics) -> a
    com.athlete.google.android.apps.mytracks.stats.TripStatistics access$11(com.athlete.activity.track.TabActivityTrack) -> h
    void access$12(com.athlete.activity.track.TabActivityTrack,com.athlete.google.android.apps.mytracks.stats.TripStatistics) -> b
    void access$13(com.athlete.activity.track.TabActivityTrack) -> i
    void access$14(com.athlete.activity.track.TabActivityTrack) -> j
    void access$15(com.athlete.activity.track.TabActivityTrack) -> k
    void access$16(com.athlete.activity.track.TabActivityTrack,com.athlete.activity.track.TabActivityTrack) -> a
    int access$17(com.athlete.activity.track.TabActivityTrack) -> l
    void access$18(com.athlete.activity.track.TabActivityTrack,int) -> b
com.athlete.activity.track.TabActivityTrack$1 -> com.athlete.activity.track.ab:
    com.athlete.activity.track.TabActivityTrack this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.TabActivityTrack$10 -> com.athlete.activity.track.ac:
    com.athlete.activity.track.TabActivityTrack this$0 -> a
    android.location.Location val$location -> b
    void run() -> run
com.athlete.activity.track.TabActivityTrack$11 -> com.athlete.activity.track.ad:
    com.athlete.activity.track.TabActivityTrack this$0 -> a
    com.athlete.google.android.apps.mytracks.content.Track val$track -> b
    void run() -> run
com.athlete.activity.track.TabActivityTrack$12 -> com.athlete.activity.track.ae:
    com.athlete.activity.track.TabActivityTrack this$0 -> a
    void run() -> run
com.athlete.activity.track.TabActivityTrack$13 -> com.athlete.activity.track.af:
    com.athlete.activity.track.TabActivityTrack this$0 -> a
    void run() -> run
com.athlete.activity.track.TabActivityTrack$14 -> com.athlete.activity.track.ag:
    com.athlete.activity.track.TabActivityTrack this$0 -> a
    void run() -> run
    com.athlete.activity.track.TabActivityTrack access$0(com.athlete.activity.track.TabActivityTrack$14) -> a
com.athlete.activity.track.TabActivityTrack$14$1 -> com.athlete.activity.track.ah:
    com.athlete.activity.track.TabActivityTrack$14 this$1 -> a
    void run() -> run
com.athlete.activity.track.TabActivityTrack$2 -> com.athlete.activity.track.ai:
    com.athlete.activity.track.TabActivityTrack this$0 -> a
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
com.athlete.activity.track.TabActivityTrack$3 -> com.athlete.activity.track.aj:
    com.athlete.activity.track.TabActivityTrack this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.TabActivityTrack$4 -> com.athlete.activity.track.ak:
    com.athlete.activity.track.TabActivityTrack this$0 -> a
    void run() -> run
    com.athlete.activity.track.TabActivityTrack access$0(com.athlete.activity.track.TabActivityTrack$4) -> a
com.athlete.activity.track.TabActivityTrack$4$1 -> com.athlete.activity.track.al:
    com.athlete.activity.track.TabActivityTrack$4 this$1 -> a
    void run() -> run
com.athlete.activity.track.TabActivityTrack$4$2 -> com.athlete.activity.track.am:
    com.athlete.activity.track.TabActivityTrack$4 this$1 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.athlete.activity.track.TabActivityTrack$5 -> com.athlete.activity.track.an:
    com.athlete.activity.track.TabActivityTrack this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.TabActivityTrack$6 -> com.athlete.activity.track.ao:
    com.athlete.activity.track.TabActivityTrack this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.TabActivityTrack$7 -> com.athlete.activity.track.ap:
    com.athlete.activity.track.TabActivityTrack this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.TabActivityTrack$8 -> com.athlete.activity.track.aq:
    com.athlete.activity.track.TabActivityTrack this$0 -> a
    void run() -> run
com.athlete.activity.track.TabActivityTrack$9 -> com.athlete.activity.track.ar:
    com.athlete.activity.track.TabActivityTrack this$0 -> a
    void run() -> run
com.athlete.activity.track.details.ActivityGallery -> com.athlete.activity.track.details.ActivityGallery:
    java.util.List mPages -> a
    android.support.v4.view.ViewPager mPager -> b
    com.athlete.control.viewpagerindicator.CirclePageIndicator mCirclePageIndicator -> c
    java.lang.String pageColor -> d
    java.lang.String fillColor -> e
    int currentItem -> f
    int strokeWidth -> g
    java.util.List postPictures -> h
    void onCreate(android.os.Bundle) -> onCreate
com.athlete.activity.track.details.ActivityGallery$1 -> com.athlete.activity.track.details.a:
    com.athlete.activity.track.details.ActivityGallery this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.details.ActivityGallery$2 -> com.athlete.activity.track.details.b:
    com.athlete.activity.track.details.ActivityGallery this$0 -> a
    android.view.View val$view -> b
    void onLoadingStarted() -> a
    void onLoadingComplete() -> b
com.athlete.activity.track.details.ActivityRouteDetails -> com.athlete.activity.track.details.ActivityRouteDetails:
    boolean metricUnits -> a
    android.widget.ImageButton imageBtnStar -> b
    android.widget.TextView mTxtTitle -> c
    android.widget.TextView mTxtTime -> d
    android.widget.TextView mTxtClimbOrCalories -> e
    android.widget.TextView mTxtClimbOrCaloriesLabel -> f
    android.widget.TextView mTxtDistanceUnit -> g
    com.athlete.google.android.apps.mytracks.content.TrackDataHub trackDataHub -> h
    android.widget.SeekBar seekBar -> i
    int size3dp -> j
    boolean zoomToMyLocation -> k
    android.widget.FrameLayout graphFrame -> l
    org.achartengine.model.XYMultipleSeriesDataset mDataset -> m
    org.achartengine.renderer.XYMultipleSeriesRenderer mRenderer -> n
    org.achartengine.model.XYSeries mCurrentSeries -> o
    org.achartengine.renderer.XYSeriesRenderer mCurrentRenderer -> p
    java.lang.String mDateFormat -> q
    org.achartengine.GraphicalView mChartView -> r
    com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils$DoubleBufferedLocationFactory locationFactory -> s
    java.util.List locations -> t
    java.util.List distance -> u
    java.util.List time -> v
    java.util.List speed -> w
    double totalDistance -> x
    long totalTime -> y
    long trackID -> z
    java.util.List elevationArr -> A
    double maxElevation -> B
    double maxSpeed -> C
    double minSpeed -> D
    com.athlete.model.User user -> E
    double minElevation -> F
    java.util.List avgArr -> G
    com.athlete.model.WorkOut workOut -> H
    com.athlete.bl.WorkoutBL workoutBL -> I
    android.widget.RelativeLayout progressBar -> J
    android.widget.ImageView splash -> K
    android.view.animation.Animation animLarge -> L
    double oneMinute -> M
    double double100 -> S
    double maxDiff -> T
    void onBackPressed() -> onBackPressed
    void onResume() -> onResume
    void onCreate(android.os.Bundle) -> onCreate
    void onStop() -> onStop
    void getLocationArr() -> a
    void setTextViewByProgress(int) -> a
    void onLocationStateChanged(com.athlete.google.android.apps.mytracks.content.TrackDataListener$LocationState) -> onLocationStateChanged
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onHeadingChanged(double) -> onHeadingChanged
    void onSelectedTrackChanged(com.athlete.google.android.apps.mytracks.content.Track) -> onSelectedTrackChanged
    void onTrackUpdated(com.athlete.google.android.apps.mytracks.content.Track) -> onTrackUpdated
    boolean isSelectedTrackRecording() -> b
    void onSampledOutTrackPoint(android.location.Location) -> onSampledOutTrackPoint
    void onSegmentSplit(android.location.Location) -> onSegmentSplit
    void onNewTrackPointsDone() -> onNewTrackPointsDone
    boolean onMetricUnitsChanged(boolean) -> onMetricUnitsChanged
    boolean onReportSpeedChanged(boolean) -> onReportSpeedChanged
    boolean onMinRecordingDistanceChanged(int) -> onMinRecordingDistanceChanged
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void prepareMyCharts() -> c
    void setMaxMinData(boolean) -> a
    java.util.List generalizedPoints(java.util.List) -> a
    java.util.List generHeight(java.util.List,boolean) -> a
    java.util.List smoothes(java.util.List) -> b
    void access$0(com.athlete.activity.track.details.ActivityRouteDetails) -> a
    void access$1(com.athlete.activity.track.details.ActivityRouteDetails,int) -> a
    void access$2(com.athlete.activity.track.details.ActivityRouteDetails,com.athlete.google.android.apps.mytracks.content.Track) -> a
    boolean access$3(com.athlete.activity.track.details.ActivityRouteDetails) -> b
    android.widget.ImageButton access$4(com.athlete.activity.track.details.ActivityRouteDetails) -> c
    android.widget.ImageView access$5(com.athlete.activity.track.details.ActivityRouteDetails) -> d
    android.widget.RelativeLayout access$6(com.athlete.activity.track.details.ActivityRouteDetails) -> e
    com.athlete.model.WorkOut access$7(com.athlete.activity.track.details.ActivityRouteDetails) -> f
    com.athlete.bl.WorkoutBL access$8(com.athlete.activity.track.details.ActivityRouteDetails) -> g
com.athlete.activity.track.details.ActivityRouteDetails$1 -> com.athlete.activity.track.details.c:
    com.athlete.activity.track.details.ActivityRouteDetails this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.details.ActivityRouteDetails$2 -> com.athlete.activity.track.details.d:
    com.athlete.activity.track.details.ActivityRouteDetails this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.details.ActivityRouteDetails$3 -> com.athlete.activity.track.details.e:
    com.athlete.activity.track.details.ActivityRouteDetails this$0 -> a
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
com.athlete.activity.track.details.ActivityRouteDetails$4 -> com.athlete.activity.track.details.f:
    com.athlete.activity.track.details.ActivityRouteDetails this$0 -> a
    com.athlete.google.android.apps.mytracks.content.Track val$track -> b
    void run() -> run
com.athlete.activity.track.details.ActivityRouteDetails$5 -> com.athlete.activity.track.details.g:
    com.athlete.activity.track.details.ActivityRouteDetails this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.track.details.ActivityRouteDetails$Coordinate -> com.athlete.activity.track.details.h:
    double x -> b
    double y -> c
    com.athlete.activity.track.details.ActivityRouteDetails this$0 -> a
    double getX() -> a
    double getY() -> b
    double access$0(com.athlete.activity.track.details.ActivityRouteDetails$Coordinate) -> a
    double access$1(com.athlete.activity.track.details.ActivityRouteDetails$Coordinate) -> b
com.athlete.activity.track.details.ActivitySplitsDetails -> com.athlete.activity.track.details.ActivitySplitsDetails:
    android.widget.ListView listSplit -> a
    com.athlete.adapter.BaseListAdapter adapter -> b
    double maxAvg -> c
    java.lang.String type -> d
    com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils myTracksProviderUtils -> e
    com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils$DoubleBufferedLocationFactory locationFactory -> f
    double totalDistance -> g
    long totalTime -> h
    long prevMaxMovingTime -> i
    long trackID -> j
    com.athlete.model.Split mSplit -> k
    java.util.List mSplits -> l
    double firstElevation -> m
    double prevMaxTotalDistance -> n
    double ONE_KM -> o
    double metersInKm -> p
    double minute -> q
    double hundred -> r
    android.widget.TextView mTxtTitle -> s
    com.athlete.model.User user -> t
    com.athlete.model.WorkOut workout -> u
    com.athlete.model.Feed feed -> v
    android.widget.RelativeLayout progressBar -> w
    android.widget.ImageView splash -> x
    android.view.animation.Animation animLarge -> y
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void updateSplits() -> a
    void getLocationArr() -> b
    void access$0(com.athlete.activity.track.details.ActivitySplitsDetails) -> a
    void access$1(com.athlete.activity.track.details.ActivitySplitsDetails) -> b
    void access$2(com.athlete.activity.track.details.ActivitySplitsDetails) -> c
    com.athlete.bl.WorkoutBL access$3(com.athlete.activity.track.details.ActivitySplitsDetails) -> d
    com.athlete.model.WorkOut access$4(com.athlete.activity.track.details.ActivitySplitsDetails) -> e
    com.athlete.bl.FeedBL access$5(com.athlete.activity.track.details.ActivitySplitsDetails) -> f
    com.athlete.model.Feed access$6(com.athlete.activity.track.details.ActivitySplitsDetails) -> g
    com.athlete.bl.UserBL access$7(com.athlete.activity.track.details.ActivitySplitsDetails) -> h
    double access$8(com.athlete.activity.track.details.ActivitySplitsDetails) -> i
    double access$9(com.athlete.activity.track.details.ActivitySplitsDetails) -> j
    java.lang.String access$10(com.athlete.activity.track.details.ActivitySplitsDetails) -> k
    java.util.List access$11(com.athlete.activity.track.details.ActivitySplitsDetails) -> l
com.athlete.activity.track.details.ActivitySplitsDetails$1 -> com.athlete.activity.track.details.i:
    com.athlete.activity.track.details.ActivitySplitsDetails this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.details.ActivitySplitsDetails$2 -> com.athlete.activity.track.details.j:
    com.athlete.activity.track.details.ActivitySplitsDetails this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.details.ActivitySplitsDetails$3 -> com.athlete.activity.track.details.k:
    com.athlete.activity.track.details.ActivitySplitsDetails this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.athlete.activity.track.details.ActivitySplitsDetails$4 -> com.athlete.activity.track.details.l:
    com.athlete.activity.track.details.ActivitySplitsDetails this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.athlete.activity.track.details.ActivitySplitsDetails$5 -> com.athlete.activity.track.details.m:
    com.athlete.activity.track.details.ActivitySplitsDetails this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.track.details.ActivitySplitsDetails$6 -> com.athlete.activity.track.details.n:
    com.athlete.activity.track.details.ActivitySplitsDetails this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.athlete.activity.track.details.AddPhotoAndInitActivity -> com.athlete.activity.track.details.AddPhotoAndInitActivity:
    java.lang.String mCurrentPhotoPath -> S
    com.athlete.activity.track.details.AlbumStorageDirFactory mAlbumStorageDirFactory -> T
    java.io.File file -> U
    boolean metricUnits -> V
    com.athlete.google.android.apps.mytracks.content.Track mTrack -> W
    int workOutID -> X
    com.athlete.model.WorkOut workOut -> Y
    com.athlete.model.Feed feed -> Z
    com.athlete.model.User user -> aa
    com.athlete.model.User currentUser -> ab
    com.athlete.bl.WorkoutBL workoutBL -> ac
    com.athlete.bl.UserBL userBL -> ad
    com.athlete.bl.FeedBL feedBL -> ae
    com.athlete.bl.BaseOperationsBL baseOperationsBL -> af
    java.util.List overlays -> ag
    android.widget.ImageView mImageRunType -> ah
    android.widget.HorizontalScrollView horizontalScrollView -> a
    android.widget.LinearLayout layoutPicture -> b
    android.widget.LinearLayout layoutComment -> c
    android.widget.ImageButton imageBtnCameraGalleryNoPhoto -> d
    android.widget.ImageButton imageBtnCameraGallery -> e
    android.widget.ImageButton imageBtnDelete -> f
    android.widget.EditText edTxtComment -> g
    android.widget.TextView mTxtTitle -> h
    android.widget.TextView mTxtCountLikes -> i
    android.widget.TextView mTxtTitleRoute -> j
    android.widget.TextView mTxtTimeRoute -> k
    android.widget.TextView mTxtBaloon -> l
    android.widget.TextView mTxtTime -> m
    android.widget.TextView mTxtTimeLabel -> n
    android.widget.TextView mTxtClimbOrCalories -> o
    android.widget.TextView mTxtClimbOrCaloriesLabel -> p
    android.widget.RelativeLayout$LayoutParams layoutParamsMap -> q
    java.util.List comments -> r
    java.util.List postPictures -> s
    com.athlete.google.android.apps.mytracks.content.TrackDataHub trackDataHub -> t
    com.nostra13.universalimageloader.core.ImageLoader imageLoader -> u
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> v
    int corner3dp -> w
    int size50dp -> x
    int size35dp -> y
    int size40dp -> z
    int size100dp -> A
    int size120dp -> B
    android.content.SharedPreferences baseShared -> C
    android.widget.LinearLayout$LayoutParams paramsAvaForward -> D
    android.widget.RelativeLayout$LayoutParams paramsHorisontalScroll -> E
    com.athlete.control.RoundedImageView roundedImageView -> F
    android.widget.RelativeLayout progressBar -> G
    android.widget.ImageView splash -> H
    android.view.animation.Animation animLarge -> I
    android.widget.ScrollView scrollVertical -> J
    double climb -> K
    com.athlete.services.AsyncTaskManager asyncTaskManager -> L
    boolean isClimb -> M
    void hideMap() -> a
    void setCommentList(android.content.Context) -> a
    void addCommentBody() -> b
    java.lang.String getUserName() -> c
    java.lang.String getUserID() -> d
    java.lang.String getApikey() -> e
    void handleBigCameraPhoto$3b82bbab(java.lang.String) -> a
    void getPicture(java.lang.String) -> b
    void setPictureList() -> f
    void setCurrentPhotoPath(java.lang.String) -> c
    void setAlbumStorageDirFactory(com.athlete.activity.track.details.AlbumStorageDirFactory) -> a
    com.athlete.google.android.apps.mytracks.MapOverlay getMapOverlay() -> g
    void setMapOverlay(com.athlete.google.android.apps.mytracks.MapOverlay) -> a
    boolean isMetricUnits() -> h
    void setMetricUnits(boolean) -> a
    com.athlete.google.android.apps.mytracks.content.Track getmTrack() -> i
    void setmTrack(com.athlete.google.android.apps.mytracks.content.Track) -> a
    int getWorkOutID() -> j
    void setWorkOutID(int) -> a
    com.athlete.model.WorkOut getWorkOut() -> k
    void setWorkOut(com.athlete.model.WorkOut) -> a
    com.athlete.model.Feed getFeed() -> l
    void setFeed(com.athlete.model.Feed) -> a
    com.athlete.model.User getCurrentUser() -> m
    void setCurrentUser(com.athlete.model.User) -> a
    com.athlete.model.User getUser() -> n
    void setUser(com.athlete.model.User) -> b
    com.athlete.bl.WorkoutBL getWorkoutBL() -> o
    void setWorkoutBL(com.athlete.bl.WorkoutBL) -> a
    com.athlete.bl.UserBL getUserBL() -> p
    void setUserBL(com.athlete.bl.UserBL) -> a
    com.athlete.bl.FeedBL getFeedBL() -> q
    void setFeedBL(com.athlete.bl.FeedBL) -> a
    com.athlete.bl.BaseOperationsBL getBaseOperationsBL() -> r
    void setBaseOperationsBL(com.athlete.bl.BaseOperationsBL) -> a
    java.util.List getOverlays() -> s
    void setOverlays(java.util.List) -> a
    android.widget.ImageView getmImageRunType() -> t
    void setmImageRunType(android.widget.ImageView) -> a
    void access$0(com.athlete.activity.track.details.AddPhotoAndInitActivity) -> a
    void access$1(com.athlete.activity.track.details.AddPhotoAndInitActivity) -> b
com.athlete.activity.track.details.AddPhotoAndInitActivity$1 -> com.athlete.activity.track.details.o:
    com.athlete.activity.track.details.AddPhotoAndInitActivity this$0 -> a
    android.content.Context val$ctx -> b
    com.athlete.model.Comment val$comment -> c
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.details.AddPhotoAndInitActivity$2 -> com.athlete.activity.track.details.p:
    com.athlete.activity.track.details.AddPhotoAndInitActivity this$0 -> a
    java.lang.String val$postID -> b
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.track.details.AddPhotoAndInitActivity$3 -> com.athlete.activity.track.details.q:
    com.athlete.activity.track.details.AddPhotoAndInitActivity this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.track.details.AddPhotoAndInitActivity$4 -> com.athlete.activity.track.details.r:
    com.athlete.activity.track.details.AddPhotoAndInitActivity this$0 -> a
    int val$j -> b
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.details.AddPhotoAndInitActivity$5 -> com.athlete.activity.track.details.s:
    com.athlete.activity.track.details.AddPhotoAndInitActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.athlete.activity.track.details.AlbumStorageDirFactory -> com.athlete.activity.track.details.t:
    java.io.File getAlbumStorageDir(java.lang.String) -> a
com.athlete.activity.track.details.BaseActivityMap -> com.athlete.activity.track.details.BaseActivityMap:
    com.google.android.maps.MapView mapView -> N
    com.athlete.google.android.apps.mytracks.MapOverlay mapOverlay -> O
    double lanSpan -> a
    double lonSpan -> b
    boolean keepMyLocationVisible -> P
    com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils myTracksProviderUtils -> Q
    void onCreate(android.os.Bundle) -> onCreate
    java.lang.String getURLHost() -> u
    java.lang.String getPublicKey() -> v
    java.lang.String getPrivateKey() -> w
    boolean isVisible(android.location.Location) -> a
    void showTrack(com.athlete.google.android.apps.mytracks.content.Track) -> b
    void onLocationStateChanged(com.athlete.google.android.apps.mytracks.content.TrackDataListener$LocationState) -> onLocationStateChanged
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onHeadingChanged(double) -> onHeadingChanged
    void onSelectedTrackChanged(com.athlete.google.android.apps.mytracks.content.Track) -> onSelectedTrackChanged
    void onTrackUpdated(com.athlete.google.android.apps.mytracks.content.Track) -> onTrackUpdated
    void clearTrackPoints() -> clearTrackPoints
    void onSampledInTrackPoint(android.location.Location) -> onSampledInTrackPoint
    void onSampledOutTrackPoint(android.location.Location) -> onSampledOutTrackPoint
    void onSegmentSplit(android.location.Location) -> onSegmentSplit
    void onNewTrackPointsDone() -> onNewTrackPointsDone
    boolean onMetricUnitsChanged(boolean) -> onMetricUnitsChanged
    boolean onReportSpeedChanged(boolean) -> onReportSpeedChanged
    boolean onMinRecordingDistanceChanged(int) -> onMinRecordingDistanceChanged
com.athlete.activity.track.details.BaseAlbumDirFactory -> com.athlete.activity.track.details.u:
    java.io.File getAlbumStorageDir(java.lang.String) -> a
com.athlete.activity.track.details.BaseTrackDetails -> com.athlete.activity.track.details.BaseTrackDetails:
    java.util.ArrayList likes -> S
    void onCreate(android.os.Bundle) -> onCreate
    void onStop() -> onStop
    void onResume() -> onResume
    void checkFeed(java.lang.String) -> d
    void initFeed() -> z
    void initFeedCorrect() -> A
    void showProgress() -> B
    void onPause() -> onPause
    void pauseTrackDataHub() -> C
    boolean isSelectedTrackRecording() -> D
    void onStart() -> onStart
    void addPhoto() -> x
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void setTxtLikes() -> E
    void setClimbOrCalories() -> F
    void onLocationStateChanged(com.athlete.google.android.apps.mytracks.content.TrackDataListener$LocationState) -> onLocationStateChanged
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onHeadingChanged(double) -> onHeadingChanged
    void onSelectedTrackChanged(com.athlete.google.android.apps.mytracks.content.Track) -> onSelectedTrackChanged
    void onTrackUpdated(com.athlete.google.android.apps.mytracks.content.Track) -> onTrackUpdated
    void onSampledOutTrackPoint(android.location.Location) -> onSampledOutTrackPoint
    void onSegmentSplit(android.location.Location) -> onSegmentSplit
    void onNewTrackPointsDone() -> onNewTrackPointsDone
    boolean onMetricUnitsChanged(boolean) -> onMetricUnitsChanged
    boolean onReportSpeedChanged(boolean) -> onReportSpeedChanged
    boolean onMinRecordingDistanceChanged(int) -> onMinRecordingDistanceChanged
    void access$0(com.athlete.activity.track.details.BaseTrackDetails) -> a
    void access$1(com.athlete.activity.track.details.BaseTrackDetails) -> b
    void access$2(com.athlete.activity.track.details.BaseTrackDetails) -> c
    void access$3(com.athlete.activity.track.details.BaseTrackDetails) -> d
    void access$4(com.athlete.activity.track.details.BaseTrackDetails) -> e
    void access$5(com.athlete.activity.track.details.BaseTrackDetails) -> f
    void access$6(com.athlete.activity.track.details.BaseTrackDetails) -> g
    void access$7(com.athlete.activity.track.details.BaseTrackDetails) -> h
    void access$8(com.athlete.activity.track.details.BaseTrackDetails) -> i
    void access$9(com.athlete.activity.track.details.BaseTrackDetails,com.athlete.model.Comment,int) -> a
    void access$10(com.athlete.activity.track.details.BaseTrackDetails) -> j
    java.util.ArrayList access$11(com.athlete.activity.track.details.BaseTrackDetails) -> k
    void access$12(com.athlete.activity.track.details.BaseTrackDetails) -> l
    void access$13(com.athlete.activity.track.details.BaseTrackDetails,com.athlete.google.android.apps.mytracks.content.Track) -> a
    boolean access$14(com.athlete.activity.track.details.BaseTrackDetails) -> m
com.athlete.activity.track.details.BaseTrackDetails$1 -> com.athlete.activity.track.details.v:
    com.athlete.activity.track.details.BaseTrackDetails this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.track.details.BaseTrackDetails$10 -> com.athlete.activity.track.details.w:
    com.athlete.activity.track.details.BaseTrackDetails this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.athlete.activity.track.details.BaseTrackDetails$11 -> com.athlete.activity.track.details.x:
    com.athlete.activity.track.details.BaseTrackDetails this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.athlete.activity.track.details.BaseTrackDetails$12 -> com.athlete.activity.track.details.y:
    com.athlete.activity.track.details.BaseTrackDetails this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.track.details.BaseTrackDetails$13 -> com.athlete.activity.track.details.z:
    com.athlete.activity.track.details.BaseTrackDetails this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.track.details.BaseTrackDetails$14 -> com.athlete.activity.track.details.aa:
    com.athlete.activity.track.details.BaseTrackDetails this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.details.BaseTrackDetails$15 -> com.athlete.activity.track.details.ab:
    com.athlete.activity.track.details.BaseTrackDetails this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.details.BaseTrackDetails$16 -> com.athlete.activity.track.details.ac:
    com.athlete.activity.track.details.BaseTrackDetails this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.athlete.activity.track.details.BaseTrackDetails$17 -> com.athlete.activity.track.details.ad:
    com.athlete.activity.track.details.BaseTrackDetails this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.details.BaseTrackDetails$18 -> com.athlete.activity.track.details.ae:
    com.athlete.activity.track.details.BaseTrackDetails this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.track.details.BaseTrackDetails$19 -> com.athlete.activity.track.details.af:
    com.athlete.activity.track.details.BaseTrackDetails this$0 -> a
    int val$position -> b
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.track.details.BaseTrackDetails$2 -> com.athlete.activity.track.details.ag:
    com.athlete.activity.track.details.BaseTrackDetails this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.track.details.BaseTrackDetails$20 -> com.athlete.activity.track.details.ah:
    com.athlete.activity.track.details.BaseTrackDetails this$0 -> a
    java.lang.Void doInBackground$10299ca() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.activity.track.details.BaseTrackDetails$21 -> com.athlete.activity.track.details.ai:
    com.athlete.activity.track.details.BaseTrackDetails this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.track.details.BaseTrackDetails$22 -> com.athlete.activity.track.details.aj:
    com.athlete.activity.track.details.BaseTrackDetails this$0 -> a
    com.athlete.google.android.apps.mytracks.content.Track val$track -> b
    void run() -> run
com.athlete.activity.track.details.BaseTrackDetails$3 -> com.athlete.activity.track.details.ak:
    com.athlete.activity.track.details.BaseTrackDetails this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.details.BaseTrackDetails$4 -> com.athlete.activity.track.details.al:
    com.athlete.activity.track.details.BaseTrackDetails this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.details.BaseTrackDetails$5 -> com.athlete.activity.track.details.am:
    com.athlete.activity.track.details.BaseTrackDetails this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.details.BaseTrackDetails$6 -> com.athlete.activity.track.details.an:
    com.athlete.activity.track.details.BaseTrackDetails this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.details.BaseTrackDetails$7 -> com.athlete.activity.track.details.ao:
    com.athlete.activity.track.details.BaseTrackDetails this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.details.BaseTrackDetails$8 -> com.athlete.activity.track.details.ap:
    com.athlete.activity.track.details.BaseTrackDetails this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.details.BaseTrackDetails$9 -> com.athlete.activity.track.details.aq:
    com.athlete.activity.track.details.BaseTrackDetails this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.details.BaseTrackDetails$MainSearchLayout -> com.athlete.activity.track.details.ar:
    com.athlete.activity.track.details.BaseTrackDetails this$0 -> a
    void onMeasure(int,int) -> onMeasure
    com.athlete.activity.track.details.BaseTrackDetails access$0(com.athlete.activity.track.details.BaseTrackDetails$MainSearchLayout) -> a
com.athlete.activity.track.details.BaseTrackDetails$MainSearchLayout$1 -> com.athlete.activity.track.details.as:
    com.athlete.activity.track.details.BaseTrackDetails$MainSearchLayout this$1 -> a
    void run() -> run
com.athlete.activity.track.details.FroyoAlbumDirFactory -> com.athlete.activity.track.details.at:
    java.io.File getAlbumStorageDir(java.lang.String) -> a
com.athlete.activity.track.music.ActivityMusic -> com.athlete.activity.track.music.ActivityMusic:
    java.lang.String TAG -> b
    android.widget.ImageView imageViewAlbum -> c
    android.widget.TextView txtTrackName -> d
    android.widget.TextView txtArtistName -> e
    android.widget.TextView txtDuration -> f
    android.widget.ImageButton btnPlay -> g
    android.widget.ImageButton btnNext -> h
    android.widget.ImageButton btnVolume -> i
    android.widget.ImageButton btnPlayList -> j
    android.widget.ImageButton btnMix -> k
    java.lang.String NEXT -> l
    java.lang.String PAUSE_OR_PLAY -> m
    java.lang.String mArtist -> n
    java.lang.String mTrack -> o
    android.database.Cursor mMediaCursor -> p
    int mMediaCursorPos -> q
    android.media.MediaPlayer mMediaPlayer -> r
    com.athlete.util.AudioFocusHelper audioFocusHelper -> s
    android.app.Notification notification -> t
    android.app.NotificationManager mNotificationManager -> u
    int idNotification -> v
    android.content.Intent intentNext -> w
    android.content.Intent intentPause -> x
    android.support.v4.app.NotificationCompat$Builder builder -> y
    int onMsLight -> z
    int offMsLight -> A
    java.lang.String trackName -> B
    java.lang.String artistName -> C
    android.graphics.Bitmap artwork -> D
    android.os.Handler handler -> E
    int mPlaylistId -> F
    int oneSecond -> G
    boolean isMix -> H
    boolean isFinish -> I
    com.athlete.control.VolumeSeekBar bar -> J
    com.athlete.activity.track.music.ActivityMusic$MusicReceiver next -> K
    com.athlete.activity.track.music.ActivityMusic$MusicReceiver pause -> L
    int max -> M
    android.media.AudioManager audioManager -> N
    java.util.Timer mTimerAutoPause -> O
    int mSecond -> P
    java.lang.String PREF_PROJECTION -> Q
    java.lang.String PREF_PROJECTION_COUNT -> R
    java.lang.String PREF_WHERE -> S
    java.lang.String PREF_WHERE_COUNT -> T
    java.lang.String PREF_SELECTION -> U
    java.lang.String PREF_MEDIA_CUR_POS -> V
    java.util.HashMap hashMapProjection -> W
    java.util.HashMap hashMapWhere -> X
    java.lang.String[] saveProjection -> Y
    java.lang.String[] saveWhere -> Z
    java.lang.String saveSelection -> aa
    android.content.SharedPreferences sharedPreferences -> ab
    java.lang.String[] PROJECTION_PLAYLIST -> a
    void onCreate(android.os.Bundle) -> onCreate
    void playSavedMusic() -> b
    void onResume() -> onResume
    void onBackPressed() -> onBackPressed
    void onDestroy() -> onDestroy
    void stopAudioFocus() -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void saveMediaCursorPosition(int) -> a
    void playMusic() -> d
    void showNotification(java.lang.String,java.lang.String,android.graphics.Bitmap) -> a
    void nextSong() -> a
    void updateCurrentDuration() -> e
    void access$0(com.athlete.activity.track.music.ActivityMusic) -> a
    void access$1(com.athlete.activity.track.music.ActivityMusic,int) -> a
    android.media.AudioManager access$2(com.athlete.activity.track.music.ActivityMusic) -> b
    int access$3(com.athlete.activity.track.music.ActivityMusic) -> c
    void access$4(com.athlete.activity.track.music.ActivityMusic) -> d
    com.athlete.control.VolumeSeekBar access$5(com.athlete.activity.track.music.ActivityMusic) -> e
    android.widget.ImageButton access$6(com.athlete.activity.track.music.ActivityMusic) -> f
    boolean access$7(com.athlete.activity.track.music.ActivityMusic) -> g
    void access$8(com.athlete.activity.track.music.ActivityMusic,boolean) -> a
    android.widget.ImageButton access$9(com.athlete.activity.track.music.ActivityMusic) -> h
    void access$10(com.athlete.activity.track.music.ActivityMusic) -> i
    int access$11(com.athlete.activity.track.music.ActivityMusic) -> j
    java.util.Timer access$12(com.athlete.activity.track.music.ActivityMusic) -> k
com.athlete.activity.track.music.ActivityMusic$1 -> com.athlete.activity.track.music.a:
    com.athlete.activity.track.music.ActivityMusic this$0 -> a
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
com.athlete.activity.track.music.ActivityMusic$2 -> com.athlete.activity.track.music.b:
    com.athlete.activity.track.music.ActivityMusic this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.music.ActivityMusic$3 -> com.athlete.activity.track.music.c:
    com.athlete.activity.track.music.ActivityMusic this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.music.ActivityMusic$4 -> com.athlete.activity.track.music.d:
    com.athlete.activity.track.music.ActivityMusic this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.music.ActivityMusic$5 -> com.athlete.activity.track.music.e:
    com.athlete.activity.track.music.ActivityMusic this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.music.ActivityMusic$6 -> com.athlete.activity.track.music.f:
    com.athlete.activity.track.music.ActivityMusic this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.music.ActivityMusic$7 -> com.athlete.activity.track.music.g:
    com.athlete.activity.track.music.ActivityMusic this$0 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.athlete.activity.track.music.ActivityMusic$8 -> com.athlete.activity.track.music.h:
    com.athlete.activity.track.music.ActivityMusic this$0 -> a
    void run() -> run
com.athlete.activity.track.music.ActivityMusic$9 -> com.athlete.activity.track.music.i:
    com.athlete.activity.track.music.ActivityMusic this$0 -> a
    void run() -> run
    com.athlete.activity.track.music.ActivityMusic access$0(com.athlete.activity.track.music.ActivityMusic$9) -> a
com.athlete.activity.track.music.ActivityMusic$9$1 -> com.athlete.activity.track.music.j:
    com.athlete.activity.track.music.ActivityMusic$9 this$1 -> a
    void run() -> run
com.athlete.activity.track.music.ActivityMusic$9$2 -> com.athlete.activity.track.music.k:
    com.athlete.activity.track.music.ActivityMusic$9 this$1 -> a
    void run() -> run
com.athlete.activity.track.music.ActivityMusic$MusicReceiver -> com.athlete.activity.track.music.ActivityMusic$MusicReceiver:
    com.athlete.activity.track.music.ActivityMusic this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.athlete.activity.track.music.BaseFragment -> com.athlete.activity.track.music.BaseFragment:
    java.lang.String[] titles -> m
    int mPlaylistId -> n
    java.util.HashSet audioId -> o
    java.util.List fragments -> p
    com.athlete.control.CustomViewPager mPager -> q
    android.widget.TabWidget tabs -> r
    android.widget.TextView txtTitle -> s
    com.athlete.control.viewpagerindicator.TitlePageIndicator indicator -> t
    void onCreate(android.os.Bundle) -> onCreate
    java.util.HashSet getAudiID() -> d
    void onResume() -> onResume
    void onBackPressed() -> onBackPressed
    void setAudioID(java.util.HashSet) -> a
    void playAll(android.content.Intent) -> a
    void setAdapter() -> e
    void getAllAudioId() -> f
    void addToPlaylist(int) -> c
    void removeFromPlaylist(int) -> d
    void addListToPlaylist(java.util.List) -> a
    void removeListFromPlaylist(java.util.List) -> b
    android.widget.TextView getTxtTitle() -> g
    void setTxtTitle(android.widget.TextView) -> a
    android.widget.TabWidget getTabs() -> h
    void setTabs(android.widget.TabWidget) -> a
com.athlete.activity.track.music.BaseFragment$1 -> com.athlete.activity.track.music.l:
    com.athlete.activity.track.music.BaseFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.music.BaseFragment$2 -> com.athlete.activity.track.music.m:
    com.athlete.activity.track.music.BaseFragment this$0 -> a
    int getCount() -> c
    android.support.v4.app.Fragment getItem(int) -> a
    int getItemPosition$5d527804() -> d
    java.lang.CharSequence getPageTitle(int) -> b
com.athlete.activity.track.music.BaseFragmentAlbum -> com.athlete.activity.track.music.n:
    android.net.Uri mUri -> N
    java.lang.String[] mProjection -> O
    java.lang.String mSelection -> P
    android.widget.ListView mListView -> Q
    android.database.Cursor mCursor -> R
    java.lang.String orderBy -> S
    java.lang.String[] whereVal -> T
    java.util.HashSet audioId -> U
    int playlistID -> V
    java.lang.String[] mFrom -> W
    int[] mTo -> X
    android.widget.TextView txtTitle -> Y
    android.widget.TabWidget tabWidget -> Z
    boolean onBackPressed() -> D
    void initData() -> E
    void albumScreen() -> F
    void artistScreen() -> G
    void playAll() -> H
    void setDateForAllMusicWithPlayList() -> I
    void setDataForMusicWithoutPlayList() -> J
    void setListViewAdapterSongs(boolean) -> b
    void setArtistAdapter() -> K
    void setArtistPlayListAdapter(android.net.Uri) -> a
    void setListViewAlbumPlayListAdapter(boolean,android.net.Uri) -> a
    void setListViewAlbumAdapter(boolean) -> c
com.athlete.activity.track.music.FragmentActivityAllMusic -> com.athlete.activity.track.music.FragmentActivityAllMusic:
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
com.athlete.activity.track.music.FragmentActivityRunning -> com.athlete.activity.track.music.FragmentActivityRunning:
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
com.athlete.activity.track.music.FragmentAlbums -> com.athlete.activity.track.music.o:
    android.view.View onCreateView$469ccb8a(android.view.LayoutInflater,android.view.ViewGroup) -> a
    void setDataForDisplayAlbum() -> L
    boolean onBackPressed() -> D
com.athlete.activity.track.music.FragmentAlbums$1 -> com.athlete.activity.track.music.p:
    com.athlete.activity.track.music.FragmentAlbums this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.music.FragmentAlbums$2 -> com.athlete.activity.track.music.q:
    com.athlete.activity.track.music.FragmentAlbums this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.athlete.activity.track.music.FragmentAlbumsPlayList -> com.athlete.activity.track.music.r:
    android.view.View onCreateView$469ccb8a(android.view.LayoutInflater,android.view.ViewGroup) -> a
    void setDataForDisplayAlbum() -> L
    boolean onBackPressed() -> D
com.athlete.activity.track.music.FragmentAlbumsPlayList$1 -> com.athlete.activity.track.music.s:
    com.athlete.activity.track.music.FragmentAlbumsPlayList this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.music.FragmentAlbumsPlayList$2 -> com.athlete.activity.track.music.t:
    com.athlete.activity.track.music.FragmentAlbumsPlayList this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.athlete.activity.track.music.FragmentArtists -> com.athlete.activity.track.music.u:
    int artistCursorPos -> aa
    android.view.View onCreateView$469ccb8a(android.view.LayoutInflater,android.view.ViewGroup) -> a
    void setAndDisplayAlbums() -> L
    boolean onBackPressed() -> D
    void resumeData() -> M
    void access$0(com.athlete.activity.track.music.FragmentArtists,int) -> a
    void access$1(com.athlete.activity.track.music.FragmentArtists) -> a
com.athlete.activity.track.music.FragmentArtists$1 -> com.athlete.activity.track.music.v:
    com.athlete.activity.track.music.FragmentArtists this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.music.FragmentArtists$2 -> com.athlete.activity.track.music.w:
    com.athlete.activity.track.music.FragmentArtists this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.athlete.activity.track.music.FragmentArtistsPlayList -> com.athlete.activity.track.music.x:
    int typeAlbum -> aa
    int typeSongs -> ab
    int artistCursorPos -> ac
    android.view.View onCreateView$469ccb8a(android.view.LayoutInflater,android.view.ViewGroup) -> a
    void clickItemForArtists() -> L
    void clickItemForAlbum() -> M
    boolean onBackPressed() -> D
    void access$0(com.athlete.activity.track.music.FragmentArtistsPlayList,int) -> a
    void access$1(com.athlete.activity.track.music.FragmentArtistsPlayList) -> a
com.athlete.activity.track.music.FragmentArtistsPlayList$1 -> com.athlete.activity.track.music.y:
    com.athlete.activity.track.music.FragmentArtistsPlayList this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.music.FragmentArtistsPlayList$2 -> com.athlete.activity.track.music.z:
    com.athlete.activity.track.music.FragmentArtistsPlayList this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.athlete.activity.track.music.FragmentSongs -> com.athlete.activity.track.music.FragmentSongs:
    android.view.View onCreateView$469ccb8a(android.view.LayoutInflater,android.view.ViewGroup) -> a
com.athlete.activity.track.music.FragmentSongs$1 -> com.athlete.activity.track.music.aa:
    com.athlete.activity.track.music.FragmentSongs this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.music.FragmentSongsPlayList -> com.athlete.activity.track.music.ab:
    android.view.View onCreateView$469ccb8a(android.view.LayoutInflater,android.view.ViewGroup) -> a
com.athlete.activity.track.music.FragmentSongsPlayList$1 -> com.athlete.activity.track.music.ac:
    com.athlete.activity.track.music.FragmentSongsPlayList this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.track.music.TabActivityMusic -> com.athlete.activity.track.music.TabActivityMusic:
    android.widget.TabHost tabs -> a
    android.widget.TextView txtTitle -> b
    int mPlaylistId -> c
    java.util.HashSet audioId -> d
    android.widget.TabWidget tabWidget -> e
    android.content.ContentResolver resolver -> f
    android.net.Uri uri -> g
    void onCreate(android.os.Bundle) -> onCreate
    java.util.HashSet getAudiID() -> a
    android.widget.TextView getTxtTitle() -> b
    android.widget.TabWidget getTabWidget() -> getTabWidget
    void setBtnType(android.widget.Button) -> a
    void addToPlaylist(int) -> a
    void removeFromPlaylist(int) -> b
    void removeListFromPlaylist(java.util.List) -> a
    void addListToPlaylist(java.util.List) -> b
com.athlete.activity.user.ActivityFriend -> com.athlete.activity.user.ActivityFriend:
    com.segment.SegmentListView lsComposer -> a
    com.athlete.adapter.SectionComposerAdapter adapter -> b
    java.util.List friends -> c
    com.athlete.model.User userDetails -> d
    java.lang.String count -> e
    android.widget.TextView txtTitle -> f
    android.widget.ImageView imageLoading -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void setAdapter() -> a
    void getAllFriend() -> b
    void access$0(com.athlete.activity.user.ActivityFriend) -> a
    int access$1(com.athlete.activity.user.ActivityFriend) -> b
    int access$2(com.athlete.activity.user.ActivityFriend) -> c
    com.nostra13.universalimageloader.core.ImageLoader access$3(com.athlete.activity.user.ActivityFriend) -> d
    com.nostra13.universalimageloader.core.DisplayImageOptions access$4(com.athlete.activity.user.ActivityFriend) -> e
    android.widget.ImageView access$5(com.athlete.activity.user.ActivityFriend) -> f
    android.widget.ImageButton access$6(com.athlete.activity.user.ActivityFriend) -> g
    com.athlete.bl.FriendsBL access$7(com.athlete.activity.user.ActivityFriend) -> h
    com.athlete.model.User access$8(com.athlete.activity.user.ActivityFriend) -> i
    void access$9(com.athlete.activity.user.ActivityFriend,java.util.List) -> a
    void access$10(com.athlete.activity.user.ActivityFriend) -> j
com.athlete.activity.user.ActivityFriend$1 -> com.athlete.activity.user.a:
    com.athlete.activity.user.ActivityFriend this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.user.ActivityFriend$2 -> com.athlete.activity.user.b:
    com.athlete.activity.user.ActivityFriend this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.user.ActivityFriend$3 -> com.athlete.activity.user.c:
    com.athlete.activity.user.ActivityFriend this$0 -> a
    android.view.View getSectionView$4e45925b(int,android.view.View) -> a
    com.athlete.activity.user.ActivityFriend access$0(com.athlete.activity.user.ActivityFriend$3) -> a
com.athlete.activity.user.ActivityFriend$3$1 -> com.athlete.activity.user.d:
    com.athlete.activity.user.ActivityFriend$3 this$1 -> a
    com.athlete.model.User val$user -> b
    void onClick(android.view.View) -> onClick
com.athlete.activity.user.ActivityFriend$4 -> com.athlete.activity.user.e:
    com.athlete.activity.user.ActivityFriend this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.user.ActivityFriendInvite -> com.athlete.activity.user.ActivityFriendInvite:
    com.segment.SegmentListView lsComposer -> a
    com.athlete.adapter.SectionFriendInviteAdapter adapter -> b
    java.util.List users -> c
    java.util.List friendsM2Ms -> d
    com.athlete.bl.BaseOperationsBL baseOperationsBL -> e
    android.view.View header -> f
    com.facebook.android.Facebook facebook -> g
    java.lang.String METHOD -> h
    java.lang.String FQLQUERY -> i
    java.lang.String ACCES -> j
    java.lang.String QUERY -> k
    java.lang.String MESSAGE_DESC -> l
    java.lang.String TO -> m
    java.lang.String MESSAGE -> n
    java.lang.String PARAMSforLIKERS -> o
    android.os.Handler mHandler -> p
    java.util.List fbUser -> q
    java.util.List facebookUsers -> r
    java.util.List facebookUserM2M -> s
    java.util.List facebookUsersHideId -> t
    com.facebook.android.AsyncFacebookRunner mAsyncRunner -> u
    boolean mFBClick -> v
    android.widget.RelativeLayout progressBar -> w
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void getFBUser() -> b
    void convertFbToUser() -> c
    void setAdapter() -> d
    void showProgress() -> e
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void setView() -> f
    void setText$552c4e01() -> a
    com.athlete.bl.BaseBl access$0(com.athlete.activity.user.ActivityFriendInvite) -> a
    java.lang.String access$1(com.athlete.activity.user.ActivityFriendInvite) -> b
    java.util.List access$2(com.athlete.activity.user.ActivityFriendInvite) -> c
    void access$3(com.athlete.activity.user.ActivityFriendInvite,java.util.List) -> a
    android.content.SharedPreferences access$4(com.athlete.activity.user.ActivityFriendInvite) -> d
    void access$5(com.athlete.activity.user.ActivityFriendInvite) -> e
    com.athlete.bl.BaseOperationsBL access$6(com.athlete.activity.user.ActivityFriendInvite) -> f
    java.util.List access$7(com.athlete.activity.user.ActivityFriendInvite) -> g
    java.util.List access$8(com.athlete.activity.user.ActivityFriendInvite) -> h
    void access$9(com.athlete.activity.user.ActivityFriendInvite) -> i
    void access$10(com.athlete.activity.user.ActivityFriendInvite) -> j
    com.athlete.bl.FriendsBL access$11(com.athlete.activity.user.ActivityFriendInvite) -> k
    void access$12(com.athlete.activity.user.ActivityFriendInvite) -> l
    android.view.View access$13(com.athlete.activity.user.ActivityFriendInvite) -> m
    int access$14(com.athlete.activity.user.ActivityFriendInvite) -> n
    int access$15(com.athlete.activity.user.ActivityFriendInvite) -> o
    com.segment.SegmentListView access$16(com.athlete.activity.user.ActivityFriendInvite) -> p
    void access$17(com.athlete.activity.user.ActivityFriendInvite,java.lang.String) -> a
    void access$18(com.athlete.activity.user.ActivityFriendInvite,com.athlete.model.User) -> a
    void access$19(com.athlete.activity.user.ActivityFriendInvite,java.lang.String) -> b
    com.nostra13.universalimageloader.core.ImageLoader access$20(com.athlete.activity.user.ActivityFriendInvite) -> q
    com.nostra13.universalimageloader.core.DisplayImageOptions access$21(com.athlete.activity.user.ActivityFriendInvite) -> r
    void access$22(com.athlete.activity.user.ActivityFriendInvite) -> s
    void access$23(com.athlete.activity.user.ActivityFriendInvite) -> t
    void access$24(com.athlete.activity.user.ActivityFriendInvite) -> u
    void access$25(com.athlete.activity.user.ActivityFriendInvite) -> v
    void access$26(com.athlete.activity.user.ActivityFriendInvite) -> w
    java.util.List access$27(com.athlete.activity.user.ActivityFriendInvite) -> x
    void access$28$5fa21463(com.athlete.activity.user.ActivityFriendInvite) -> y
    java.lang.String access$29(com.athlete.activity.user.ActivityFriendInvite) -> z
com.athlete.activity.user.ActivityFriendInvite$1 -> com.athlete.activity.user.f:
    com.athlete.activity.user.ActivityFriendInvite this$0 -> a
    com.athlete.model.User val$user -> b
    void onFacebookError(com.facebook.android.FacebookError) -> a
    void onError(com.facebook.android.DialogError) -> a
    void onComplete(android.os.Bundle) -> a
    void onCancel() -> a
com.athlete.activity.user.ActivityFriendInvite$10 -> com.athlete.activity.user.g:
    com.athlete.activity.user.ActivityFriendInvite this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.user.ActivityFriendInvite$11 -> com.athlete.activity.user.h:
    com.athlete.activity.user.ActivityFriendInvite this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.user.ActivityFriendInvite$12 -> com.athlete.activity.user.i:
    com.athlete.activity.user.ActivityFriendInvite this$0 -> a
    void run() -> run
com.athlete.activity.user.ActivityFriendInvite$2 -> com.athlete.activity.user.j:
    com.athlete.activity.user.ActivityFriendInvite this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.user.ActivityFriendInvite$3 -> com.athlete.activity.user.k:
    com.athlete.activity.user.ActivityFriendInvite this$0 -> a
    android.view.View getSectionView$4e45925b(int,android.view.View) -> a
    com.athlete.activity.user.ActivityFriendInvite access$0(com.athlete.activity.user.ActivityFriendInvite$3) -> a
com.athlete.activity.user.ActivityFriendInvite$3$1 -> com.athlete.activity.user.l:
    com.athlete.activity.user.ActivityFriendInvite$3 this$1 -> a
    com.athlete.model.User val$user -> b
    void onClick(android.view.View) -> onClick
com.athlete.activity.user.ActivityFriendInvite$3$2 -> com.athlete.activity.user.m:
    com.athlete.activity.user.ActivityFriendInvite$3 this$1 -> a
    com.athlete.model.User val$user -> b
    void onClick(android.view.View) -> onClick
com.athlete.activity.user.ActivityFriendInvite$3$3 -> com.athlete.activity.user.n:
    com.athlete.activity.user.ActivityFriendInvite$3 this$1 -> a
    com.athlete.model.User val$user -> b
    void onClick(android.view.View) -> onClick
com.athlete.activity.user.ActivityFriendInvite$4 -> com.athlete.activity.user.o:
    com.athlete.activity.user.ActivityFriendInvite this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.user.ActivityFriendInvite$5 -> com.athlete.activity.user.p:
    com.athlete.activity.user.ActivityFriendInvite this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.user.ActivityFriendInvite$6 -> com.athlete.activity.user.q:
    com.athlete.activity.user.ActivityFriendInvite this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.user.ActivityFriendInvite$7 -> com.athlete.activity.user.r:
    com.athlete.activity.user.ActivityFriendInvite this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.user.ActivityFriendInvite$8 -> com.athlete.activity.user.s:
    com.athlete.activity.user.ActivityFriendInvite this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.user.ActivityFriendInvite$9 -> com.athlete.activity.user.t:
    com.athlete.activity.user.ActivityFriendInvite this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.user.ActivityFriendInvite$FQLRequestListener -> com.athlete.activity.user.u:
    com.athlete.activity.user.ActivityFriendInvite this$0 -> a
    void onComplete$645b3fe5(java.lang.String) -> a
com.athlete.activity.user.ActivityFriendInvite$LoginDialogListener -> com.athlete.activity.user.v:
    com.athlete.activity.user.ActivityFriendInvite this$0 -> a
    void onComplete(android.os.Bundle) -> a
    void onFacebookError(com.facebook.android.FacebookError) -> a
    void onError(com.facebook.android.DialogError) -> a
    void onCancel() -> a
com.athlete.activity.user.ActivityFriendInvite$SampleRequestListener -> com.athlete.activity.user.w:
    com.athlete.activity.user.ActivityFriendInvite this$0 -> a
    void onComplete$645b3fe5(java.lang.String) -> a
    void onFileNotFoundException$64f06040(java.io.FileNotFoundException) -> a
    void onIOException$7e5565fb(java.io.IOException) -> a
    void onMalformedURLException$11b5f444(java.net.MalformedURLException) -> a
com.athlete.activity.user.ActivityFriendInvite$SampleRequestListener$1 -> com.athlete.activity.user.x:
    com.athlete.activity.user.ActivityFriendInvite$SampleRequestListener this$1 -> a
    void run() -> run
com.athlete.activity.user.ActivityFriendInviteContact -> com.athlete.activity.user.ActivityFriendInviteContact:
    android.widget.ListView mListView -> a
    android.database.Cursor cursorEmail -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    android.database.Cursor access$0(com.athlete.activity.user.ActivityFriendInviteContact) -> a
com.athlete.activity.user.ActivityFriendInviteContact$1 -> com.athlete.activity.user.y:
    com.athlete.activity.user.ActivityFriendInviteContact this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.user.ActivityFriendInviteContact$2 -> com.athlete.activity.user.z:
    com.athlete.activity.user.ActivityFriendInviteContact this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.athlete.activity.user.ActivityFriendInviteFacebook -> com.athlete.activity.user.ActivityFriendInviteFacebook:
    android.widget.ListView mListView -> a
    java.lang.String METHOD -> b
    java.lang.String FQLQUERY -> c
    java.lang.String ACCES -> d
    java.lang.String QUERY -> e
    java.lang.String PARAMS_ALL_FRIENDS -> f
    com.facebook.android.Facebook facebook -> g
    java.util.List facebookUsers -> h
    android.os.Handler mHandler -> i
    com.athlete.adapter.BaseListAdapter adapter -> j
    java.lang.String MESSAGE_DESC -> k
    java.lang.String TO -> l
    java.lang.String MESSAGE -> m
    java.util.List facebookUserM2M -> n
    java.util.List facebookUsersHideId -> o
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void setAdapter() -> a
    void access$0(com.athlete.activity.user.ActivityFriendInviteFacebook,com.athlete.model.FaceBookUser) -> a
    int access$1(com.athlete.activity.user.ActivityFriendInviteFacebook) -> a
    int access$2(com.athlete.activity.user.ActivityFriendInviteFacebook) -> b
    com.nostra13.universalimageloader.core.ImageLoader access$3(com.athlete.activity.user.ActivityFriendInviteFacebook) -> c
    com.nostra13.universalimageloader.core.DisplayImageOptions access$4(com.athlete.activity.user.ActivityFriendInviteFacebook) -> d
    void access$5(com.athlete.activity.user.ActivityFriendInviteFacebook,com.athlete.model.FaceBookUser) -> b
    com.athlete.bl.BaseBl access$6(com.athlete.activity.user.ActivityFriendInviteFacebook) -> e
    java.lang.String access$7(com.athlete.activity.user.ActivityFriendInviteFacebook) -> f
    java.util.List access$8(com.athlete.activity.user.ActivityFriendInviteFacebook) -> g
    void access$9(com.athlete.activity.user.ActivityFriendInviteFacebook,java.util.List) -> a
    android.os.Handler access$10(com.athlete.activity.user.ActivityFriendInviteFacebook) -> h
    void access$11(com.athlete.activity.user.ActivityFriendInviteFacebook) -> i
com.athlete.activity.user.ActivityFriendInviteFacebook$1 -> com.athlete.activity.user.aa:
    com.athlete.activity.user.ActivityFriendInviteFacebook this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.user.ActivityFriendInviteFacebook$2 -> com.athlete.activity.user.ab:
    com.athlete.activity.user.ActivityFriendInviteFacebook this$0 -> a
    com.athlete.model.FaceBookUser val$fbUser -> b
    void onFacebookError(com.facebook.android.FacebookError) -> a
    void onError(com.facebook.android.DialogError) -> a
    void onComplete(android.os.Bundle) -> a
    void onCancel() -> a
com.athlete.activity.user.ActivityFriendInviteFacebook$3 -> com.athlete.activity.user.ac:
    com.athlete.activity.user.ActivityFriendInviteFacebook this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.athlete.activity.user.ActivityFriendInviteFacebook access$0(com.athlete.activity.user.ActivityFriendInviteFacebook$3) -> a
com.athlete.activity.user.ActivityFriendInviteFacebook$3$1 -> com.athlete.activity.user.ad:
    com.athlete.activity.user.ActivityFriendInviteFacebook$3 this$1 -> a
    com.athlete.model.FaceBookUser val$user -> b
    void onClick(android.view.View) -> onClick
com.athlete.activity.user.ActivityFriendInviteFacebook$3$2 -> com.athlete.activity.user.ae:
    com.athlete.activity.user.ActivityFriendInviteFacebook$3 this$1 -> a
    com.athlete.model.FaceBookUser val$user -> b
    void onClick(android.view.View) -> onClick
com.athlete.activity.user.ActivityFriendInviteFacebook$4 -> com.athlete.activity.user.af:
    com.athlete.activity.user.ActivityFriendInviteFacebook this$0 -> a
    void onComplete$645b3fe5(java.lang.String) -> a
com.athlete.activity.user.ActivityFriendInviteFacebook$4$1 -> com.athlete.activity.user.ag:
    com.athlete.activity.user.ActivityFriendInviteFacebook$4 this$1 -> a
    void run() -> run
com.athlete.activity.user.ActivitySearchUsers -> com.athlete.activity.user.ActivitySearchUsers:
    android.widget.ListView mListView -> a
    java.util.List users -> b
    com.athlete.adapter.BaseListAdapter adapter -> c
    android.widget.RelativeLayout progressBar -> d
    android.widget.ImageView splash -> e
    android.widget.EditText mEdText -> f
    void onCreate(android.os.Bundle) -> onCreate
    android.widget.RelativeLayout access$0(com.athlete.activity.user.ActivitySearchUsers) -> a
    android.widget.EditText access$1(com.athlete.activity.user.ActivitySearchUsers) -> b
    void access$2(com.athlete.activity.user.ActivitySearchUsers,java.lang.String) -> a
    void access$3(com.athlete.activity.user.ActivitySearchUsers) -> c
    void access$4(com.athlete.activity.user.ActivitySearchUsers,android.app.Activity) -> a
    int access$5(com.athlete.activity.user.ActivitySearchUsers) -> d
    int access$6(com.athlete.activity.user.ActivitySearchUsers) -> e
    com.nostra13.universalimageloader.core.ImageLoader access$7(com.athlete.activity.user.ActivitySearchUsers) -> f
    com.nostra13.universalimageloader.core.DisplayImageOptions access$8(com.athlete.activity.user.ActivitySearchUsers) -> g
    android.widget.ImageView access$9(com.athlete.activity.user.ActivitySearchUsers) -> h
    com.athlete.bl.UserBL access$10(com.athlete.activity.user.ActivitySearchUsers) -> i
    void access$11(com.athlete.activity.user.ActivitySearchUsers,java.util.List) -> a
    com.athlete.adapter.BaseListAdapter access$12(com.athlete.activity.user.ActivitySearchUsers) -> j
    java.util.List access$13(com.athlete.activity.user.ActivitySearchUsers) -> k
com.athlete.activity.user.ActivitySearchUsers$1 -> com.athlete.activity.user.ah:
    com.athlete.activity.user.ActivitySearchUsers this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.athlete.activity.user.ActivitySearchUsers$2 -> com.athlete.activity.user.ai:
    com.athlete.activity.user.ActivitySearchUsers this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.athlete.activity.user.ActivitySearchUsers$3 -> com.athlete.activity.user.aj:
    com.athlete.activity.user.ActivitySearchUsers this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.user.ActivitySearchUsers$4 -> com.athlete.activity.user.ak:
    com.athlete.activity.user.ActivitySearchUsers this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.user.ActivitySearchUsers$5 -> com.athlete.activity.user.al:
    com.athlete.activity.user.ActivitySearchUsers this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.athlete.activity.user.ActivitySearchUsers access$0(com.athlete.activity.user.ActivitySearchUsers$5) -> a
com.athlete.activity.user.ActivitySearchUsers$5$1 -> com.athlete.activity.user.am:
    com.athlete.activity.user.ActivitySearchUsers$5 this$1 -> a
    com.athlete.model.User val$user -> b
    void onClick(android.view.View) -> onClick
com.athlete.activity.user.ActivitySearchUsers$6 -> com.athlete.activity.user.an:
    com.athlete.activity.user.ActivitySearchUsers this$0 -> a
    java.lang.String val$q -> b
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.user.ActivityUserDetails -> com.athlete.activity.user.ActivityUserDetails:
    android.widget.ImageView imageLoading -> a
    android.widget.ImageButton mImViewUserPlus -> b
    android.widget.ImageButton mImViewCommentPlus -> c
    android.widget.ImageButton mImViewCancelRequest -> d
    android.widget.TextView mTxtFullName -> e
    android.widget.TextView mTxtArea -> f
    com.athlete.model.User userDetails -> g
    android.view.View header -> h
    android.widget.ListView listView -> i
    java.util.List listOfFeed -> j
    com.athlete.adapter.BaseListAdapter adapter -> k
    boolean isAllDialogsLoaded -> l
    android.view.animation.Animation animLarge -> m
    java.util.ArrayList friends -> n
    android.widget.TableRow$LayoutParams paramsAvaForward -> o
    com.athlete.model.Stats stats -> p
    android.widget.TableRow tableRowDots -> q
    int countFriend -> r
    android.widget.TableRow$LayoutParams layoutParams -> s
    com.athlete.model.ProfileUser profileUser -> t
    java.util.List friendsM2Ms -> u
    com.athlete.model.FriendsM2M friendsM2M -> v
    int type -> w
    com.athlete.model.User currentUser -> x
    int maxDotes -> y
    int typeNotFriend -> z
    int typeIsFriend -> A
    int typeFrndRqst -> B
    int typeMineRqst -> C
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void checkFriendShip() -> a
    void checkIsFriend() -> b
    void setArea() -> c
    void showProgress() -> d
    void updateTheFeed(java.lang.String,boolean) -> a
    void updateTheFriend() -> e
    void updateTheStats() -> f
    void getFriends() -> g
    void setViewStats() -> h
    void setFriendsAvatar() -> i
    void setAdapter() -> j
    void alertDialogCancelRequest(java.lang.String) -> a
    void access$0(com.athlete.activity.user.ActivityUserDetails) -> a
    void access$1(com.athlete.activity.user.ActivityUserDetails) -> b
    com.athlete.model.User access$2(com.athlete.activity.user.ActivityUserDetails) -> c
    void access$3(com.athlete.activity.user.ActivityUserDetails,java.lang.String,boolean) -> a
    void access$4(com.athlete.activity.user.ActivityUserDetails) -> d
    void access$5(com.athlete.activity.user.ActivityUserDetails) -> e
    void access$6(com.athlete.activity.user.ActivityUserDetails) -> f
    void access$7(com.athlete.activity.user.ActivityUserDetails) -> g
    com.athlete.bl.FriendsBL access$8(com.athlete.activity.user.ActivityUserDetails) -> h
    java.lang.String access$9(com.athlete.activity.user.ActivityUserDetails) -> i
    void access$10(com.athlete.activity.user.ActivityUserDetails,java.util.List) -> a
    android.widget.ImageButton access$11(com.athlete.activity.user.ActivityUserDetails) -> j
    void access$12(com.athlete.activity.user.ActivityUserDetails) -> k
    com.athlete.model.FriendsM2M access$13(com.athlete.activity.user.ActivityUserDetails) -> l
    com.athlete.bl.BaseBl access$14(com.athlete.activity.user.ActivityUserDetails) -> m
    void access$15(com.athlete.activity.user.ActivityUserDetails) -> n
    com.athlete.bl.UserBL access$16(com.athlete.activity.user.ActivityUserDetails) -> o
    java.util.List access$17(com.athlete.activity.user.ActivityUserDetails) -> p
    void access$18(com.athlete.activity.user.ActivityUserDetails,boolean) -> a
    com.athlete.adapter.BaseListAdapter access$19(com.athlete.activity.user.ActivityUserDetails) -> q
    java.util.List access$20(com.athlete.activity.user.ActivityUserDetails) -> r
    android.widget.ListView access$21(com.athlete.activity.user.ActivityUserDetails) -> s
    void access$22(com.athlete.activity.user.ActivityUserDetails) -> t
    void access$23(com.athlete.activity.user.ActivityUserDetails,java.util.ArrayList) -> a
    void access$24(com.athlete.activity.user.ActivityUserDetails) -> u
    void access$25(com.athlete.activity.user.ActivityUserDetails,com.athlete.model.Stats) -> a
    void access$26(com.athlete.activity.user.ActivityUserDetails) -> v
    void access$27(com.athlete.activity.user.ActivityUserDetails,com.athlete.model.ProfileUser) -> a
    void access$28(com.athlete.activity.user.ActivityUserDetails) -> w
    int access$29(com.athlete.activity.user.ActivityUserDetails) -> x
    boolean access$30(com.athlete.activity.user.ActivityUserDetails) -> y
    android.view.animation.Animation access$31(com.athlete.activity.user.ActivityUserDetails) -> z
    int access$32(com.athlete.activity.user.ActivityUserDetails) -> A
    int access$33(com.athlete.activity.user.ActivityUserDetails) -> B
    boolean access$34(com.athlete.activity.user.ActivityUserDetails) -> C
    com.nostra13.universalimageloader.core.ImageLoader access$35(com.athlete.activity.user.ActivityUserDetails) -> D
    com.nostra13.universalimageloader.core.DisplayImageOptions access$36(com.athlete.activity.user.ActivityUserDetails) -> E
com.athlete.activity.user.ActivityUserDetails$1 -> com.athlete.activity.user.ao:
    com.athlete.activity.user.ActivityUserDetails this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.user.ActivityUserDetails$10 -> com.athlete.activity.user.ap:
    com.athlete.activity.user.ActivityUserDetails this$0 -> a
    boolean val$update -> b
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.user.ActivityUserDetails$11 -> com.athlete.activity.user.aq:
    com.athlete.activity.user.ActivityUserDetails this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.user.ActivityUserDetails$12 -> com.athlete.activity.user.ar:
    com.athlete.activity.user.ActivityUserDetails this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.user.ActivityUserDetails$13 -> com.athlete.activity.user.as:
    com.athlete.activity.user.ActivityUserDetails this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.user.ActivityUserDetails$14 -> com.athlete.activity.user.at:
    com.athlete.activity.user.ActivityUserDetails this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.user.ActivityUserDetails$15 -> com.athlete.activity.user.au:
    com.athlete.activity.user.ActivityUserDetails this$0 -> a
    com.athlete.model.User val$user -> b
    void onClick(android.view.View) -> onClick
com.athlete.activity.user.ActivityUserDetails$16 -> com.athlete.activity.user.av:
    com.athlete.activity.user.ActivityUserDetails this$0 -> a
com.athlete.activity.user.ActivityUserDetails$17 -> com.athlete.activity.user.aw:
    com.athlete.activity.user.ActivityUserDetails this$0 -> a
    int getCount() -> getCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.athlete.activity.user.ActivityUserDetails access$0(com.athlete.activity.user.ActivityUserDetails$17) -> a
com.athlete.activity.user.ActivityUserDetails$17$1 -> com.athlete.activity.user.ax:
    com.athlete.activity.user.ActivityUserDetails$17 this$1 -> a
    com.athlete.model.Feed val$item -> b
    void onClick(android.view.View) -> onClick
com.athlete.activity.user.ActivityUserDetails$18 -> com.athlete.activity.user.ay:
    com.athlete.activity.user.ActivityUserDetails this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.athlete.activity.user.ActivityUserDetails$19 -> com.athlete.activity.user.az:
    com.athlete.activity.user.ActivityUserDetails this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.athlete.activity.user.ActivityUserDetails$2 -> com.athlete.activity.user.ba:
    com.athlete.activity.user.ActivityUserDetails this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.user.ActivityUserDetails$3 -> com.athlete.activity.user.bb:
    com.athlete.activity.user.ActivityUserDetails this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.user.ActivityUserDetails$4 -> com.athlete.activity.user.bc:
    com.athlete.activity.user.ActivityUserDetails this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.user.ActivityUserDetails$5 -> com.athlete.activity.user.bd:
    com.athlete.activity.user.ActivityUserDetails this$0 -> a
    void onClick(android.view.View) -> onClick
com.athlete.activity.user.ActivityUserDetails$6 -> com.athlete.activity.user.be:
    com.athlete.activity.user.ActivityUserDetails this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.user.ActivityUserDetails$7 -> com.athlete.activity.user.bf:
    com.athlete.activity.user.ActivityUserDetails this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.user.ActivityUserDetails$8 -> com.athlete.activity.user.bg:
    com.athlete.activity.user.ActivityUserDetails this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.activity.user.ActivityUserDetails$9 -> com.athlete.activity.user.bh:
    com.athlete.activity.user.ActivityUserDetails this$0 -> a
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.adapter.AlbumsAdapter -> com.athlete.a.a:
    android.graphics.Bitmap artwork -> a
    java.util.HashMap hashMap -> b
    android.net.Uri sArtworkUri -> c
    android.content.ContentResolver res -> d
    android.graphics.BitmapFactory$Options options -> e
    boolean showArtist -> f
    java.util.HashMap idAlbum -> g
    java.util.HashSet audioID -> h
    android.app.Activity activity -> i
    android.os.AsyncTask progressTask -> j
    void notifyDataSetChanged() -> notifyDataSetChanged
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    java.util.HashMap access$0(com.athlete.adapter.AlbumsAdapter) -> a
    java.util.HashSet access$1(com.athlete.adapter.AlbumsAdapter) -> b
    android.app.Activity access$2(com.athlete.adapter.AlbumsAdapter) -> c
    void access$3(com.athlete.adapter.AlbumsAdapter,android.os.AsyncTask) -> a
    android.os.AsyncTask access$4(com.athlete.adapter.AlbumsAdapter) -> d
com.athlete.adapter.AlbumsAdapter$1 -> com.athlete.a.b:
    com.athlete.adapter.AlbumsAdapter this$0 -> a
    android.view.View val$view -> b
    java.lang.String val$title -> c
    android.content.Context val$context -> d
    void onClick(android.view.View) -> onClick
    com.athlete.adapter.AlbumsAdapter access$0(com.athlete.adapter.AlbumsAdapter$1) -> a
com.athlete.adapter.AlbumsAdapter$1$1 -> com.athlete.a.c:
    com.athlete.adapter.AlbumsAdapter$1 this$1 -> a
    android.view.View val$view -> b
    java.lang.String val$title -> c
    android.content.Context val$context -> d
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.adapter.AlbumsPlayListAdapter -> com.athlete.a.d:
    android.graphics.Bitmap artwork -> a
    java.util.HashMap hashMap -> b
    android.net.Uri sArtworkUri -> c
    android.content.ContentResolver res -> d
    android.graphics.BitmapFactory$Options options -> e
    boolean showArtist -> f
    java.util.HashSet audioID -> g
    java.util.HashMap idAlbum -> h
    android.net.Uri mUri -> i
    android.app.Activity activity -> j
    android.os.AsyncTask progressTask -> k
    void notifyDataSetChanged() -> notifyDataSetChanged
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    java.util.HashMap access$0(com.athlete.adapter.AlbumsPlayListAdapter) -> a
    android.app.Activity access$1(com.athlete.adapter.AlbumsPlayListAdapter) -> b
    void access$2(com.athlete.adapter.AlbumsPlayListAdapter,android.os.AsyncTask) -> a
    android.os.AsyncTask access$3(com.athlete.adapter.AlbumsPlayListAdapter) -> c
com.athlete.adapter.AlbumsPlayListAdapter$1 -> com.athlete.a.e:
    com.athlete.adapter.AlbumsPlayListAdapter this$0 -> a
    android.view.View val$view -> b
    java.lang.String val$title -> c
    android.content.Context val$context -> d
    void onClick(android.view.View) -> onClick
    com.athlete.adapter.AlbumsPlayListAdapter access$0(com.athlete.adapter.AlbumsPlayListAdapter$1) -> a
com.athlete.adapter.AlbumsPlayListAdapter$1$1 -> com.athlete.a.f:
    com.athlete.adapter.AlbumsPlayListAdapter$1 this$1 -> a
    android.view.View val$view -> b
    java.lang.String val$title -> c
    android.content.Context val$context -> d
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.adapter.ArtistAdapter -> com.athlete.a.g:
    android.content.ContentResolver res -> a
    android.graphics.BitmapFactory$Options options -> b
    java.util.HashMap idAlbum -> c
    java.util.HashSet audioID -> d
    android.app.Activity activity -> e
    android.os.AsyncTask progressTask -> f
    void notifyDataSetChanged() -> notifyDataSetChanged
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    java.util.HashMap access$0(com.athlete.adapter.ArtistAdapter) -> a
    java.util.HashSet access$1(com.athlete.adapter.ArtistAdapter) -> b
    android.app.Activity access$2(com.athlete.adapter.ArtistAdapter) -> c
    android.os.AsyncTask access$3(com.athlete.adapter.ArtistAdapter) -> d
    void access$4(com.athlete.adapter.ArtistAdapter,android.os.AsyncTask) -> a
com.athlete.adapter.ArtistAdapter$1 -> com.athlete.a.h:
    com.athlete.adapter.ArtistAdapter this$0 -> a
    android.view.View val$view -> b
    java.lang.String val$title -> c
    android.content.Context val$context -> d
    void onClick(android.view.View) -> onClick
    com.athlete.adapter.ArtistAdapter access$0(com.athlete.adapter.ArtistAdapter$1) -> a
com.athlete.adapter.ArtistAdapter$1$1 -> com.athlete.a.i:
    com.athlete.adapter.ArtistAdapter$1 this$1 -> a
    android.view.View val$view -> b
    java.lang.String val$title -> c
    android.content.Context val$context -> d
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.adapter.ArtistPlayListAdapter -> com.athlete.a.j:
    android.content.ContentResolver res -> a
    java.util.HashMap idAlbum -> b
    java.util.HashSet audioID -> c
    android.app.Activity activity -> d
    android.net.Uri mUri -> e
    android.os.AsyncTask progressTask -> f
    void notifyDataSetChanged() -> notifyDataSetChanged
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    java.util.HashMap access$0(com.athlete.adapter.ArtistPlayListAdapter) -> a
    java.util.HashSet access$1(com.athlete.adapter.ArtistPlayListAdapter) -> b
    android.app.Activity access$2(com.athlete.adapter.ArtistPlayListAdapter) -> c
    void access$3(com.athlete.adapter.ArtistPlayListAdapter,android.os.AsyncTask) -> a
    android.os.AsyncTask access$4(com.athlete.adapter.ArtistPlayListAdapter) -> d
com.athlete.adapter.ArtistPlayListAdapter$1 -> com.athlete.a.k:
    com.athlete.adapter.ArtistPlayListAdapter this$0 -> a
    android.view.View val$view -> b
    java.lang.String val$title -> c
    android.content.Context val$context -> d
    void onClick(android.view.View) -> onClick
    com.athlete.adapter.ArtistPlayListAdapter access$0(com.athlete.adapter.ArtistPlayListAdapter$1) -> a
com.athlete.adapter.ArtistPlayListAdapter$1$1 -> com.athlete.a.l:
    com.athlete.adapter.ArtistPlayListAdapter$1 this$1 -> a
    android.view.View val$view -> b
    java.lang.String val$title -> c
    android.content.Context val$context -> d
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.adapter.BaseListAdapter -> com.athlete.a.m:
    android.content.Context mContext -> a
    java.util.List mList -> c
    int mLayout -> d
    int startFrom -> b
    com.athlete.adapter.BaseListAdapter$SearchFilter filter -> e
    java.util.List listAllData -> f
    com.athlete.services.IAppFilter performingFiltering -> g
    java.util.List cloneItems(java.util.List) -> c
    int getCount() -> getCount
    boolean isFilter() -> a
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.content.Context getContext() -> getContext
    void setList(java.util.List) -> a
    android.view.View getLayout() -> b
    void clear() -> clear
    android.widget.Filter getFilter() -> getFilter
    com.athlete.services.IAppFilter access$0(com.athlete.adapter.BaseListAdapter) -> a
    java.util.List access$1(com.athlete.adapter.BaseListAdapter) -> b
    java.util.List access$2$6f0b9c34(java.util.List) -> b
    java.util.List access$3(com.athlete.adapter.BaseListAdapter) -> c
com.athlete.adapter.BaseListAdapter$SearchFilter -> com.athlete.a.n:
    com.athlete.adapter.BaseListAdapter this$0 -> a
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
com.athlete.adapter.DoubleWeightAdapter -> com.athlete.a.o:
    int currentItem -> a
    int currentValue -> b
    int textSize -> c
    void configureTextView(android.widget.TextView) -> a
    android.view.View getItem(int,android.view.View,android.view.ViewGroup) -> a
com.athlete.adapter.MainPageAdapter -> com.athlete.a.p:
    java.util.List mPages -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem$7e55ba3e(android.view.View,java.lang.Object) -> b
    int getCount() -> c
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    android.os.Parcelable saveState() -> b
com.athlete.adapter.SectionComposerAdapter -> com.athlete.a.q:
    android.content.Context ctx -> a
    java.util.List all -> g
    int alpha -> h
    int backgroundColor -> i
    int textColor -> j
    int getCount() -> getCount
    com.athlete.model.User getItem(int) -> a
    long getItemId(int) -> getItemId
    void bindSectionHeader(android.view.View,int,boolean) -> a
    android.view.View getSectionView$4e45925b(int,android.view.View) -> a
    void configurePinnedHeader(android.view.View,int,int) -> a
    int getPositionForSection(int) -> getPositionForSection
    int getSectionForPosition(int) -> getSectionForPosition
    java.lang.String[] getSections() -> a
    java.lang.Object[] getSections() -> getSections
    java.lang.Object getItem(int) -> getItem
com.athlete.adapter.SectionFriendInviteAdapter -> com.athlete.a.r:
    android.content.Context ctx -> a
    java.util.List all -> g
    int alpha -> h
    int backgroundColor -> i
    int textColor -> j
    int getCount() -> getCount
    com.athlete.model.User getItem(int) -> a
    long getItemId(int) -> getItemId
    void bindSectionHeader(android.view.View,int,boolean) -> a
    android.view.View getSectionView$4e45925b(int,android.view.View) -> a
    void configurePinnedHeader(android.view.View,int,int) -> a
    int getPositionForSection(int) -> getPositionForSection
    int getSectionForPosition(int) -> getSectionForPosition
    java.lang.String[] getSections() -> a
    void setDrawable(android.widget.TextView) -> a
    java.lang.Object[] getSections() -> getSections
    java.lang.Object getItem(int) -> getItem
com.athlete.adapter.SectionWorkoutAdapter -> com.athlete.a.s:
    android.content.Context ctx -> a
    java.util.List all -> g
    int alpha -> h
    int backgroundColor -> i
    int getCount() -> getCount
    com.athlete.model.WorkOut getItem(int) -> a
    long getItemId(int) -> getItemId
    void bindSectionHeader(android.view.View,int,boolean) -> a
    android.view.View getSectionView$4e45925b(int,android.view.View) -> a
    void configurePinnedHeader(android.view.View,int,int) -> a
    int getPositionForSection(int) -> getPositionForSection
    int getSectionForPosition(int) -> getSectionForPosition
    java.lang.String[] getSections() -> a
    java.lang.Object[] getSections() -> getSections
    java.lang.Object getItem(int) -> getItem
com.athlete.adapter.SongsAdapter -> com.athlete.a.t:
    java.util.HashSet audioID -> a
    android.app.Activity activity -> b
    android.graphics.Bitmap artwork -> c
    boolean isPlayList -> d
    java.util.HashMap hashMap -> e
    android.net.Uri sArtworkUri -> f
    android.content.ContentResolver res -> g
    android.graphics.BitmapFactory$Options options -> h
    void notifyDataSetChanged() -> notifyDataSetChanged
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    java.util.HashSet access$0(com.athlete.adapter.SongsAdapter) -> a
    android.app.Activity access$1(com.athlete.adapter.SongsAdapter) -> b
    void access$2(com.athlete.adapter.SongsAdapter,java.util.HashSet) -> a
com.athlete.adapter.SongsAdapter$1 -> com.athlete.a.u:
    com.athlete.adapter.SongsAdapter this$0 -> a
    int val$column -> b
    android.content.Context val$context -> c
    java.lang.String val$title -> d
    void onClick(android.view.View) -> onClick
com.athlete.bl.BaseBl -> com.athlete.b.a:
com.athlete.bl.BaseOperationsBL -> com.athlete.b.b:
    java.lang.String TAG -> b
    com.athlete.db.DatabaseHelper helper -> a
    java.util.List getListFromDBByField(java.lang.Class,java.lang.String,java.lang.Object) -> a
    java.util.List getListFromDBByFieldWithLimit(java.lang.Class,java.lang.String,java.lang.Object) -> b
    java.util.List getListFromDBBy2Field(java.lang.Class,java.lang.String,java.lang.Object,java.lang.String,java.lang.Object) -> a
    java.lang.Object getFromDBByField(java.lang.Class,java.lang.String,java.lang.Object) -> c
    boolean createOrUpdate(java.lang.Class,java.lang.Object) -> a
    void delete(java.lang.Object,java.lang.Class) -> a
    void deleteByField(java.lang.String,java.lang.Class,java.lang.Object) -> a
    void deleteBy2Field(java.lang.Class,java.lang.String,java.lang.Object,java.lang.String,java.lang.Object) -> b
    void deleteList(java.util.List,java.lang.Class) -> a
com.athlete.bl.FeedBL -> com.athlete.b.c:
    com.j256.ormlite.dao.Dao mDAO -> b
    boolean createOrUpdate(com.athlete.model.Feed) -> a
    com.athlete.model.Feed getBy(java.lang.String) -> a
com.athlete.bl.FriendsBL -> com.athlete.b.d:
    com.j256.ormlite.dao.Dao mDAO -> b
    int count -> c
    java.util.ArrayList getFriendByUser(java.lang.String) -> a
    java.util.ArrayList getFriendByUserAccepted(java.lang.String) -> b
    java.util.ArrayList getFriendByUserPending(java.lang.String) -> c
    java.util.List getFriendM2M(java.lang.String,java.lang.String) -> a
    int getCount() -> a
com.athlete.bl.IdleWorkoutBL -> com.athlete.b.e:
    com.j256.ormlite.dao.Dao mDAO -> b
com.athlete.bl.StatsBL -> com.athlete.b.f:
    com.j256.ormlite.dao.Dao mDAO -> b
    com.athlete.model.Stats getStatsByUser(java.lang.String) -> a
com.athlete.bl.User2FeedBl -> com.athlete.b.g:
    com.j256.ormlite.dao.Dao mDAO -> b
    java.util.ArrayList getFeedByUser(java.lang.String) -> a
com.athlete.bl.UserBL -> com.athlete.b.h:
    com.j256.ormlite.dao.Dao mDAO -> b
    boolean createOrUpdate(com.athlete.model.User) -> a
    java.util.List getListFromDBByFullname(java.lang.Object) -> a
    com.athlete.model.User getBy(java.lang.String) -> a
com.athlete.bl.WorkoutBL -> com.athlete.b.i:
    com.j256.ormlite.dao.Dao mDAO -> b
    boolean createOrUpdate(com.athlete.model.WorkOut) -> a
    com.athlete.model.WorkOut getBy(java.lang.String) -> a
com.athlete.control.CustomViewPager -> com.athlete.control.CustomViewPager:
    boolean enabled -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void setPagingEnabled(boolean) -> a
com.athlete.control.PinchImageView -> com.athlete.control.PinchImageView:
    android.graphics.Matrix matrix -> a
    int mode -> b
    android.graphics.PointF last -> c
    android.graphics.PointF start -> d
    float minScale -> e
    float maxScale -> f
    float[] m -> g
    int viewWidth -> h
    int viewHeight -> i
    float saveScale -> j
    float origWidth -> k
    float origHeight -> l
    int oldMeasuredWidth -> m
    int oldMeasuredHeight -> n
    android.view.ScaleGestureDetector mScaleDetector -> o
    android.content.Context context -> p
    void sharedConstructing(android.content.Context) -> a
    void fixTrans() -> a
    float getFixTrans(float,float,float) -> b
    float getFixDragTrans(float,float,float) -> a
    void onMeasure(int,int) -> onMeasure
com.athlete.control.PinchImageView$1 -> com.athlete.control.a:
    com.athlete.control.PinchImageView this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.athlete.control.PinchImageView$ScaleListener -> com.athlete.control.b:
    com.athlete.control.PinchImageView this$0 -> a
    boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
com.athlete.control.PlaySound -> com.athlete.control.c:
    java.util.Set timePauseID -> a
    boolean mStop -> b
    com.athlete.util.AudioFocusHelper mAudioFocusHelper -> c
    android.app.Activity mActivity -> d
    void setStop(boolean) -> a
    void playSound(android.app.Activity,android.media.MediaPlayer,int[]) -> a
    void playSound(android.app.Activity,android.media.MediaPlayer,int,boolean) -> a
    void runCompletePlay(android.app.Activity,android.media.MediaPlayer,com.athlete.google.android.apps.mytracks.stats.TripStatistics,com.athlete.model.Split,java.util.HashMap,boolean) -> a
    void setAudioFocusHelper$373cc0f0(android.media.MediaPlayer,android.app.Activity,int,boolean) -> a
    void setAudioFocusHelper$383a2831(android.media.MediaPlayer,android.app.Activity,int[]) -> a
    void stopAudioFocus() -> d
    void startPlay(android.content.Context,android.media.MediaPlayer,int[],int) -> b
    void access$0$1385ff() -> a
    void access$1() -> b
    java.util.Set access$2() -> c
    void access$3(android.content.Context,android.media.MediaPlayer,int[],int) -> a
com.athlete.control.PlaySound$1 -> com.athlete.control.d:
    android.content.Context val$ctx -> a
    int[] val$sound -> b
    int val$index -> c
    android.media.MediaPlayer val$mSoundPlayer -> d
    void run() -> run
com.athlete.control.PlaySound$2 -> com.athlete.control.e:
    int[] val$sound -> a
    int val$i -> b
    android.media.MediaPlayer val$mSoundPlayer -> c
    int val$index -> d
    android.content.Context val$ctx -> e
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.athlete.control.PlaySound$2$1 -> com.athlete.control.f:
    com.athlete.control.PlaySound$2 this$1 -> a
    android.content.Context val$ctx -> b
    android.media.MediaPlayer val$mSoundPlayer -> c
    int[] val$sound -> d
    int val$i -> e
    void run() -> run
com.athlete.control.PlaySound$3 -> com.athlete.control.g:
    android.app.Activity val$activity -> a
    int val$sound -> b
    android.media.MediaPlayer val$mSoundPlayer -> c
    void run() -> run
com.athlete.control.PlaySound$4 -> com.athlete.control.h:
    boolean val$isCountDelay -> a
    android.app.Activity val$activity -> b
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.athlete.control.RoundedImageView -> com.athlete.control.RoundedImageView:
    float mCornerRadius -> a
    float mSizeEndW -> b
    float mSizeEndH -> c
    float mSizeStartW -> d
    float mSizeStartH -> e
    android.content.Context mContext -> f
    void setCornerRadius(float,float) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
com.athlete.control.SessionEvents -> com.athlete.control.i:
    java.util.LinkedList mAuthListeners -> a
    java.util.LinkedList mLogoutListeners -> b
    void addAuthListener(com.athlete.control.SessionEvents$AuthListener) -> a
    void addLogoutListener(com.athlete.control.SessionEvents$LogoutListener) -> a
    void onLoginSuccess() -> a
    void onLoginError$552c4e01() -> b
com.athlete.control.SessionEvents$AuthListener -> com.athlete.control.j:
    void onAuthSucceed() -> a
com.athlete.control.SessionEvents$LogoutListener -> com.athlete.control.k:
com.athlete.control.SessionStore -> com.athlete.control.l:
    boolean restore(com.facebook.android.Facebook,android.content.Context) -> a
com.athlete.control.VolumeSeekBar -> com.athlete.control.VolumeSeekBar:
    android.widget.SeekBar$OnSeekBarChangeListener onChangeListener -> a
    int lastProgress -> b
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
    void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener) -> setOnSeekBarChangeListener
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.athlete.control.sectionlistview.Data -> com.athlete.control.a.a:
    java.lang.String TAG -> a
    java.util.List res -> b
    java.util.LinkedHashSet firstChar -> c
    java.util.List strs -> d
    java.util.List getAllData(java.util.List) -> a
    void getOneSection(java.util.List) -> b
com.athlete.control.sectionlistview.Data$1 -> com.athlete.control.a.b:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.athlete.control.sectionlistview.Data$2 -> com.athlete.control.a.c:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.athlete.control.sectionlistview.DataWorkout -> com.athlete.control.a.d:
    java.lang.String TAG -> a
    java.util.List res -> b
    java.util.LinkedHashSet data -> c
    java.util.List strs -> d
    android.content.Context context -> e
    java.util.List getAllData(java.util.List,android.content.Context) -> a
    void getOneSection(java.util.List) -> a
com.athlete.control.sectionlistview.DataWorkout$1 -> com.athlete.control.a.e:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.athlete.control.sectionlistview.DataWorkout$2 -> com.athlete.control.a.f:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.athlete.control.sectionlistview.FriendInviteData -> com.athlete.control.a.g:
    java.lang.String TAG -> a
    java.util.List res -> b
    java.util.LinkedHashSet header -> c
    java.util.List strs -> d
    int countFB -> e
    android.content.Context ctx -> f
    java.util.List getAllData(android.content.Context,java.util.List) -> a
    void getOneSection(java.util.List) -> a
com.athlete.control.viewpagerindicator.CirclePageIndicator -> com.athlete.control.viewpagerindicator.CirclePageIndicator:
    float mRadius -> a
    android.graphics.Paint mPaintPageFill -> b
    android.graphics.Paint mPaintStroke -> c
    android.graphics.Paint mPaintFill -> d
    android.support.v4.view.ViewPager mViewPager -> e
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> f
    int mCurrentPage -> g
    int mSnapPage -> h
    int mCurrentOffset -> i
    int mScrollState -> j
    int mPageSize -> k
    int mOrientation -> l
    boolean mCentered -> m
    boolean mSnap -> n
    int mTouchSlop -> o
    float mLastMotionX -> p
    int mActivePointerId -> q
    boolean mIsDragging -> r
    void setPageColor(int) -> c
    void setFillColor(int) -> d
    void setStrokeWidth(float) -> a
    void setRadius(float) -> b
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setViewPager(android.support.v4.view.ViewPager) -> a
    void updatePageSize() -> a
    void setCurrentItem(int) -> e
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onMeasure(int,int) -> onMeasure
    int measureLong(int) -> f
    int measureShort(int) -> g
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
com.athlete.control.viewpagerindicator.CirclePageIndicator$SavedState -> com.athlete.control.viewpagerindicator.a:
    int currentPage -> a
    android.os.Parcelable$Creator CREATOR -> b
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.athlete.control.viewpagerindicator.CirclePageIndicator$SavedState$1 -> com.athlete.control.viewpagerindicator.b:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.athlete.control.viewpagerindicator.PageIndicator -> com.athlete.control.viewpagerindicator.c:
com.athlete.control.viewpagerindicator.TitlePageIndicator -> com.athlete.control.viewpagerindicator.TitlePageIndicator:
    android.support.v4.view.ViewPager mViewPager -> a
    android.support.v4.view.ViewPager$OnPageChangeListener mListener -> b
    int mCurrentPage -> c
    float mPageOffset -> d
    int mScrollState -> e
    android.graphics.Paint mPaintText -> f
    boolean mBoldText -> g
    int mColorText -> h
    int mColorSelected -> i
    android.graphics.Path mPath -> j
    android.graphics.Rect mBounds -> k
    android.graphics.Paint mPaintFooterLine -> l
    com.athlete.control.viewpagerindicator.TitlePageIndicator$IndicatorStyle mFooterIndicatorStyle -> m
    com.athlete.control.viewpagerindicator.TitlePageIndicator$LinePosition mLinePosition -> n
    android.graphics.Paint mPaintFooterIndicator -> o
    float mFooterIndicatorHeight -> p
    float mFooterIndicatorUnderlinePadding -> q
    float mFooterPadding -> r
    float mTitlePadding -> s
    float mTopPadding -> t
    float mClipPadding -> u
    float mFooterLineHeight -> v
    int mTouchSlop -> w
    float mLastMotionX -> x
    int mActivePointerId -> y
    boolean mIsDragging -> z
    com.athlete.control.viewpagerindicator.TitlePageIndicator$OnCenterItemClickListener mCenterItemClickListener -> A
    int[] $SWITCH_TABLE$com$athlete$control$viewpagerindicator$TitlePageIndicator$IndicatorStyle -> B
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void clipViewOnTheRight(android.graphics.Rect,float,int) -> a
    void clipViewOnTheLeft(android.graphics.Rect,float,int) -> b
    void setViewPager(android.support.v4.view.ViewPager) -> a
    void onPageScrollStateChanged(int) -> b
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onMeasure(int,int) -> onMeasure
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    java.lang.CharSequence getTitle(int) -> c
    int[] $SWITCH_TABLE$com$athlete$control$viewpagerindicator$TitlePageIndicator$IndicatorStyle() -> a
com.athlete.control.viewpagerindicator.TitlePageIndicator$IndicatorStyle -> com.athlete.control.viewpagerindicator.d:
    com.athlete.control.viewpagerindicator.TitlePageIndicator$IndicatorStyle None -> a
    com.athlete.control.viewpagerindicator.TitlePageIndicator$IndicatorStyle Triangle -> b
    com.athlete.control.viewpagerindicator.TitlePageIndicator$IndicatorStyle Underline -> c
    int value -> d
    com.athlete.control.viewpagerindicator.TitlePageIndicator$IndicatorStyle[] ENUM$VALUES -> e
    com.athlete.control.viewpagerindicator.TitlePageIndicator$IndicatorStyle fromValue(int) -> a
    com.athlete.control.viewpagerindicator.TitlePageIndicator$IndicatorStyle[] values() -> a
com.athlete.control.viewpagerindicator.TitlePageIndicator$LinePosition -> com.athlete.control.viewpagerindicator.e:
    com.athlete.control.viewpagerindicator.TitlePageIndicator$LinePosition Bottom -> a
    com.athlete.control.viewpagerindicator.TitlePageIndicator$LinePosition Top -> b
    int value -> c
    com.athlete.control.viewpagerindicator.TitlePageIndicator$LinePosition[] ENUM$VALUES -> d
    com.athlete.control.viewpagerindicator.TitlePageIndicator$LinePosition fromValue(int) -> a
com.athlete.control.viewpagerindicator.TitlePageIndicator$OnCenterItemClickListener -> com.athlete.control.viewpagerindicator.f:
com.athlete.control.viewpagerindicator.TitlePageIndicator$SavedState -> com.athlete.control.viewpagerindicator.g:
    int currentPage -> a
    android.os.Parcelable$Creator CREATOR -> b
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.athlete.control.viewpagerindicator.TitlePageIndicator$SavedState$1 -> com.athlete.control.viewpagerindicator.h:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.athlete.db.DatabaseHelper -> com.athlete.db.DatabaseHelper:
    java.lang.String TAG -> a
    android.content.Context context -> b
    void onCreate(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource,int,int) -> onUpgrade
    void clear(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource) -> a
com.athlete.exception.AuthException -> com.athlete.c.a:
    java.lang.String error -> a
    java.lang.String error_description -> b
    java.lang.String getError() -> a
    java.lang.String getError_description() -> b
com.athlete.exception.BaseException -> com.athlete.c.b:
com.athlete.google.android.apps.mytracks.BootReceiver -> com.athlete.google.android.apps.mytracks.BootReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.athlete.google.android.apps.mytracks.ColoredPath -> com.athlete.google.android.apps.mytracks.ColoredPath:
    android.graphics.Path path -> path
    android.graphics.Paint pathPaint -> pathPaint
    int strokeWidth -> strokeWidth
    android.graphics.Path getPath() -> getPath
    android.graphics.Paint getPathPaint() -> getPathPaint
com.athlete.google.android.apps.mytracks.MapOverlay -> com.athlete.google.android.apps.mytracks.MapOverlay:
    android.content.Context context -> context
    java.util.List points -> points
    java.util.List waypointsLocation -> waypointsLocation
    java.util.List locations -> locations
    java.util.concurrent.BlockingQueue pendingPoints -> pendingPoints
    android.graphics.drawable.Drawable statsMarker -> statsMarker
    android.graphics.drawable.Drawable waypointMarker -> waypointMarker
    android.graphics.drawable.Drawable startMarker -> startMarker
    android.graphics.drawable.Drawable endMarker -> endMarker
    int markerWidth -> markerWidth
    int markerHeight -> markerHeight
    android.graphics.Paint errorCirclePaint -> errorCirclePaint
    com.athlete.google.android.apps.mytracks.maps.TrackPathPainter trackPathPainter -> trackPathPainter
    boolean trackDrawingEnabled -> trackDrawingEnabled
    boolean showEndMarker -> showEndMarker
    int headingIndex -> headingIndex
    android.location.Location myLocation -> myLocation
    android.graphics.Paint paint -> paint
    com.google.android.maps.GeoPoint lastReferencePoint -> lastReferencePoint
    android.graphics.Rect lastViewRect -> lastViewRect
    com.google.android.maps.MapView mapView -> mapView
    double ONE_KM -> ONE_KM
    android.graphics.drawable.Drawable mMarker -> mMarker
    int level -> level
    java.util.Timer timer -> timer
    boolean isRouteDetails -> isRouteDetails
    void addLocation(android.location.Location) -> addLocation
    void setShowWaypoint(boolean,android.location.Location) -> setShowWaypoint
    void addSegmentSplit() -> addSegmentSplit
    void clearPoints() -> clearPoints
    void setTrackDrawingEnabled(boolean) -> setTrackDrawingEnabled
    void setShowEndMarker(boolean) -> setShowEndMarker
    void setMyLocation(android.location.Location) -> setMyLocation
    boolean setHeading(float) -> setHeading
    void draw(android.graphics.Canvas,com.google.android.maps.MapView,boolean) -> draw
    boolean onTap(com.google.android.maps.GeoPoint,com.google.android.maps.MapView) -> onTap
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    java.util.List getPoints() -> getPoints
    com.athlete.google.android.apps.mytracks.maps.TrackPathPainter getTrackPathPainter() -> getTrackPathPainter
    void setTrackPathPainter(com.athlete.google.android.apps.mytracks.maps.TrackPathPainter) -> setTrackPathPainter
    com.google.android.maps.Projection getMapProjection(com.google.android.maps.MapView) -> getMapProjection
    android.graphics.Rect getMapViewRect(com.google.android.maps.MapView) -> getMapViewRect
    int getNumLocations() -> getNumLocations
    void drawTrack(android.graphics.Canvas,com.google.android.maps.Projection,android.graphics.Rect) -> drawTrack
    void drawMarkers(android.graphics.Canvas,com.google.android.maps.Projection) -> drawMarkers
    void drawWaypointsLocation(android.graphics.Canvas,com.google.android.maps.Projection) -> drawWaypointsLocation
    void drawWaypoints(android.graphics.Canvas,com.google.android.maps.Projection) -> drawWaypoints
    void drawMyLocation(android.graphics.Canvas,com.google.android.maps.Projection) -> drawMyLocation
    android.graphics.Point drawElement(android.graphics.Canvas,com.google.android.maps.Projection,com.google.android.maps.GeoPoint,android.graphics.drawable.Drawable,int,int) -> drawElement
    int access$0(com.athlete.google.android.apps.mytracks.MapOverlay) -> access$0
    void access$1(com.athlete.google.android.apps.mytracks.MapOverlay,int) -> access$1
    com.google.android.maps.MapView access$2(com.athlete.google.android.apps.mytracks.MapOverlay) -> access$2
com.athlete.google.android.apps.mytracks.MapOverlay$1 -> com.athlete.google.android.apps.mytracks.MapOverlay$1:
    com.athlete.google.android.apps.mytracks.MapOverlay this$0 -> this$0
    void run() -> run
com.athlete.google.android.apps.mytracks.MapOverlay$CachedLocation -> com.athlete.google.android.apps.mytracks.MapOverlay$CachedLocation:
    boolean valid -> valid
    com.google.android.maps.GeoPoint geoPoint -> geoPoint
    int speed -> speed
    android.location.Location location -> location
    boolean isValid() -> isValid
    com.google.android.maps.GeoPoint getGeoPoint() -> getGeoPoint
    int getSpeed() -> getSpeed
    boolean access$0(com.athlete.google.android.apps.mytracks.MapOverlay$CachedLocation) -> access$0
    com.google.android.maps.GeoPoint access$1(com.athlete.google.android.apps.mytracks.MapOverlay$CachedLocation) -> access$1
com.athlete.google.android.apps.mytracks.TrackController -> com.athlete.google.android.apps.mytracks.TrackController:
    int ONE_SECOND -> ONE_SECOND
    android.app.Activity activity -> activity
    android.os.Handler handler -> handler
    android.os.Handler handlerPause -> handlerPause
    android.view.View containerView -> containerView
    android.widget.TextView totalTimeTextView -> totalTimeTextView
    android.widget.ImageButton recordImageButton -> recordImageButton
    android.widget.Button stopImageButton -> stopImageButton
    android.widget.Button resumeButton -> resumeButton
    boolean alwaysShow -> alwaysShow
    android.view.View titleBar -> titleBar
    boolean isRecording -> isRecording
    boolean isPaused -> isPaused
    long totalTime -> totalTime
    long totalTimePause -> totalTimePause
    long pauseNow -> pauseNow
    long pauseTimeTimestamp -> pauseTimeTimestamp
    java.lang.String value -> value
    long totalTimeTimestamp -> totalTimeTimestamp
    java.lang.Runnable updateTotalTimeRunnable -> updateTotalTimeRunnable
    java.lang.Runnable updateTimePauseRunnable -> updateTimePauseRunnable
    void displayTime() -> displayTime
    void update(boolean,boolean,long) -> update
    void stop() -> stop
    boolean access$0(com.athlete.google.android.apps.mytracks.TrackController) -> access$0
    boolean access$1(com.athlete.google.android.apps.mytracks.TrackController) -> access$1
    void access$2(com.athlete.google.android.apps.mytracks.TrackController) -> access$2
    android.os.Handler access$3(com.athlete.google.android.apps.mytracks.TrackController) -> access$3
    long access$4(com.athlete.google.android.apps.mytracks.TrackController) -> access$4
    void access$5(com.athlete.google.android.apps.mytracks.TrackController,long) -> access$5
    android.os.Handler access$6(com.athlete.google.android.apps.mytracks.TrackController) -> access$6
com.athlete.google.android.apps.mytracks.TrackController$1 -> com.athlete.google.android.apps.mytracks.TrackController$1:
    com.athlete.google.android.apps.mytracks.TrackController this$0 -> this$0
    void run() -> run
com.athlete.google.android.apps.mytracks.TrackController$2 -> com.athlete.google.android.apps.mytracks.TrackController$2:
    com.athlete.google.android.apps.mytracks.TrackController this$0 -> this$0
    void run() -> run
com.athlete.google.android.apps.mytracks.TrackController$3 -> com.athlete.google.android.apps.mytracks.TrackController$3:
    com.athlete.google.android.apps.mytracks.TrackController this$0 -> this$0
    android.app.Activity val$activity -> val$activity
    void onClick(android.view.View) -> onClick
com.athlete.google.android.apps.mytracks.TrackEditActivity -> com.athlete.google.android.apps.mytracks.TrackEditActivity:
    java.lang.String defType -> defType
    java.util.HashMap rawIDforTime -> rawIDforTime
    android.media.MediaPlayer mediaPlayer -> mediaPlayer
    int rawCountTimes -> rawCountTimes
    int rawCountTimes900 -> rawCountTimes900
    int rawOffsetTime -> rawOffsetTime
    void onResume() -> onResume
    void onCreate(android.os.Bundle) -> onCreate
    void alertDialog() -> alertDialog
    void setSecondsHashMap() -> setSecondsHashMap
    void startSaveActivity(com.athlete.google.android.apps.mytracks.io.file.TrackWriterFactory$TrackFileFormat) -> startSaveActivity
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void setTitle() -> setTitle
    void onBackPressed() -> onBackPressed
    void playSaveTrack() -> playSaveTrack
    void callFBAuth() -> callFBAuth
    void access$0(com.athlete.google.android.apps.mytracks.TrackEditActivity) -> access$0
    void access$1(com.athlete.google.android.apps.mytracks.TrackEditActivity) -> access$1
    void access$2(com.athlete.google.android.apps.mytracks.TrackEditActivity) -> access$2
    void access$3(com.athlete.google.android.apps.mytracks.TrackEditActivity,android.app.Activity) -> access$3
    com.athlete.google.android.apps.mytracks.content.Track access$4(com.athlete.google.android.apps.mytracks.TrackEditActivity) -> access$4
    android.widget.EditText access$5(com.athlete.google.android.apps.mytracks.TrackEditActivity) -> access$5
    android.widget.EditText access$6(com.athlete.google.android.apps.mytracks.TrackEditActivity) -> access$6
    android.widget.CheckBox access$7(com.athlete.google.android.apps.mytracks.TrackEditActivity) -> access$7
    java.lang.String access$8(com.athlete.google.android.apps.mytracks.TrackEditActivity) -> access$8
    com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils access$9(com.athlete.google.android.apps.mytracks.TrackEditActivity) -> access$9
    void access$10(com.athlete.google.android.apps.mytracks.TrackEditActivity) -> access$10
    android.content.SharedPreferences access$11(com.athlete.google.android.apps.mytracks.TrackEditActivity) -> access$11
    void access$12(com.athlete.google.android.apps.mytracks.TrackEditActivity,java.lang.String) -> access$12
    void access$13(com.athlete.google.android.apps.mytracks.TrackEditActivity) -> access$13
    android.media.MediaPlayer access$14(com.athlete.google.android.apps.mytracks.TrackEditActivity) -> access$14
    void access$15(com.athlete.google.android.apps.mytracks.TrackEditActivity,android.media.MediaPlayer) -> access$15
    void access$16(com.athlete.google.android.apps.mytracks.TrackEditActivity,com.athlete.google.android.apps.mytracks.io.file.TrackWriterFactory$TrackFileFormat) -> access$16
com.athlete.google.android.apps.mytracks.TrackEditActivity$1 -> com.athlete.google.android.apps.mytracks.TrackEditActivity$1:
    com.athlete.google.android.apps.mytracks.TrackEditActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.athlete.google.android.apps.mytracks.TrackEditActivity$2 -> com.athlete.google.android.apps.mytracks.TrackEditActivity$2:
    com.athlete.google.android.apps.mytracks.TrackEditActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.athlete.google.android.apps.mytracks.TrackEditActivity$3 -> com.athlete.google.android.apps.mytracks.TrackEditActivity$3:
    com.athlete.google.android.apps.mytracks.TrackEditActivity this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.athlete.google.android.apps.mytracks.TrackEditActivity$4 -> com.athlete.google.android.apps.mytracks.TrackEditActivity$4:
    com.athlete.google.android.apps.mytracks.TrackEditActivity this$0 -> this$0
    android.widget.Button val$save -> val$save
    void onClick(android.view.View) -> onClick
com.athlete.google.android.apps.mytracks.TrackEditActivity$5 -> com.athlete.google.android.apps.mytracks.TrackEditActivity$5:
    com.athlete.google.android.apps.mytracks.TrackEditActivity this$0 -> this$0
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.athlete.google.android.apps.mytracks.TrackEditActivity$6 -> com.athlete.google.android.apps.mytracks.TrackEditActivity$6:
    com.athlete.google.android.apps.mytracks.TrackEditActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.athlete.google.android.apps.mytracks.TrackEditActivity$7 -> com.athlete.google.android.apps.mytracks.TrackEditActivity$7:
    com.athlete.google.android.apps.mytracks.TrackEditActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.athlete.google.android.apps.mytracks.TrackEditActivity$8 -> com.athlete.google.android.apps.mytracks.TrackEditActivity$8:
    com.athlete.google.android.apps.mytracks.TrackEditActivity this$0 -> this$0
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.athlete.google.android.apps.mytracks.content.ContentTypeIds -> com.athlete.google.android.apps.mytracks.content.ContentTypeIds:
    byte BOOLEAN_TYPE_ID -> BOOLEAN_TYPE_ID
    byte LONG_TYPE_ID -> LONG_TYPE_ID
    byte INT_TYPE_ID -> INT_TYPE_ID
    byte FLOAT_TYPE_ID -> FLOAT_TYPE_ID
    byte DOUBLE_TYPE_ID -> DOUBLE_TYPE_ID
    byte STRING_TYPE_ID -> STRING_TYPE_ID
    byte BLOB_TYPE_ID -> BLOB_TYPE_ID
com.athlete.google.android.apps.mytracks.content.DataSource -> com.athlete.google.android.apps.mytracks.content.DataSource:
    int NETWORK_PROVIDER_MIN_TIME -> NETWORK_PROVIDER_MIN_TIME
    java.lang.String TAG -> TAG
    android.content.Context context -> context
    android.content.ContentResolver contentResolver -> contentResolver
    com.athlete.google.android.apps.mytracks.services.MyTracksLocationManager myTracksLocationManager -> myTracksLocationManager
    android.hardware.SensorManager sensorManager -> sensorManager
    android.content.SharedPreferences sharedPreferences -> sharedPreferences
    void close() -> close
    boolean isAllowed() -> isAllowed
    void registerContentObserver(android.net.Uri,android.database.ContentObserver) -> registerContentObserver
    void unregisterContentObserver(android.database.ContentObserver) -> unregisterContentObserver
    void registerLocationListener(android.location.LocationListener) -> registerLocationListener
    void unregisterLocationListener(android.location.LocationListener) -> unregisterLocationListener
    android.location.Location getLastKnownLocation() -> getLastKnownLocation
    boolean isLocationRecent(android.location.Location) -> isLocationRecent
    void registerHeadingListener(android.hardware.SensorEventListener) -> registerHeadingListener
    void unregisterHeadingListener(android.hardware.SensorEventListener) -> unregisterHeadingListener
    void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> registerOnSharedPreferenceChangeListener
    void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener) -> unregisterOnSharedPreferenceChangeListener
com.athlete.google.android.apps.mytracks.content.DataSourceListener -> com.athlete.google.android.apps.mytracks.content.DataSourceListener:
    void notifyTracksTableUpdated() -> notifyTracksTableUpdated
    void notifyTrackPointsTableUpdated() -> notifyTrackPointsTableUpdated
    void notifyLocationChanged(android.location.Location) -> notifyLocationChanged
    void notifyLocationProviderEnabled(boolean) -> notifyLocationProviderEnabled
    void notifyLocationProviderAvailable(boolean) -> notifyLocationProviderAvailable
    void notifyHeadingChanged(float) -> notifyHeadingChanged
    void notifyPreferenceChanged(java.lang.String) -> notifyPreferenceChanged
com.athlete.google.android.apps.mytracks.content.DataSourceManager -> com.athlete.google.android.apps.mytracks.content.DataSourceManager:
    com.athlete.google.android.apps.mytracks.content.DataSource dataSource -> dataSource
    com.athlete.google.android.apps.mytracks.content.DataSourceListener dataSourceListener -> dataSourceListener
    java.util.Set registeredListeners -> registeredListeners
    android.os.Handler handler -> handler
    com.athlete.google.android.apps.mytracks.content.DataSourceManager$TracksTableObserver tracksTableObserver -> tracksTableObserver
    com.athlete.google.android.apps.mytracks.content.DataSourceManager$TrackPointsTableObserver trackPointsTableObserver -> trackPointsTableObserver
    com.athlete.google.android.apps.mytracks.content.DataSourceManager$CurrentLocationListener currentLocationListener -> currentLocationListener
    com.athlete.google.android.apps.mytracks.content.DataSourceManager$HeadingListener headingListener -> headingListener
    com.athlete.google.android.apps.mytracks.content.DataSourceManager$PreferenceListener preferenceListener -> preferenceListener
    int[] $SWITCH_TABLE$com$athlete$google$android$apps$mytracks$content$TrackDataType -> $SWITCH_TABLE$com$athlete$google$android$apps$mytracks$content$TrackDataType
    void updateListeners(java.util.EnumSet) -> updateListeners
    void registerListener(com.athlete.google.android.apps.mytracks.content.TrackDataType) -> registerListener
    void unregisterListener(com.athlete.google.android.apps.mytracks.content.TrackDataType) -> unregisterListener
    void unregisterAllListeners() -> unregisterAllListeners
    android.os.Handler access$0(com.athlete.google.android.apps.mytracks.content.DataSourceManager) -> access$0
    com.athlete.google.android.apps.mytracks.content.DataSourceListener access$1(com.athlete.google.android.apps.mytracks.content.DataSourceManager) -> access$1
    com.athlete.google.android.apps.mytracks.content.DataSource access$2(com.athlete.google.android.apps.mytracks.content.DataSourceManager) -> access$2
    int[] $SWITCH_TABLE$com$athlete$google$android$apps$mytracks$content$TrackDataType() -> $SWITCH_TABLE$com$athlete$google$android$apps$mytracks$content$TrackDataType
com.athlete.google.android.apps.mytracks.content.DataSourceManager$CurrentLocationListener -> com.athlete.google.android.apps.mytracks.content.DataSourceManager$CurrentLocationListener:
    com.athlete.google.android.apps.mytracks.content.DataSourceManager this$0 -> this$0
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.athlete.google.android.apps.mytracks.content.DataSourceManager$HeadingListener -> com.athlete.google.android.apps.mytracks.content.DataSourceManager$HeadingListener:
    com.athlete.google.android.apps.mytracks.content.DataSourceManager this$0 -> this$0
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.athlete.google.android.apps.mytracks.content.DataSourceManager$PreferenceListener -> com.athlete.google.android.apps.mytracks.content.DataSourceManager$PreferenceListener:
    com.athlete.google.android.apps.mytracks.content.DataSourceManager this$0 -> this$0
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
com.athlete.google.android.apps.mytracks.content.DataSourceManager$TrackPointsTableObserver -> com.athlete.google.android.apps.mytracks.content.DataSourceManager$TrackPointsTableObserver:
    com.athlete.google.android.apps.mytracks.content.DataSourceManager this$0 -> this$0
    void onChange(boolean) -> onChange
com.athlete.google.android.apps.mytracks.content.DataSourceManager$TracksTableObserver -> com.athlete.google.android.apps.mytracks.content.DataSourceManager$TracksTableObserver:
    com.athlete.google.android.apps.mytracks.content.DataSourceManager this$0 -> this$0
    void onChange(boolean) -> onChange
com.athlete.google.android.apps.mytracks.content.DescriptionGenerator -> com.athlete.google.android.apps.mytracks.content.DescriptionGenerator:
    java.lang.String generateTrackDescription(com.athlete.google.android.apps.mytracks.content.Track,java.util.Vector,java.util.Vector,boolean) -> generateTrackDescription
    java.lang.String generateWaypointDescription(com.athlete.google.android.apps.mytracks.stats.TripStatistics) -> generateWaypointDescription
com.athlete.google.android.apps.mytracks.content.MyTracksLocation -> com.athlete.google.android.apps.mytracks.content.MyTracksLocation:
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet sensorDataSet -> sensorDataSet
    int id -> id
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet getSensorDataSet() -> getSensorDataSet
    void setSensorDataSet(com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet) -> setSensorDataSet
    int getId() -> getId
    void setId(int) -> setId
    void reset() -> reset
com.athlete.google.android.apps.mytracks.content.MyTracksProvider -> com.athlete.google.android.apps.mytracks.content.MyTracksProvider:
    java.lang.String TAG -> TAG
    java.lang.String DATABASE_NAME -> DATABASE_NAME
    int DATABASE_VERSION -> DATABASE_VERSION
    android.content.UriMatcher uriMatcher -> uriMatcher
    android.database.sqlite.SQLiteDatabase db -> db
    int[] $SWITCH_TABLE$com$athlete$google$android$apps$mytracks$content$MyTracksProvider$UrlType -> $SWITCH_TABLE$com$athlete$google$android$apps$mytracks$content$MyTracksProvider$UrlType
    boolean onCreate() -> onCreate
    boolean onCreate(android.content.Context) -> onCreate
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int bulkInsert(android.net.Uri,android.content.ContentValues[]) -> bulkInsert
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    boolean canAccess() -> canAccess
    com.athlete.google.android.apps.mytracks.content.MyTracksProvider$UrlType getUrlType(android.net.Uri) -> getUrlType
    android.net.Uri insertContentValues(android.net.Uri,com.athlete.google.android.apps.mytracks.content.MyTracksProvider$UrlType,android.content.ContentValues) -> insertContentValues
    android.net.Uri insertTrackPoint(android.net.Uri,android.content.ContentValues) -> insertTrackPoint
    android.net.Uri insertTrack(android.net.Uri,android.content.ContentValues) -> insertTrack
    java.lang.String access$0() -> access$0
    int[] $SWITCH_TABLE$com$athlete$google$android$apps$mytracks$content$MyTracksProvider$UrlType() -> $SWITCH_TABLE$com$athlete$google$android$apps$mytracks$content$MyTracksProvider$UrlType
com.athlete.google.android.apps.mytracks.content.MyTracksProvider$DatabaseHelper -> com.athlete.google.android.apps.mytracks.content.MyTracksProvider$DatabaseHelper:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.athlete.google.android.apps.mytracks.content.MyTracksProvider$UrlType -> com.athlete.google.android.apps.mytracks.content.MyTracksProvider$UrlType:
    com.athlete.google.android.apps.mytracks.content.MyTracksProvider$UrlType TRACKPOINTS -> TRACKPOINTS
    com.athlete.google.android.apps.mytracks.content.MyTracksProvider$UrlType TRACKPOINTS_ID -> TRACKPOINTS_ID
    com.athlete.google.android.apps.mytracks.content.MyTracksProvider$UrlType TRACKS -> TRACKS
    com.athlete.google.android.apps.mytracks.content.MyTracksProvider$UrlType TRACKS_ID -> TRACKS_ID
    com.athlete.google.android.apps.mytracks.content.MyTracksProvider$UrlType[] ENUM$VALUES -> ENUM$VALUES
    com.athlete.google.android.apps.mytracks.content.MyTracksProvider$UrlType[] values() -> values
    com.athlete.google.android.apps.mytracks.content.MyTracksProvider$UrlType valueOf(java.lang.String) -> valueOf
com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils -> com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils:
    java.lang.String AUTHORITY -> AUTHORITY
    com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils$LocationFactory DEFAULT_LOCATION_FACTORY -> DEFAULT_LOCATION_FACTORY
    com.athlete.google.android.apps.mytracks.content.Track createTrack(android.database.Cursor) -> createTrack
    void deleteAllTracks() -> deleteAllTracks
    void deleteTrack(long) -> deleteTrack
    java.util.List getAllTracks() -> getAllTracks
    com.athlete.google.android.apps.mytracks.content.Track getLastTrack() -> getLastTrack
    com.athlete.google.android.apps.mytracks.content.Track getTrack(long) -> getTrack
    android.database.Cursor getTrackCursor(java.lang.String,java.lang.String[],java.lang.String) -> getTrackCursor
    android.net.Uri insertTrack(com.athlete.google.android.apps.mytracks.content.Track) -> insertTrack
    void updateTrack(com.athlete.google.android.apps.mytracks.content.Track) -> updateTrack
    int bulkInsertTrackPoint(android.location.Location[],int,long) -> bulkInsertTrackPoint
    android.location.Location createTrackPoint(android.database.Cursor) -> createTrackPoint
    long getFirstTrackPointId(long) -> getFirstTrackPointId
    long getLastTrackPointId(long) -> getLastTrackPointId
    android.location.Location getLastValidTrackPoint(long) -> getLastValidTrackPoint
    android.database.Cursor getTrackPointCursor(long,long,int,boolean) -> getTrackPointCursor
    com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils$LocationIterator getTrackPointLocationIterator(long,long,boolean,com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils$LocationFactory) -> getTrackPointLocationIterator
    android.net.Uri insertTrackPoint(android.location.Location,long) -> insertTrackPoint
com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils$1 -> com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils$1:
    android.location.Location createLocation() -> createLocation
com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils$DoubleBufferedLocationFactory -> com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils$DoubleBufferedLocationFactory:
    android.location.Location[] locations -> locations
    int lastLocation -> lastLocation
    android.location.Location createLocation() -> createLocation
com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils$Factory -> com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils$Factory:
    com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils$Factory instance -> instance
    com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils get(android.content.Context) -> get
    com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils$Factory getInstance() -> getInstance
    void overrideInstance(com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils$Factory) -> overrideInstance
    com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils newForContext(android.content.Context) -> newForContext
com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils$LocationFactory -> com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils$LocationFactory:
    android.location.Location createLocation() -> createLocation
com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils$LocationIterator -> com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils$LocationIterator:
    long getLocationId() -> getLocationId
    void close() -> close
com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl -> com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl:
    java.lang.String TAG -> TAG
    android.content.ContentResolver contentResolver -> contentResolver
    int defaultCursorBatchSize -> defaultCursorBatchSize
    com.athlete.google.android.apps.mytracks.content.Track createTrack(android.database.Cursor) -> createTrack
    void deleteAllTracks() -> deleteAllTracks
    void deleteTrack(long) -> deleteTrack
    java.util.List getAllTracks() -> getAllTracks
    com.athlete.google.android.apps.mytracks.content.Track getLastTrack() -> getLastTrack
    com.athlete.google.android.apps.mytracks.content.Track getTrack(long) -> getTrack
    android.database.Cursor getTrackCursor(java.lang.String,java.lang.String[],java.lang.String) -> getTrackCursor
    android.net.Uri insertTrack(com.athlete.google.android.apps.mytracks.content.Track) -> insertTrack
    void updateTrack(com.athlete.google.android.apps.mytracks.content.Track) -> updateTrack
    android.content.ContentValues createContentValues(com.athlete.google.android.apps.mytracks.content.Track) -> createContentValues
    android.database.Cursor getTrackCursor(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> getTrackCursor
    int bulkInsertTrackPoint(android.location.Location[],int,long) -> bulkInsertTrackPoint
    android.location.Location createTrackPoint(android.database.Cursor) -> createTrackPoint
    long getFirstTrackPointId(long) -> getFirstTrackPointId
    long getLastTrackPointId(long) -> getLastTrackPointId
    android.location.Location getLastValidTrackPoint(long) -> getLastValidTrackPoint
    android.database.Cursor getTrackPointCursor(long,long,int,boolean) -> getTrackPointCursor
    com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils$LocationIterator getTrackPointLocationIterator(long,long,boolean,com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils$LocationFactory) -> getTrackPointLocationIterator
    android.net.Uri insertTrackPoint(android.location.Location,long) -> insertTrackPoint
    android.content.ContentValues createContentValues(android.location.Location,long) -> createContentValues
    void fillTrackPoint(android.database.Cursor,com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl$CachedTrackPointsIndexes,android.location.Location) -> fillTrackPoint
    android.location.Location findTrackPointBy(java.lang.String,java.lang.String[]) -> findTrackPointBy
    android.database.Cursor getTrackPointCursor(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> getTrackPointCursor
    void setDefaultCursorBatchSize(int) -> setDefaultCursorBatchSize
    int access$0(com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl) -> access$0
    java.lang.String access$1() -> access$1
    void access$2(com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl,android.database.Cursor,com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl$CachedTrackPointsIndexes,android.location.Location) -> access$2
com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl$1 -> com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl$1:
    long lastTrackPointId -> lastTrackPointId
    android.database.Cursor cursor -> cursor
    com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl$CachedTrackPointsIndexes indexes -> indexes
    com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl this$0 -> this$0
    long val$trackId -> val$trackId
    boolean val$descending -> val$descending
    com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils$LocationFactory val$locationFactory -> val$locationFactory
    android.database.Cursor getCursor(long) -> getCursor
    boolean advanceCursorToNextBatch() -> advanceCursorToNextBatch
    long getLocationId() -> getLocationId
    boolean hasNext() -> hasNext
    android.location.Location next() -> next
    void close() -> close
    void remove() -> remove
    java.lang.Object next() -> next
com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl$CachedTrackPointsIndexes -> com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtilsImpl$CachedTrackPointsIndexes:
    int idIndex -> idIndex
    int longitudeIndex -> longitudeIndex
    int latitudeIndex -> latitudeIndex
    int timeIndex -> timeIndex
    int altitudeIndex -> altitudeIndex
    int accuracyIndex -> accuracyIndex
    int speedIndex -> speedIndex
    int bearingIndex -> bearingIndex
    int sensorIndex -> sensorIndex
com.athlete.google.android.apps.mytracks.content.Sensor -> com.athlete.google.android.apps.mytracks.content.Sensor:
    void registerAllExtensions(com.google.protobuf.ExtensionRegistryLite) -> registerAllExtensions
    void internalForceInit() -> internalForceInit
com.athlete.google.android.apps.mytracks.content.Sensor$SensorData -> com.athlete.google.android.apps.mytracks.content.Sensor$SensorData:
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData defaultInstance -> defaultInstance
    int STATE_FIELD_NUMBER -> STATE_FIELD_NUMBER
    boolean hasState -> hasState
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorState state_ -> state_
    int VALUE_FIELD_NUMBER -> VALUE_FIELD_NUMBER
    boolean hasValue -> hasValue
    int value_ -> value_
    int memoizedSerializedSize -> memoizedSerializedSize
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData getDefaultInstance() -> getDefaultInstance
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData getDefaultInstanceForType() -> getDefaultInstanceForType
    boolean hasState() -> hasState
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorState getState() -> getState
    boolean hasValue() -> hasValue
    int getValue() -> getValue
    void initFields() -> initFields
    boolean isInitialized() -> isInitialized
    void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
    int getSerializedSize() -> getSerializedSize
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData parseFrom(com.google.protobuf.ByteString) -> parseFrom
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData parseFrom(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite) -> parseFrom
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData parseFrom(byte[]) -> parseFrom
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData parseFrom(byte[],com.google.protobuf.ExtensionRegistryLite) -> parseFrom
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData parseFrom(java.io.InputStream) -> parseFrom
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData parseFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite) -> parseFrom
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData parseDelimitedFrom(java.io.InputStream) -> parseDelimitedFrom
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData parseDelimitedFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite) -> parseDelimitedFrom
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData parseFrom(com.google.protobuf.CodedInputStream) -> parseFrom
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData parseFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parseFrom
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData$Builder newBuilder() -> newBuilder
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData$Builder newBuilderForType() -> newBuilderForType
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData$Builder newBuilder(com.athlete.google.android.apps.mytracks.content.Sensor$SensorData) -> newBuilder
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData$Builder toBuilder() -> toBuilder
    com.google.protobuf.MessageLite$Builder newBuilderForType() -> newBuilderForType
    com.google.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    void access$4(com.athlete.google.android.apps.mytracks.content.Sensor$SensorData,boolean) -> access$4
    void access$5(com.athlete.google.android.apps.mytracks.content.Sensor$SensorData,com.athlete.google.android.apps.mytracks.content.Sensor$SensorState) -> access$5
    void access$6(com.athlete.google.android.apps.mytracks.content.Sensor$SensorData,boolean) -> access$6
    void access$7(com.athlete.google.android.apps.mytracks.content.Sensor$SensorData,int) -> access$7
com.athlete.google.android.apps.mytracks.content.Sensor$SensorData$Builder -> com.athlete.google.android.apps.mytracks.content.Sensor$SensorData$Builder:
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData result -> result
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData$Builder create() -> create
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData internalGetResult() -> internalGetResult
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData$Builder clear() -> clear
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData$Builder clone() -> clone
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData getDefaultInstanceForType() -> getDefaultInstanceForType
    boolean isInitialized() -> isInitialized
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData build() -> build
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData buildParsed() -> buildParsed
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData buildPartial() -> buildPartial
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData$Builder mergeFrom(com.athlete.google.android.apps.mytracks.content.Sensor$SensorData) -> mergeFrom
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    boolean hasState() -> hasState
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorState getState() -> getState
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData$Builder setState(com.athlete.google.android.apps.mytracks.content.Sensor$SensorState) -> setState
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData$Builder clearState() -> clearState
    boolean hasValue() -> hasValue
    int getValue() -> getValue
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData$Builder setValue(int) -> setValue
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData$Builder clearValue() -> clearValue
    com.google.protobuf.GeneratedMessageLite internalGetResult() -> internalGetResult
    com.google.protobuf.MessageLite buildPartial() -> buildPartial
    com.google.protobuf.MessageLite build() -> build
    com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.protobuf.GeneratedMessageLite$Builder mergeFrom(com.google.protobuf.GeneratedMessageLite) -> mergeFrom
    com.google.protobuf.MessageLite$Builder clone() -> clone
    com.google.protobuf.GeneratedMessageLite$Builder clone() -> clone
    com.google.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.protobuf.MessageLite$Builder clear() -> clear
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData access$11(com.athlete.google.android.apps.mytracks.content.Sensor$SensorData$Builder) -> access$11
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData$Builder access$12() -> access$12
com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet -> com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet:
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet defaultInstance -> defaultInstance
    int CREATION_TIME_FIELD_NUMBER -> CREATION_TIME_FIELD_NUMBER
    boolean hasCreationTime -> hasCreationTime
    long creationTime_ -> creationTime_
    int HEART_RATE_FIELD_NUMBER -> HEART_RATE_FIELD_NUMBER
    boolean hasHeartRate -> hasHeartRate
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData heartRate_ -> heartRate_
    int CADENCE_FIELD_NUMBER -> CADENCE_FIELD_NUMBER
    boolean hasCadence -> hasCadence
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData cadence_ -> cadence_
    int POWER_FIELD_NUMBER -> POWER_FIELD_NUMBER
    boolean hasPower -> hasPower
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData power_ -> power_
    int BATTERY_LEVEL_FIELD_NUMBER -> BATTERY_LEVEL_FIELD_NUMBER
    boolean hasBatteryLevel -> hasBatteryLevel
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData batteryLevel_ -> batteryLevel_
    int memoizedSerializedSize -> memoizedSerializedSize
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet getDefaultInstance() -> getDefaultInstance
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet getDefaultInstanceForType() -> getDefaultInstanceForType
    boolean hasCreationTime() -> hasCreationTime
    long getCreationTime() -> getCreationTime
    boolean hasHeartRate() -> hasHeartRate
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData getHeartRate() -> getHeartRate
    boolean hasCadence() -> hasCadence
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData getCadence() -> getCadence
    boolean hasPower() -> hasPower
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData getPower() -> getPower
    boolean hasBatteryLevel() -> hasBatteryLevel
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData getBatteryLevel() -> getBatteryLevel
    void initFields() -> initFields
    boolean isInitialized() -> isInitialized
    void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
    int getSerializedSize() -> getSerializedSize
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet parseFrom(com.google.protobuf.ByteString) -> parseFrom
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet parseFrom(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite) -> parseFrom
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet parseFrom(byte[]) -> parseFrom
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet parseFrom(byte[],com.google.protobuf.ExtensionRegistryLite) -> parseFrom
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet parseFrom(java.io.InputStream) -> parseFrom
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet parseFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite) -> parseFrom
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet parseDelimitedFrom(java.io.InputStream) -> parseDelimitedFrom
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet parseDelimitedFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite) -> parseDelimitedFrom
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet parseFrom(com.google.protobuf.CodedInputStream) -> parseFrom
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet parseFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> parseFrom
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder newBuilder() -> newBuilder
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder newBuilderForType() -> newBuilderForType
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder newBuilder(com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet) -> newBuilder
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder toBuilder() -> toBuilder
    com.google.protobuf.MessageLite$Builder newBuilderForType() -> newBuilderForType
    com.google.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    void access$4(com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet,boolean) -> access$4
    void access$5(com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet,long) -> access$5
    void access$6(com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet,boolean) -> access$6
    void access$7(com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet,com.athlete.google.android.apps.mytracks.content.Sensor$SensorData) -> access$7
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData access$8(com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet) -> access$8
    void access$9(com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet,boolean) -> access$9
    void access$10(com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet,com.athlete.google.android.apps.mytracks.content.Sensor$SensorData) -> access$10
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData access$11(com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet) -> access$11
    void access$12(com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet,boolean) -> access$12
    void access$13(com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet,com.athlete.google.android.apps.mytracks.content.Sensor$SensorData) -> access$13
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData access$14(com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet) -> access$14
    void access$15(com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet,boolean) -> access$15
    void access$16(com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet,com.athlete.google.android.apps.mytracks.content.Sensor$SensorData) -> access$16
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData access$17(com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet) -> access$17
com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder -> com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder:
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet result -> result
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder create() -> create
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet internalGetResult() -> internalGetResult
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder clear() -> clear
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder clone() -> clone
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet getDefaultInstanceForType() -> getDefaultInstanceForType
    boolean isInitialized() -> isInitialized
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet build() -> build
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet buildParsed() -> buildParsed
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet buildPartial() -> buildPartial
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder mergeFrom(com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet) -> mergeFrom
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    boolean hasCreationTime() -> hasCreationTime
    long getCreationTime() -> getCreationTime
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder setCreationTime(long) -> setCreationTime
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder clearCreationTime() -> clearCreationTime
    boolean hasHeartRate() -> hasHeartRate
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData getHeartRate() -> getHeartRate
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder setHeartRate(com.athlete.google.android.apps.mytracks.content.Sensor$SensorData) -> setHeartRate
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder setHeartRate(com.athlete.google.android.apps.mytracks.content.Sensor$SensorData$Builder) -> setHeartRate
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder mergeHeartRate(com.athlete.google.android.apps.mytracks.content.Sensor$SensorData) -> mergeHeartRate
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder clearHeartRate() -> clearHeartRate
    boolean hasCadence() -> hasCadence
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData getCadence() -> getCadence
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder setCadence(com.athlete.google.android.apps.mytracks.content.Sensor$SensorData) -> setCadence
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder setCadence(com.athlete.google.android.apps.mytracks.content.Sensor$SensorData$Builder) -> setCadence
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder mergeCadence(com.athlete.google.android.apps.mytracks.content.Sensor$SensorData) -> mergeCadence
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder clearCadence() -> clearCadence
    boolean hasPower() -> hasPower
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData getPower() -> getPower
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder setPower(com.athlete.google.android.apps.mytracks.content.Sensor$SensorData) -> setPower
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder setPower(com.athlete.google.android.apps.mytracks.content.Sensor$SensorData$Builder) -> setPower
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder mergePower(com.athlete.google.android.apps.mytracks.content.Sensor$SensorData) -> mergePower
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder clearPower() -> clearPower
    boolean hasBatteryLevel() -> hasBatteryLevel
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorData getBatteryLevel() -> getBatteryLevel
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder setBatteryLevel(com.athlete.google.android.apps.mytracks.content.Sensor$SensorData) -> setBatteryLevel
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder setBatteryLevel(com.athlete.google.android.apps.mytracks.content.Sensor$SensorData$Builder) -> setBatteryLevel
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder mergeBatteryLevel(com.athlete.google.android.apps.mytracks.content.Sensor$SensorData) -> mergeBatteryLevel
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder clearBatteryLevel() -> clearBatteryLevel
    com.google.protobuf.GeneratedMessageLite internalGetResult() -> internalGetResult
    com.google.protobuf.MessageLite buildPartial() -> buildPartial
    com.google.protobuf.MessageLite build() -> build
    com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.protobuf.GeneratedMessageLite$Builder mergeFrom(com.google.protobuf.GeneratedMessageLite) -> mergeFrom
    com.google.protobuf.MessageLite$Builder clone() -> clone
    com.google.protobuf.GeneratedMessageLite$Builder clone() -> clone
    com.google.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.protobuf.MessageLite$Builder clear() -> clear
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet access$11(com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder) -> access$11
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorDataSet$Builder access$12() -> access$12
com.athlete.google.android.apps.mytracks.content.Sensor$SensorState -> com.athlete.google.android.apps.mytracks.content.Sensor$SensorState:
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorState NONE -> NONE
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorState CONNECTING -> CONNECTING
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorState CONNECTED -> CONNECTED
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorState DISCONNECTED -> DISCONNECTED
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorState SENDING -> SENDING
    com.google.protobuf.Internal$EnumLiteMap internalValueMap -> internalValueMap
    int value -> value
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorState[] ENUM$VALUES -> ENUM$VALUES
    int getNumber() -> getNumber
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorState valueOf(int) -> valueOf
    com.google.protobuf.Internal$EnumLiteMap internalGetValueMap() -> internalGetValueMap
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorState[] values() -> values
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorState valueOf(java.lang.String) -> valueOf
com.athlete.google.android.apps.mytracks.content.Sensor$SensorState$1 -> com.athlete.google.android.apps.mytracks.content.Sensor$SensorState$1:
    com.athlete.google.android.apps.mytracks.content.Sensor$SensorState findValueByNumber(int) -> findValueByNumber
    com.google.protobuf.Internal$EnumLite findValueByNumber(int) -> findValueByNumber
com.athlete.google.android.apps.mytracks.content.Track -> com.athlete.google.android.apps.mytracks.content.Track:
    long id -> id
    java.lang.String name -> name
    java.lang.String description -> description
    java.lang.String privacy -> privacy
    java.lang.String runtype -> runtype
    java.lang.String acces -> acces
    long startId -> startId
    long stopId -> stopId
    int numberOfPoints -> numberOfPoints
    java.lang.String mapId -> mapId
    java.lang.String tableId -> tableId
    java.lang.String icon -> icon
    com.athlete.google.android.apps.mytracks.stats.TripStatistics tripStatistics -> tripStatistics
    java.util.ArrayList locations -> locations
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    long getId() -> getId
    void setId(long) -> setId
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.lang.String getPrivacy() -> getPrivacy
    void setPrivacy(java.lang.String) -> setPrivacy
    long getStartId() -> getStartId
    void setStartId(long) -> setStartId
    long getStopId() -> getStopId
    void setStopId(long) -> setStopId
    int getNumberOfPoints() -> getNumberOfPoints
    void setNumberOfPoints(int) -> setNumberOfPoints
    java.lang.String getMapId() -> getMapId
    void setMapId(java.lang.String) -> setMapId
    java.lang.String getTableId() -> getTableId
    void setTableId(java.lang.String) -> setTableId
    java.lang.String getIcon() -> getIcon
    void setIcon(java.lang.String) -> setIcon
    com.athlete.google.android.apps.mytracks.stats.TripStatistics getTripStatistics() -> getTripStatistics
    void setTripStatistics(com.athlete.google.android.apps.mytracks.stats.TripStatistics) -> setTripStatistics
    void addLocation(android.location.Location) -> addLocation
    java.util.ArrayList getLocations() -> getLocations
    void setLocations(java.util.ArrayList) -> setLocations
    java.lang.String getRuntype() -> getRuntype
    void setRuntype(java.lang.String) -> setRuntype
    java.lang.String getAcces() -> getAcces
    void setAcces(java.lang.String) -> setAcces
com.athlete.google.android.apps.mytracks.content.Track$1 -> com.athlete.google.android.apps.mytracks.content.Track$1:
    com.athlete.google.android.apps.mytracks.content.Track createFromParcel(android.os.Parcel) -> createFromParcel
    com.athlete.google.android.apps.mytracks.content.Track[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.athlete.google.android.apps.mytracks.content.TrackDataHub -> com.athlete.google.android.apps.mytracks.content.TrackDataHub:
    java.lang.String TAG -> TAG
    int ONE_HOUR -> ONE_HOUR
    android.content.Context context -> context
    com.athlete.google.android.apps.mytracks.content.TrackDataManager trackDataManager -> trackDataManager
    com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils myTracksProviderUtils -> myTracksProviderUtils
    int targetNumPoints -> targetNumPoints
    com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils$DoubleBufferedLocationFactory locationFactory -> locationFactory
    boolean started -> started
    android.os.HandlerThread handlerThread -> handlerThread
    android.os.Handler handler -> handler
    com.athlete.google.android.apps.mytracks.content.DataSource dataSource -> dataSource
    com.athlete.google.android.apps.mytracks.content.DataSourceManager dataSourceManager -> dataSourceManager
    long selectedTrackId -> selectedTrackId
    long recordingTrackId -> recordingTrackId
    boolean recordingTrackPaused -> recordingTrackPaused
    boolean metricUnits -> metricUnits
    boolean reportSpeed -> reportSpeed
    int minRequiredAccuracy -> minRequiredAccuracy
    int minRecordingDistance -> minRecordingDistance
    float lastHeading -> lastHeading
    float lastDeclination -> lastDeclination
    long lastDeclinationUpdate -> lastDeclinationUpdate
    android.location.Location lastSeenLocation -> lastSeenLocation
    boolean hasProviderEnabled -> hasProviderEnabled
    boolean hasFix -> hasFix
    boolean hasGoodFix -> hasGoodFix
    int numLoadedPoints -> numLoadedPoints
    long firstSeenLocationId -> firstSeenLocationId
    long lastSeenLocationId -> lastSeenLocationId
    com.athlete.google.android.apps.mytracks.content.TrackDataHub newInstance(android.content.Context) -> newInstance
    void start() -> start
    void stop() -> stop
    void loadTrack(long) -> loadTrack
    void registerTrackDataListener(com.athlete.google.android.apps.mytracks.content.TrackDataListener,java.util.EnumSet) -> registerTrackDataListener
    void unregisterTrackDataListener(com.athlete.google.android.apps.mytracks.content.TrackDataListener) -> unregisterTrackDataListener
    void reloadDataForListener(com.athlete.google.android.apps.mytracks.content.TrackDataListener) -> reloadDataForListener
    void forceUpdateLocation() -> forceUpdateLocation
    boolean isSelectedTrackRecording() -> isSelectedTrackRecording
    boolean isSelectedTrackPaused() -> isSelectedTrackPaused
    void notifyTracksTableUpdated() -> notifyTracksTableUpdated
    void notifyTrackPointsTableUpdated() -> notifyTrackPointsTableUpdated
    void notifyPreferenceChanged(java.lang.String) -> notifyPreferenceChanged
    void notifyLocationProviderEnabled(boolean) -> notifyLocationProviderEnabled
    void notifyLocationProviderAvailable(boolean) -> notifyLocationProviderAvailable
    void notifyLocationChanged(android.location.Location) -> notifyLocationChanged
    void notifyHeadingChanged(float) -> notifyHeadingChanged
    void loadDataForAll() -> loadDataForAll
    void loadDataForListener(com.athlete.google.android.apps.mytracks.content.TrackDataListener) -> loadDataForListener
    void notifySelectedTrackChanged(java.util.Set) -> notifySelectedTrackChanged
    void notifyTracksTableUpdate(java.util.Set) -> notifyTracksTableUpdate
    void notifyTrackPointsTableUpdate(boolean,java.util.Set,java.util.Set) -> notifyTrackPointsTableUpdate
    void notifyLocationStateChanged(java.util.Set) -> notifyLocationStateChanged
    void notifyLocationChanged(android.location.Location,boolean,java.util.Set) -> notifyLocationChanged
    void notifyHeadingChange(java.util.Set) -> notifyHeadingChange
    void resetSamplingState() -> resetSamplingState
    boolean isLocationOld(android.location.Location,long,long) -> isLocationOld
    com.athlete.google.android.apps.mytracks.content.DataSource newDataSource() -> newDataSource
    float getDeclination(android.location.Location,long) -> getDeclination
    void runInHanderThread(java.lang.Runnable) -> runInHanderThread
    long getSelectedTrackId() -> getSelectedTrackId
    int getMinRequiredAccuracy() -> getMinRequiredAccuracy
    boolean isMetricUnits() -> isMetricUnits
    boolean isReportSpeed() -> isReportSpeed
    void setLastSeenLocation(android.location.Location) -> setLastSeenLocation
    com.athlete.google.android.apps.mytracks.content.DataSourceManager access$0(com.athlete.google.android.apps.mytracks.content.TrackDataHub) -> access$0
    com.athlete.google.android.apps.mytracks.content.TrackDataManager access$1(com.athlete.google.android.apps.mytracks.content.TrackDataHub) -> access$1
    void access$2(com.athlete.google.android.apps.mytracks.content.TrackDataHub) -> access$2
    long access$3(com.athlete.google.android.apps.mytracks.content.TrackDataHub) -> access$3
    java.lang.String access$4() -> access$4
    void access$5(com.athlete.google.android.apps.mytracks.content.TrackDataHub,long) -> access$5
    android.content.Context access$6(com.athlete.google.android.apps.mytracks.content.TrackDataHub) -> access$6
    void access$7(com.athlete.google.android.apps.mytracks.content.TrackDataHub,com.athlete.google.android.apps.mytracks.content.TrackDataListener) -> access$7
    void access$8(com.athlete.google.android.apps.mytracks.content.TrackDataHub,android.location.Location,boolean,java.util.Set) -> access$8
    void access$9(com.athlete.google.android.apps.mytracks.content.TrackDataHub,java.util.Set) -> access$9
    void access$10(com.athlete.google.android.apps.mytracks.content.TrackDataHub,boolean,java.util.Set,java.util.Set) -> access$10
    void access$11(com.athlete.google.android.apps.mytracks.content.TrackDataHub,long) -> access$11
    void access$12(com.athlete.google.android.apps.mytracks.content.TrackDataHub,boolean) -> access$12
    void access$13(com.athlete.google.android.apps.mytracks.content.TrackDataHub,boolean) -> access$13
    boolean access$14(com.athlete.google.android.apps.mytracks.content.TrackDataHub) -> access$14
    void access$15(com.athlete.google.android.apps.mytracks.content.TrackDataHub,boolean) -> access$15
    boolean access$16(com.athlete.google.android.apps.mytracks.content.TrackDataHub) -> access$16
    void access$17(com.athlete.google.android.apps.mytracks.content.TrackDataHub,int) -> access$17
    void access$18(com.athlete.google.android.apps.mytracks.content.TrackDataHub,int) -> access$18
    int access$19(com.athlete.google.android.apps.mytracks.content.TrackDataHub) -> access$19
    void access$20(com.athlete.google.android.apps.mytracks.content.TrackDataHub,boolean) -> access$20
    void access$21(com.athlete.google.android.apps.mytracks.content.TrackDataHub,java.util.Set) -> access$21
    void access$22(com.athlete.google.android.apps.mytracks.content.TrackDataHub,boolean) -> access$22
    void access$23(com.athlete.google.android.apps.mytracks.content.TrackDataHub,float) -> access$23
    android.location.Location access$24(com.athlete.google.android.apps.mytracks.content.TrackDataHub) -> access$24
    long access$25(com.athlete.google.android.apps.mytracks.content.TrackDataHub) -> access$25
    void access$26(com.athlete.google.android.apps.mytracks.content.TrackDataHub,long) -> access$26
    void access$27(com.athlete.google.android.apps.mytracks.content.TrackDataHub,float) -> access$27
    void access$28(com.athlete.google.android.apps.mytracks.content.TrackDataHub,java.util.Set) -> access$28
com.athlete.google.android.apps.mytracks.content.TrackDataHub$1 -> com.athlete.google.android.apps.mytracks.content.TrackDataHub$1:
    com.athlete.google.android.apps.mytracks.content.TrackDataHub this$0 -> this$0
    void run() -> run
com.athlete.google.android.apps.mytracks.content.TrackDataHub$10 -> com.athlete.google.android.apps.mytracks.content.TrackDataHub$10:
    com.athlete.google.android.apps.mytracks.content.TrackDataHub this$0 -> this$0
    boolean val$enabled -> val$enabled
    void run() -> run
com.athlete.google.android.apps.mytracks.content.TrackDataHub$11 -> com.athlete.google.android.apps.mytracks.content.TrackDataHub$11:
    com.athlete.google.android.apps.mytracks.content.TrackDataHub this$0 -> this$0
    boolean val$available -> val$available
    void run() -> run
com.athlete.google.android.apps.mytracks.content.TrackDataHub$12 -> com.athlete.google.android.apps.mytracks.content.TrackDataHub$12:
    com.athlete.google.android.apps.mytracks.content.TrackDataHub this$0 -> this$0
    android.location.Location val$location -> val$location
    void run() -> run
com.athlete.google.android.apps.mytracks.content.TrackDataHub$13 -> com.athlete.google.android.apps.mytracks.content.TrackDataHub$13:
    com.athlete.google.android.apps.mytracks.content.TrackDataHub this$0 -> this$0
    float val$heading -> val$heading
    void run() -> run
com.athlete.google.android.apps.mytracks.content.TrackDataHub$2 -> com.athlete.google.android.apps.mytracks.content.TrackDataHub$2:
    com.athlete.google.android.apps.mytracks.content.TrackDataHub this$0 -> this$0
    long val$trackId -> val$trackId
    void run() -> run
com.athlete.google.android.apps.mytracks.content.TrackDataHub$3 -> com.athlete.google.android.apps.mytracks.content.TrackDataHub$3:
    com.athlete.google.android.apps.mytracks.content.TrackDataHub this$0 -> this$0
    com.athlete.google.android.apps.mytracks.content.TrackDataListener val$trackDataListener -> val$trackDataListener
    java.util.EnumSet val$trackDataTypes -> val$trackDataTypes
    void run() -> run
com.athlete.google.android.apps.mytracks.content.TrackDataHub$4 -> com.athlete.google.android.apps.mytracks.content.TrackDataHub$4:
    com.athlete.google.android.apps.mytracks.content.TrackDataHub this$0 -> this$0
    com.athlete.google.android.apps.mytracks.content.TrackDataListener val$trackDataListener -> val$trackDataListener
    void run() -> run
com.athlete.google.android.apps.mytracks.content.TrackDataHub$5 -> com.athlete.google.android.apps.mytracks.content.TrackDataHub$5:
    com.athlete.google.android.apps.mytracks.content.TrackDataHub this$0 -> this$0
    com.athlete.google.android.apps.mytracks.content.TrackDataListener val$trackDataListener -> val$trackDataListener
    void run() -> run
com.athlete.google.android.apps.mytracks.content.TrackDataHub$6 -> com.athlete.google.android.apps.mytracks.content.TrackDataHub$6:
    com.athlete.google.android.apps.mytracks.content.TrackDataHub this$0 -> this$0
    android.location.Location val$location -> val$location
    void run() -> run
com.athlete.google.android.apps.mytracks.content.TrackDataHub$7 -> com.athlete.google.android.apps.mytracks.content.TrackDataHub$7:
    com.athlete.google.android.apps.mytracks.content.TrackDataHub this$0 -> this$0
    void run() -> run
com.athlete.google.android.apps.mytracks.content.TrackDataHub$8 -> com.athlete.google.android.apps.mytracks.content.TrackDataHub$8:
    com.athlete.google.android.apps.mytracks.content.TrackDataHub this$0 -> this$0
    void run() -> run
com.athlete.google.android.apps.mytracks.content.TrackDataHub$9 -> com.athlete.google.android.apps.mytracks.content.TrackDataHub$9:
    com.athlete.google.android.apps.mytracks.content.TrackDataHub this$0 -> this$0
    java.lang.String val$key -> val$key
    void run() -> run
com.athlete.google.android.apps.mytracks.content.TrackDataListener -> com.athlete.google.android.apps.mytracks.content.TrackDataListener:
    void onLocationStateChanged(com.athlete.google.android.apps.mytracks.content.TrackDataListener$LocationState) -> onLocationStateChanged
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onHeadingChanged(double) -> onHeadingChanged
    void onSelectedTrackChanged(com.athlete.google.android.apps.mytracks.content.Track) -> onSelectedTrackChanged
    void onTrackUpdated(com.athlete.google.android.apps.mytracks.content.Track) -> onTrackUpdated
    void clearTrackPoints() -> clearTrackPoints
    void onSampledInTrackPoint(android.location.Location) -> onSampledInTrackPoint
    void onSampledOutTrackPoint(android.location.Location) -> onSampledOutTrackPoint
    void onSegmentSplit(android.location.Location) -> onSegmentSplit
    void onNewTrackPointsDone() -> onNewTrackPointsDone
    boolean onMetricUnitsChanged(boolean) -> onMetricUnitsChanged
    boolean onReportSpeedChanged(boolean) -> onReportSpeedChanged
    boolean onMinRecordingDistanceChanged(int) -> onMinRecordingDistanceChanged
com.athlete.google.android.apps.mytracks.content.TrackDataListener$LocationState -> com.athlete.google.android.apps.mytracks.content.TrackDataListener$LocationState:
    com.athlete.google.android.apps.mytracks.content.TrackDataListener$LocationState DISABLED -> DISABLED
    com.athlete.google.android.apps.mytracks.content.TrackDataListener$LocationState NO_FIX -> NO_FIX
    com.athlete.google.android.apps.mytracks.content.TrackDataListener$LocationState BAD_FIX -> BAD_FIX
    com.athlete.google.android.apps.mytracks.content.TrackDataListener$LocationState GOOD_FIX -> GOOD_FIX
    com.athlete.google.android.apps.mytracks.content.TrackDataListener$LocationState[] ENUM$VALUES -> ENUM$VALUES
    com.athlete.google.android.apps.mytracks.content.TrackDataListener$LocationState[] values() -> values
    com.athlete.google.android.apps.mytracks.content.TrackDataListener$LocationState valueOf(java.lang.String) -> valueOf
com.athlete.google.android.apps.mytracks.content.TrackDataManager -> com.athlete.google.android.apps.mytracks.content.TrackDataManager:
    java.util.Map listenerToTypesMap -> listenerToTypesMap
    java.util.Map typeToListenersMap -> typeToListenersMap
    void registerListener(com.athlete.google.android.apps.mytracks.content.TrackDataListener,java.util.EnumSet) -> registerListener
    void unregisterListener(com.athlete.google.android.apps.mytracks.content.TrackDataListener) -> unregisterListener
    int getNumberOfListeners() -> getNumberOfListeners
    java.util.EnumSet getTrackDataTypes(com.athlete.google.android.apps.mytracks.content.TrackDataListener) -> getTrackDataTypes
    java.util.Set getListeners(com.athlete.google.android.apps.mytracks.content.TrackDataType) -> getListeners
    java.util.EnumSet getRegisteredTrackDataTypes() -> getRegisteredTrackDataTypes
com.athlete.google.android.apps.mytracks.content.TrackDataType -> com.athlete.google.android.apps.mytracks.content.TrackDataType:
    com.athlete.google.android.apps.mytracks.content.TrackDataType SELECTED_TRACK -> SELECTED_TRACK
    com.athlete.google.android.apps.mytracks.content.TrackDataType TRACKS_TABLE -> TRACKS_TABLE
    com.athlete.google.android.apps.mytracks.content.TrackDataType SAMPLED_IN_TRACK_POINTS_TABLE -> SAMPLED_IN_TRACK_POINTS_TABLE
    com.athlete.google.android.apps.mytracks.content.TrackDataType SAMPLED_OUT_TRACK_POINTS_TABLE -> SAMPLED_OUT_TRACK_POINTS_TABLE
    com.athlete.google.android.apps.mytracks.content.TrackDataType LOCATION -> LOCATION
    com.athlete.google.android.apps.mytracks.content.TrackDataType HEADING -> HEADING
    com.athlete.google.android.apps.mytracks.content.TrackDataType PREFERENCE -> PREFERENCE
    com.athlete.google.android.apps.mytracks.content.TrackDataType[] ENUM$VALUES -> ENUM$VALUES
    com.athlete.google.android.apps.mytracks.content.TrackDataType[] values() -> values
    com.athlete.google.android.apps.mytracks.content.TrackDataType valueOf(java.lang.String) -> valueOf
com.athlete.google.android.apps.mytracks.content.TrackPointsColumns -> com.athlete.google.android.apps.mytracks.content.TrackPointsColumns:
    java.lang.String TABLE_NAME -> TABLE_NAME
    android.net.Uri CONTENT_URI -> CONTENT_URI
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_ITEMTYPE -> CONTENT_ITEMTYPE
    java.lang.String DEFAULT_SORT_ORDER -> DEFAULT_SORT_ORDER
    java.lang.String TRACKID -> TRACKID
    java.lang.String LONGITUDE -> LONGITUDE
    java.lang.String LATITUDE -> LATITUDE
    java.lang.String TIME -> TIME
    java.lang.String ALTITUDE -> ALTITUDE
    java.lang.String ACCURACY -> ACCURACY
    java.lang.String SPEED -> SPEED
    java.lang.String BEARING -> BEARING
    java.lang.String SENSOR -> SENSOR
    java.lang.String CREATE_TABLE -> CREATE_TABLE
    java.lang.String[] COLUMNS -> COLUMNS
    byte[] COLUMN_TYPES -> COLUMN_TYPES
com.athlete.google.android.apps.mytracks.content.TracksColumns -> com.athlete.google.android.apps.mytracks.content.TracksColumns:
    java.lang.String TABLE_NAME -> TABLE_NAME
    android.net.Uri CONTENT_URI -> CONTENT_URI
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_ITEMTYPE -> CONTENT_ITEMTYPE
    java.lang.String DEFAULT_SORT_ORDER -> DEFAULT_SORT_ORDER
    java.lang.String NAME -> NAME
    java.lang.String DESCRIPTION -> DESCRIPTION
    java.lang.String PRIVACY -> PRIVACY
    java.lang.String RUN_TYPE -> RUN_TYPE
    java.lang.String ACCES -> ACCES
    java.lang.String STARTID -> STARTID
    java.lang.String STOPID -> STOPID
    java.lang.String STARTTIME -> STARTTIME
    java.lang.String STOPTIME -> STOPTIME
    java.lang.String CURRENT_ELEVATION -> CURRENT_ELEVATION
    java.lang.String NUMPOINTS -> NUMPOINTS
    java.lang.String TOTALDISTANCE -> TOTALDISTANCE
    java.lang.String TOTALTIME -> TOTALTIME
    java.lang.String MOVINGTIME -> MOVINGTIME
    java.lang.String MINLAT -> MINLAT
    java.lang.String MAXLAT -> MAXLAT
    java.lang.String MINLON -> MINLON
    java.lang.String MAXLON -> MAXLON
    java.lang.String AVGSPEED -> AVGSPEED
    java.lang.String AVGMOVINGSPEED -> AVGMOVINGSPEED
    java.lang.String MAXSPEED -> MAXSPEED
    java.lang.String MINELEVATION -> MINELEVATION
    java.lang.String MAXELEVATION -> MAXELEVATION
    java.lang.String ELEVATIONGAIN -> ELEVATIONGAIN
    java.lang.String MINGRADE -> MINGRADE
    java.lang.String MAXGRADE -> MAXGRADE
    java.lang.String MAPID -> MAPID
    java.lang.String TABLEID -> TABLEID
    java.lang.String ICON -> ICON
    java.lang.String CREATE_TABLE -> CREATE_TABLE
    java.lang.String[] COLUMNS -> COLUMNS
    byte[] COLUMN_TYPES -> COLUMN_TYPES
com.athlete.google.android.apps.mytracks.io.file.GpxImporter -> com.athlete.google.android.apps.mytracks.io.file.GpxImporter:
    java.lang.String TAG_ALTITUDE -> TAG_ALTITUDE
    java.lang.String TAG_DESCRIPTION -> TAG_DESCRIPTION
    java.lang.String TAG_NAME -> TAG_NAME
    java.lang.String TAG_TIME -> TAG_TIME
    java.lang.String TAG_TRACK -> TAG_TRACK
    java.lang.String TAG_TRACK_POINT -> TAG_TRACK_POINT
    java.lang.Object TAG_TRACK_SEGMENT -> TAG_TRACK_SEGMENT
    java.lang.String ATT_LAT -> ATT_LAT
    java.lang.String ATT_LON -> ATT_LON
    int MAX_BUFFERED_LOCATIONS -> MAX_BUFFERED_LOCATIONS
    int DEFF_SPEED -> DEFF_SPEED
    com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils myTracksProviderUtils -> myTracksProviderUtils
    int minRecordingDistance -> minRecordingDistance
    java.util.List tracksIds -> tracksIds
    org.xml.sax.Locator locator -> locator
    java.lang.String content -> content
    boolean isInTrackElement -> isInTrackElement
    int trackChildDepth -> trackChildDepth
    com.athlete.google.android.apps.mytracks.content.Track track -> track
    boolean isCurrentTrackFinished -> isCurrentTrackFinished
    int numberOfTrackSegments -> numberOfTrackSegments
    int numberOfLocations -> numberOfLocations
    com.athlete.google.android.apps.mytracks.stats.TripStatisticsUpdater tripStatisticsUpdater -> tripStatisticsUpdater
    boolean hasStartTime -> hasStartTime
    long importTime -> importTime
    android.location.Location location -> location
    android.location.Location lastLocationInSegment -> lastLocationInSegment
    android.location.Location[] bufferedLocations -> bufferedLocations
    int numBufferedLocations -> numBufferedLocations
    long[] importGPXFile(java.io.InputStream,com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils,int) -> importGPXFile
    void characters(char[],int,int) -> characters
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void setDocumentLocator(org.xml.sax.Locator) -> setDocumentLocator
    void rollbackUnfinishedTracks() -> rollbackUnfinishedTracks
    void onTrackElementStart() -> onTrackElementStart
    void onTrackElementEnd() -> onTrackElementEnd
    void onNameElementEnd() -> onNameElementEnd
    void onDescriptionElementEnd() -> onDescriptionElementEnd
    void onTrackSegmentElementStart() -> onTrackSegmentElementStart
    void onTrackSegmentElementEnd() -> onTrackSegmentElementEnd
    void onTrackPointElementStart(org.xml.sax.Attributes) -> onTrackPointElementStart
    void onTrackPointElementEnd() -> onTrackPointElementEnd
    void onAltitudeElementEnd() -> onAltitudeElementEnd
    void onTimeElementEnd() -> onTimeElementEnd
    android.location.Location createNewLocation(double,double,long) -> createNewLocation
    void insertPoint(android.location.Location) -> insertPoint
    void flushPoints() -> flushPoints
    long[] getImportedTrackIds() -> getImportedTrackIds
    long getFirstPointId() -> getFirstPointId
    long getLastPointId() -> getLastPointId
    java.lang.String createErrorMessage(java.lang.String) -> createErrorMessage
com.athlete.google.android.apps.mytracks.io.file.GpxTrackWriter -> com.athlete.google.android.apps.mytracks.io.file.GpxTrackWriter:
    java.lang.Long prevTime -> prevTime
    java.text.NumberFormat ELEVATION_FORMAT -> ELEVATION_FORMAT
    java.text.NumberFormat COORDINATE_FORMAT -> COORDINATE_FORMAT
    android.content.Context context -> context
    com.athlete.google.android.apps.mytracks.content.Track track -> track
    java.io.PrintWriter printWriter -> printWriter
    boolean isFirstSegment -> isFirstSegment
    java.lang.String getExtension() -> getExtension
    void prepare(com.athlete.google.android.apps.mytracks.content.Track,java.io.OutputStream) -> prepare
    void close() -> close
    void writeHeader() -> writeHeader
    void writeFooter() -> writeFooter
    void writeBeginTrack(android.location.Location) -> writeBeginTrack
    void writeEndTrack(android.location.Location) -> writeEndTrack
    void writeOpenSegment() -> writeOpenSegment
    void writeCloseSegment() -> writeCloseSegment
    void writeLocation(android.location.Location) -> writeLocation
    void wtiteLocations(android.location.Location) -> wtiteLocations
    java.lang.String formatLocation(android.location.Location) -> formatLocation
com.athlete.google.android.apps.mytracks.io.file.SaveActivity -> com.athlete.google.android.apps.mytracks.io.file.SaveActivity:
    java.lang.String EXTRA_TRACK_FILE_FORMAT -> EXTRA_TRACK_FILE_FORMAT
    java.lang.String EXTRA_TRACK_ID -> EXTRA_TRACK_ID
    int DIALOG_PROGRESS_ID -> DIALOG_PROGRESS_ID
    int DIALOG_RESULT_ID -> DIALOG_RESULT_ID
    com.athlete.google.android.apps.mytracks.io.file.TrackWriterFactory$TrackFileFormat trackFileFormat -> trackFileFormat
    long trackId -> trackId
    com.athlete.google.android.apps.mytracks.io.file.SaveAsyncTask saveAsyncTask -> saveAsyncTask
    android.app.ProgressDialog progressDialog -> progressDialog
    boolean success -> success
    int messageId -> messageId
    java.lang.String savedPath -> savedPath
    void onCreate(android.os.Bundle) -> onCreate
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void onAsyncTaskCompleted(boolean,int,java.lang.String) -> onAsyncTaskCompleted
    void showProgressDialog() -> showProgressDialog
    void setProgressDialogValue(int,int) -> setProgressDialogValue
    void onPostResultDialog() -> onPostResultDialog
    com.athlete.google.android.apps.mytracks.io.file.SaveAsyncTask access$0(com.athlete.google.android.apps.mytracks.io.file.SaveActivity) -> access$0
    void access$1(com.athlete.google.android.apps.mytracks.io.file.SaveActivity) -> access$1
com.athlete.google.android.apps.mytracks.io.file.SaveActivity$1 -> com.athlete.google.android.apps.mytracks.io.file.SaveActivity$1:
    com.athlete.google.android.apps.mytracks.io.file.SaveActivity this$0 -> this$0
    void onCancel(android.content.DialogInterface) -> onCancel
com.athlete.google.android.apps.mytracks.io.file.SaveActivity$2 -> com.athlete.google.android.apps.mytracks.io.file.SaveActivity$2:
    com.athlete.google.android.apps.mytracks.io.file.SaveActivity this$0 -> this$0
    void onCancel(android.content.DialogInterface) -> onCancel
com.athlete.google.android.apps.mytracks.io.file.SaveActivity$3 -> com.athlete.google.android.apps.mytracks.io.file.SaveActivity$3:
    com.athlete.google.android.apps.mytracks.io.file.SaveActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.athlete.google.android.apps.mytracks.io.file.SaveActivity$4 -> com.athlete.google.android.apps.mytracks.io.file.SaveActivity$4:
    com.athlete.google.android.apps.mytracks.io.file.SaveActivity this$0 -> this$0
    void onClick(android.content.DialogInterface,int) -> onClick
com.athlete.google.android.apps.mytracks.io.file.SaveAsyncTask -> com.athlete.google.android.apps.mytracks.io.file.SaveAsyncTask:
    java.lang.String TAG -> TAG
    com.athlete.google.android.apps.mytracks.io.file.SaveActivity saveActivity -> saveActivity
    com.athlete.google.android.apps.mytracks.io.file.TrackWriterFactory$TrackFileFormat trackFileFormat -> trackFileFormat
    long trackId -> trackId
    android.content.Context context -> context
    com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils myTracksProviderUtils -> myTracksProviderUtils
    android.os.PowerManager$WakeLock wakeLock -> wakeLock
    com.athlete.google.android.apps.mytracks.io.file.TrackWriter trackWriter -> trackWriter
    boolean success -> success
    boolean completed -> completed
    int messageId -> messageId
    java.lang.String savedPath -> savedPath
    void setActivity(com.athlete.google.android.apps.mytracks.io.file.SaveActivity) -> setActivity
    void onPreExecute() -> onPreExecute
    java.lang.Boolean doInBackground(java.lang.Void[]) -> doInBackground
    java.lang.Boolean saveOneTrack(long,boolean) -> saveOneTrack
    java.lang.Boolean saveAllTracks() -> saveAllTracks
    void onProgressUpdate(java.lang.Integer[]) -> onProgressUpdate
    void onPostExecute(java.lang.Boolean) -> onPostExecute
    void onCancelled() -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void access$3(com.athlete.google.android.apps.mytracks.io.file.SaveAsyncTask,java.lang.Object[]) -> access$3
com.athlete.google.android.apps.mytracks.io.file.SaveAsyncTask$1 -> com.athlete.google.android.apps.mytracks.io.file.SaveAsyncTask$1:
    com.athlete.google.android.apps.mytracks.io.file.SaveAsyncTask this$0 -> this$0
    boolean val$updateSavingProgress -> val$updateSavingProgress
    void onWrite(int,int) -> onWrite
com.athlete.google.android.apps.mytracks.io.file.TrackFormatWriter -> com.athlete.google.android.apps.mytracks.io.file.TrackFormatWriter:
    java.lang.String getExtension() -> getExtension
    void prepare(com.athlete.google.android.apps.mytracks.content.Track,java.io.OutputStream) -> prepare
    void close() -> close
    void writeHeader() -> writeHeader
    void writeFooter() -> writeFooter
    void writeBeginTrack(android.location.Location) -> writeBeginTrack
    void writeEndTrack(android.location.Location) -> writeEndTrack
    void writeOpenSegment() -> writeOpenSegment
    void writeCloseSegment() -> writeCloseSegment
    void writeLocation(android.location.Location) -> writeLocation
com.athlete.google.android.apps.mytracks.io.file.TrackWriter -> com.athlete.google.android.apps.mytracks.io.file.TrackWriter:
    void setOnWriteListener(com.athlete.google.android.apps.mytracks.io.file.TrackWriter$OnWriteListener) -> setOnWriteListener
    void setDirectory(java.io.File) -> setDirectory
    java.lang.String getAbsolutePath() -> getAbsolutePath
    void writeTrack() -> writeTrack
    void stopWriteTrack() -> stopWriteTrack
    boolean wasSuccess() -> wasSuccess
    int getErrorMessage() -> getErrorMessage
com.athlete.google.android.apps.mytracks.io.file.TrackWriter$OnWriteListener -> com.athlete.google.android.apps.mytracks.io.file.TrackWriter$OnWriteListener:
    void onWrite(int,int) -> onWrite
com.athlete.google.android.apps.mytracks.io.file.TrackWriterFactory -> com.athlete.google.android.apps.mytracks.io.file.TrackWriterFactory:
    com.athlete.google.android.apps.mytracks.io.file.TrackWriter newWriter(android.content.Context,com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils,long,com.athlete.google.android.apps.mytracks.io.file.TrackWriterFactory$TrackFileFormat) -> newWriter
    com.athlete.google.android.apps.mytracks.io.file.TrackWriter newWriter(android.content.Context,com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils,com.athlete.google.android.apps.mytracks.content.Track,com.athlete.google.android.apps.mytracks.io.file.TrackWriterFactory$TrackFileFormat) -> newWriter
com.athlete.google.android.apps.mytracks.io.file.TrackWriterFactory$TrackFileFormat -> com.athlete.google.android.apps.mytracks.io.file.TrackWriterFactory$TrackFileFormat:
    com.athlete.google.android.apps.mytracks.io.file.TrackWriterFactory$TrackFileFormat GPX -> GPX
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.athlete.google.android.apps.mytracks.io.file.TrackWriterFactory$TrackFileFormat[] ENUM$VALUES -> ENUM$VALUES
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.athlete.google.android.apps.mytracks.io.file.TrackFormatWriter newFormatWriter(android.content.Context) -> newFormatWriter
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getExtension() -> getExtension
    com.athlete.google.android.apps.mytracks.io.file.TrackWriterFactory$TrackFileFormat[] values() -> values
    com.athlete.google.android.apps.mytracks.io.file.TrackWriterFactory$TrackFileFormat valueOf(java.lang.String) -> valueOf
com.athlete.google.android.apps.mytracks.io.file.TrackWriterFactory$TrackFileFormat$1 -> com.athlete.google.android.apps.mytracks.io.file.TrackWriterFactory$TrackFileFormat$1:
    com.athlete.google.android.apps.mytracks.io.file.TrackFormatWriter newFormatWriter(android.content.Context) -> newFormatWriter
com.athlete.google.android.apps.mytracks.io.file.TrackWriterFactory$TrackFileFormat$2 -> com.athlete.google.android.apps.mytracks.io.file.TrackWriterFactory$TrackFileFormat$2:
    com.athlete.google.android.apps.mytracks.io.file.TrackWriterFactory$TrackFileFormat createFromParcel(android.os.Parcel) -> createFromParcel
    com.athlete.google.android.apps.mytracks.io.file.TrackWriterFactory$TrackFileFormat[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.athlete.google.android.apps.mytracks.io.file.TrackWriterImpl -> com.athlete.google.android.apps.mytracks.io.file.TrackWriterImpl:
    android.content.Context context -> context
    com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils providerUtils -> providerUtils
    com.athlete.google.android.apps.mytracks.content.Track track -> track
    com.athlete.google.android.apps.mytracks.io.file.TrackFormatWriter writer -> writer
    boolean success -> success
    int errorMessage -> errorMessage
    java.io.File directory -> directory
    java.io.File file -> file
    com.athlete.google.android.apps.mytracks.io.file.TrackWriter$OnWriteListener onWriteListener -> onWriteListener
    java.lang.Thread writeThread -> writeThread
    void setOnWriteListener(com.athlete.google.android.apps.mytracks.io.file.TrackWriter$OnWriteListener) -> setOnWriteListener
    void setDirectory(java.io.File) -> setDirectory
    java.lang.String getAbsolutePath() -> getAbsolutePath
    void writeTrackAsync() -> writeTrackAsync
    void writeTrack() -> writeTrack
    void doWriteTrack() -> doWriteTrack
    void stopWriteTrack() -> stopWriteTrack
    int getErrorMessage() -> getErrorMessage
    boolean wasSuccess() -> wasSuccess
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    boolean openFile() -> openFile
    boolean canWriteFile() -> canWriteFile
    java.io.OutputStream newOutputStream(java.lang.String) -> newOutputStream
    java.io.File newFile(java.lang.String) -> newFile
    void writeDocument() -> writeDocument
    void writeLocations() -> writeLocations
    void access$0(com.athlete.google.android.apps.mytracks.io.file.TrackWriterImpl) -> access$0
com.athlete.google.android.apps.mytracks.io.file.TrackWriterImpl$1 -> com.athlete.google.android.apps.mytracks.io.file.TrackWriterImpl$1:
    com.athlete.google.android.apps.mytracks.io.file.TrackWriterImpl this$0 -> this$0
    void run() -> run
com.athlete.google.android.apps.mytracks.io.file.TrackWriterImpl$1TrackWriterLocationFactory -> com.athlete.google.android.apps.mytracks.io.file.TrackWriterImpl$1TrackWriterLocationFactory:
    android.location.Location currentLocation -> currentLocation
    android.location.Location lastLocation -> lastLocation
    com.athlete.google.android.apps.mytracks.io.file.TrackWriterImpl this$0 -> this$0
    android.location.Location createLocation() -> createLocation
    void swapLocations() -> swapLocations
com.athlete.google.android.apps.mytracks.lib.MyTracksLibConstants -> com.athlete.google.android.apps.mytracks.lib.MyTracksLibConstants:
    java.lang.String TAG -> TAG
com.athlete.google.android.apps.mytracks.lib.R -> com.athlete.google.android.apps.mytracks.lib.R:
com.athlete.google.android.apps.mytracks.lib.R$drawable -> com.athlete.google.android.apps.mytracks.lib.R$drawable:
    int my_tracks_icon -> my_tracks_icon
    int arrow_icon -> arrow_icon
com.athlete.google.android.apps.mytracks.lib.R$string -> com.athlete.google.android.apps.mytracks.lib.R$string:
    int track_started_broadcast_action -> track_started_broadcast_action
    int broadcast_notifications_permission -> broadcast_notifications_permission
    int mytracks_service_package -> mytracks_service_package
    int mytracks_service_class -> mytracks_service_class
    int write_track_data_permission -> write_track_data_permission
    int read_track_data_permission -> read_track_data_permission
    int track_id_broadcast_extra -> track_id_broadcast_extra
    int lib_name -> lib_name
    int track_stopped_broadcast_action -> track_stopped_broadcast_action
    int track_paused_broadcast_action -> track_paused_broadcast_action
    int track_resumed_broadcast_action -> track_resumed_broadcast_action
com.athlete.google.android.apps.mytracks.maps.DynamicSpeedTrackPathDescriptor -> com.athlete.google.android.apps.mytracks.maps.DynamicSpeedTrackPathDescriptor:
    android.content.Context context -> context
    int speedMargin -> speedMargin
    int slowSpeed -> slowSpeed
    int normalSpeed -> normalSpeed
    double averageMovingSpeed -> averageMovingSpeed
    int CRITICAL_DIFFERENCE_PERCENTAGE -> CRITICAL_DIFFERENCE_PERCENTAGE
    int getSlowSpeed() -> getSlowSpeed
    int getNormalSpeed() -> getNormalSpeed
    boolean updateState() -> updateState
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    boolean isDifferenceSignificant(double,double) -> isDifferenceSignificant
    int getSpeedMargin() -> getSpeedMargin
    double getAverageMovingSpeed() -> getAverageMovingSpeed
    void setAverageMovingSpeed(double) -> setAverageMovingSpeed
com.athlete.google.android.apps.mytracks.maps.DynamicSpeedTrackPathPainter -> com.athlete.google.android.apps.mytracks.maps.DynamicSpeedTrackPathPainter:
    com.athlete.google.android.apps.mytracks.maps.TrackPathDescriptor trackPathDescriptor -> trackPathDescriptor
    android.graphics.Paint slowPaint -> slowPaint
    android.graphics.Paint mediumPaint -> mediumPaint
    android.graphics.Paint fastPaint -> fastPaint
    java.util.List coloredPaths -> coloredPaths
    boolean hasPath() -> hasPath
    boolean updateState() -> updateState
    void updatePath(com.google.android.maps.Projection,android.graphics.Rect,int,java.util.List) -> updatePath
    void clearPath() -> clearPath
    void drawPath(android.graphics.Canvas) -> drawPath
    java.util.List getColoredPaths() -> getColoredPaths
com.athlete.google.android.apps.mytracks.maps.FixedSpeedTrackPathDescriptor -> com.athlete.google.android.apps.mytracks.maps.FixedSpeedTrackPathDescriptor:
    android.content.Context context -> context
    int slowSpeed -> slowSpeed
    int normalSpeed -> normalSpeed
    int getSlowSpeed() -> getSlowSpeed
    int getNormalSpeed() -> getNormalSpeed
    boolean updateState() -> updateState
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
com.athlete.google.android.apps.mytracks.maps.SingleColorTrackPathPainter -> com.athlete.google.android.apps.mytracks.maps.SingleColorTrackPathPainter:
    android.graphics.Paint selectedTrackPaint -> selectedTrackPaint
    android.graphics.Path path -> path
    boolean hasPath() -> hasPath
    boolean updateState() -> updateState
    void updatePath(com.google.android.maps.Projection,android.graphics.Rect,int,java.util.List) -> updatePath
    void clearPath() -> clearPath
    void drawPath(android.graphics.Canvas) -> drawPath
    void updatePath(com.google.android.maps.Projection,android.graphics.Rect,int,java.util.List,android.graphics.Path) -> updatePath
    android.graphics.Path newPath() -> newPath
    android.graphics.Path getPath() -> getPath
com.athlete.google.android.apps.mytracks.maps.TrackPathDescriptor -> com.athlete.google.android.apps.mytracks.maps.TrackPathDescriptor:
    int getSlowSpeed() -> getSlowSpeed
    int getNormalSpeed() -> getNormalSpeed
    boolean updateState() -> updateState
com.athlete.google.android.apps.mytracks.maps.TrackPathPainter -> com.athlete.google.android.apps.mytracks.maps.TrackPathPainter:
    boolean hasPath() -> hasPath
    boolean updateState() -> updateState
    void updatePath(com.google.android.maps.Projection,android.graphics.Rect,int,java.util.List) -> updatePath
    void clearPath() -> clearPath
    void drawPath(android.graphics.Canvas) -> drawPath
com.athlete.google.android.apps.mytracks.maps.TrackPathPainterFactory -> com.athlete.google.android.apps.mytracks.maps.TrackPathPainterFactory:
    com.athlete.google.android.apps.mytracks.maps.TrackPathPainter getTrackPathPainter(android.content.Context) -> getTrackPathPainter
com.athlete.google.android.apps.mytracks.maps.TrackPathUtils -> com.athlete.google.android.apps.mytracks.maps.TrackPathUtils:
    android.graphics.Paint getPaint(android.content.Context,int) -> getPaint
com.athlete.google.android.apps.mytracks.services.AbsoluteLocationListenerPolicy -> com.athlete.google.android.apps.mytracks.services.AbsoluteLocationListenerPolicy:
    long interval -> interval
    long getDesiredPollingInterval() -> getDesiredPollingInterval
    int getMinDistance() -> getMinDistance
    void updateIdleTime(long) -> updateIdleTime
com.athlete.google.android.apps.mytracks.services.AdaptiveLocationListenerPolicy -> com.athlete.google.android.apps.mytracks.services.AdaptiveLocationListenerPolicy:
    long minInterval -> minInterval
    long maxInterval -> maxInterval
    int minDistance -> minDistance
    long idleTime -> idleTime
    long getDesiredPollingInterval() -> getDesiredPollingInterval
    int getMinDistance() -> getMinDistance
    void updateIdleTime(long) -> updateIdleTime
com.athlete.google.android.apps.mytracks.services.ControlRecordingService -> com.athlete.google.android.apps.mytracks.services.ControlRecordingService:
    com.athlete.google.android.apps.mytracks.services.ITrackRecordingService trackRecordingService -> trackRecordingService
    boolean connected -> connected
    void onCreate() -> onCreate
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void notifyConnected() -> notifyConnected
    void waitConnected() -> waitConnected
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    void onHandleIntent(android.content.Intent,com.athlete.google.android.apps.mytracks.services.ITrackRecordingService) -> onHandleIntent
    void onDestroy() -> onDestroy
com.athlete.google.android.apps.mytracks.services.ITrackRecordingService -> com.athlete.google.android.apps.mytracks.services.ITrackRecordingService:
    long startNewTrack() -> startNewTrack
    void pauseCurrentTrack() -> pauseCurrentTrack
    void resumeCurrentTrack() -> resumeCurrentTrack
    void endCurrentTrack() -> endCurrentTrack
    boolean isRecording() -> isRecording
    boolean isPaused() -> isPaused
    long getRecordingTrackId() -> getRecordingTrackId
    long getTotalTime() -> getTotalTime
    void insertTrackPoint(android.location.Location) -> insertTrackPoint
com.athlete.google.android.apps.mytracks.services.ITrackRecordingService$Stub -> com.athlete.google.android.apps.mytracks.services.ITrackRecordingService$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_startNewTrack -> TRANSACTION_startNewTrack
    int TRANSACTION_pauseCurrentTrack -> TRANSACTION_pauseCurrentTrack
    int TRANSACTION_resumeCurrentTrack -> TRANSACTION_resumeCurrentTrack
    int TRANSACTION_endCurrentTrack -> TRANSACTION_endCurrentTrack
    int TRANSACTION_isRecording -> TRANSACTION_isRecording
    int TRANSACTION_isPaused -> TRANSACTION_isPaused
    int TRANSACTION_getRecordingTrackId -> TRANSACTION_getRecordingTrackId
    int TRANSACTION_getTotalTime -> TRANSACTION_getTotalTime
    int TRANSACTION_insertTrackPoint -> TRANSACTION_insertTrackPoint
    com.athlete.google.android.apps.mytracks.services.ITrackRecordingService asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.athlete.google.android.apps.mytracks.services.ITrackRecordingService$Stub$Proxy -> com.athlete.google.android.apps.mytracks.services.ITrackRecordingService$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    long startNewTrack() -> startNewTrack
    void pauseCurrentTrack() -> pauseCurrentTrack
    void resumeCurrentTrack() -> resumeCurrentTrack
    void endCurrentTrack() -> endCurrentTrack
    boolean isRecording() -> isRecording
    boolean isPaused() -> isPaused
    long getRecordingTrackId() -> getRecordingTrackId
    long getTotalTime() -> getTotalTime
    void insertTrackPoint(android.location.Location) -> insertTrackPoint
com.athlete.google.android.apps.mytracks.services.LocationListenerPolicy -> com.athlete.google.android.apps.mytracks.services.LocationListenerPolicy:
    long getDesiredPollingInterval() -> getDesiredPollingInterval
    int getMinDistance() -> getMinDistance
    void updateIdleTime(long) -> updateIdleTime
com.athlete.google.android.apps.mytracks.services.MyTracksLocationManager -> com.athlete.google.android.apps.mytracks.services.MyTracksLocationManager:
    java.lang.String TAG -> TAG
    java.lang.String GOOGLE_SETTINGS_CONTENT_URI -> GOOGLE_SETTINGS_CONTENT_URI
    java.lang.String USE_LOCATION_FOR_SERVICES -> USE_LOCATION_FOR_SERVICES
    java.lang.String USE_LOCATION_FOR_SERVICES_ON -> USE_LOCATION_FOR_SERVICES_ON
    java.lang.String NAME -> NAME
    java.lang.String VALUE -> VALUE
    android.location.LocationManager locationManager -> locationManager
    android.content.ContentResolver contentResolver -> contentResolver
    com.athlete.google.android.apps.mytracks.services.MyTracksLocationManager$GoogleSettingsObserver observer -> observer
    boolean isAvailable -> isAvailable
    boolean isAllowed -> isAllowed
    void close() -> close
    boolean isAllowed() -> isAllowed
    boolean isProviderEnabled(java.lang.String) -> isProviderEnabled
    android.location.LocationProvider getProvider(java.lang.String) -> getProvider
    android.location.Location getLastKnownLocation(java.lang.String) -> getLastKnownLocation
    void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener) -> requestLocationUpdates
    void removeUpdates(android.location.LocationListener) -> removeUpdates
    boolean isUseLocationForServicesOn() -> isUseLocationForServicesOn
    boolean access$0(com.athlete.google.android.apps.mytracks.services.MyTracksLocationManager) -> access$0
    void access$1(com.athlete.google.android.apps.mytracks.services.MyTracksLocationManager,boolean) -> access$1
com.athlete.google.android.apps.mytracks.services.MyTracksLocationManager$GoogleSettingsObserver -> com.athlete.google.android.apps.mytracks.services.MyTracksLocationManager$GoogleSettingsObserver:
    com.athlete.google.android.apps.mytracks.services.MyTracksLocationManager this$0 -> this$0
    void onChange(boolean) -> onChange
com.athlete.google.android.apps.mytracks.services.RemoveTempFilesService -> com.athlete.google.android.apps.mytracks.services.RemoveTempFilesService:
    java.lang.String TAG -> TAG
    int ONE_HOUR_IN_MILLISECONDS -> ONE_HOUR_IN_MILLISECONDS
    com.athlete.google.android.apps.mytracks.services.RemoveTempFilesService$RemoveTempFilesAsyncTask removeTempFilesAsyncTask -> removeTempFilesAsyncTask
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void cleanTempDirectory(java.lang.String) -> cleanTempDirectory
    int cleanTempDirectory(java.io.File) -> cleanTempDirectory
    void access$0(com.athlete.google.android.apps.mytracks.services.RemoveTempFilesService,java.lang.String) -> access$0
com.athlete.google.android.apps.mytracks.services.RemoveTempFilesService$RemoveTempFilesAsyncTask -> com.athlete.google.android.apps.mytracks.services.RemoveTempFilesService$RemoveTempFilesAsyncTask:
    com.athlete.google.android.apps.mytracks.services.RemoveTempFilesService this$0 -> this$0
    java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Void) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.google.android.apps.mytracks.services.TrackRecordingService -> com.athlete.google.android.apps.mytracks.services.TrackRecordingService:
    java.lang.String TAG -> TAG
    double PAUSE_LATITUDE -> PAUSE_LATITUDE
    double RESUME_LATITUDE -> RESUME_LATITUDE
    int onMS -> onMS
    int offMS -> offMS
    long ONE_SECOND -> ONE_SECOND
    long ONE_MINUTE -> ONE_MINUTE
    int MAX_AUTO_RESUME_TRACK_RETRY_ATTEMPTS -> MAX_AUTO_RESUME_TRACK_RETRY_ATTEMPTS
    android.content.Context context -> context
    com.athlete.google.android.apps.mytracks.content.MyTracksProviderUtils myTracksProviderUtils -> myTracksProviderUtils
    com.athlete.google.android.apps.mytracks.services.MyTracksLocationManager myTracksLocationManager -> myTracksLocationManager
    com.athlete.google.android.apps.mytracks.services.tasks.PeriodicTaskExecutor announcementExecutor -> announcementExecutor
    com.athlete.google.android.apps.mytracks.services.tasks.PeriodicTaskExecutor splitExecutor -> splitExecutor
    java.util.concurrent.ExecutorService executorService -> executorService
    android.content.SharedPreferences sharedPreferences -> sharedPreferences
    long recordingTrackId -> recordingTrackId
    boolean recordingTrackPaused -> recordingTrackPaused
    com.athlete.google.android.apps.mytracks.services.LocationListenerPolicy locationListenerPolicy -> locationListenerPolicy
    int minRecordingDistance -> minRecordingDistance
    int maxRecordingDistance -> maxRecordingDistance
    int minRequiredAccuracy -> minRequiredAccuracy
    int autoResumeTrackTimeout -> autoResumeTrackTimeout
    long currentRecordingInterval -> currentRecordingInterval
    com.athlete.google.android.apps.mytracks.stats.TripStatisticsUpdater trackTripStatisticsUpdater -> trackTripStatisticsUpdater
    android.os.PowerManager$WakeLock wakeLock -> wakeLock
    android.location.Location lastLocation -> lastLocation
    boolean currentSegmentHasLocation -> currentSegmentHasLocation
    java.util.Timer timer -> timer
    android.os.Handler handler -> handler
    com.athlete.google.android.apps.mytracks.services.TrackRecordingService$ServiceBinder binder -> binder
    android.content.SharedPreferences$OnSharedPreferenceChangeListener sharedPreferenceChangeListener -> sharedPreferenceChangeListener
    android.location.LocationListener locationListener -> locationListener
    java.util.TimerTask checkLocationListener -> checkLocationListener
    void onCreate() -> onCreate
    void onStart(android.content.Intent,int) -> onStart
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    boolean isRecording() -> isRecording
    boolean isPaused() -> isPaused
    com.athlete.google.android.apps.mytracks.stats.TripStatistics getTripStatistics() -> getTripStatistics
    void startForegroundService(android.app.Notification) -> startForegroundService
    void stopForegroundService() -> stopForegroundService
    void handleStartCommand(android.content.Intent,int) -> handleStartCommand
    boolean shouldResumeTrack() -> shouldResumeTrack
    long startNewTrack() -> startNewTrack
    void restartTrack(com.athlete.google.android.apps.mytracks.content.Track) -> restartTrack
    void resumeCurrentTrack() -> resumeCurrentTrack
    void startRecording(boolean) -> startRecording
    void endCurrentTrack() -> endCurrentTrack
    android.location.Location getLastValidTrackPointInCurrentSegment(long) -> getLastValidTrackPointInCurrentSegment
    void pauseCurrentTrack() -> pauseCurrentTrack
    void endRecording(boolean,long) -> endRecording
    void updateRecordingState(long,boolean) -> updateRecordingState
    void onLocationChangedAsync(android.location.Location) -> onLocationChangedAsync
    void insertLocation(com.athlete.google.android.apps.mytracks.content.Track,android.location.Location,android.location.Location) -> insertLocation
    void updateRecordingTrack(com.athlete.google.android.apps.mytracks.content.Track,long,boolean) -> updateRecordingTrack
    void registerLocationListener() -> registerLocationListener
    void unregisterLocationListener() -> unregisterLocationListener
    void acquireWakeLock() -> acquireWakeLock
    void releaseWakeLock() -> releaseWakeLock
    void showNotification() -> showNotification
    void sendTrackBroadcast(int,long) -> sendTrackBroadcast
    android.content.Context access$0(com.athlete.google.android.apps.mytracks.services.TrackRecordingService) -> access$0
    void access$1(com.athlete.google.android.apps.mytracks.services.TrackRecordingService,long) -> access$1
    void access$2(com.athlete.google.android.apps.mytracks.services.TrackRecordingService,boolean) -> access$2
    com.athlete.google.android.apps.mytracks.services.tasks.PeriodicTaskExecutor access$3(com.athlete.google.android.apps.mytracks.services.TrackRecordingService) -> access$3
    com.athlete.google.android.apps.mytracks.services.tasks.PeriodicTaskExecutor access$4(com.athlete.google.android.apps.mytracks.services.TrackRecordingService) -> access$4
    void access$5(com.athlete.google.android.apps.mytracks.services.TrackRecordingService,com.athlete.google.android.apps.mytracks.services.LocationListenerPolicy) -> access$5
    void access$6(com.athlete.google.android.apps.mytracks.services.TrackRecordingService,int) -> access$6
    void access$7(com.athlete.google.android.apps.mytracks.services.TrackRecordingService,int) -> access$7
    void access$8(com.athlete.google.android.apps.mytracks.services.TrackRecordingService,int) -> access$8
    void access$9(com.athlete.google.android.apps.mytracks.services.TrackRecordingService,int) -> access$9
    com.athlete.google.android.apps.mytracks.services.MyTracksLocationManager access$10(com.athlete.google.android.apps.mytracks.services.TrackRecordingService) -> access$10
    java.util.concurrent.ExecutorService access$11(com.athlete.google.android.apps.mytracks.services.TrackRecordingService) -> access$11
    void access$12(com.athlete.google.android.apps.mytracks.services.TrackRecordingService,android.location.Location) -> access$12
    android.os.Handler access$13(com.athlete.google.android.apps.mytracks.services.TrackRecordingService) -> access$13
    void access$14(com.athlete.google.android.apps.mytracks.services.TrackRecordingService) -> access$14
    long access$15(com.athlete.google.android.apps.mytracks.services.TrackRecordingService) -> access$15
    void access$16(com.athlete.google.android.apps.mytracks.services.TrackRecordingService) -> access$16
    void access$17(com.athlete.google.android.apps.mytracks.services.TrackRecordingService) -> access$17
    void access$18(com.athlete.google.android.apps.mytracks.services.TrackRecordingService) -> access$18
    long access$19(com.athlete.google.android.apps.mytracks.services.TrackRecordingService) -> access$19
    com.athlete.google.android.apps.mytracks.stats.TripStatisticsUpdater access$20(com.athlete.google.android.apps.mytracks.services.TrackRecordingService) -> access$20
    android.location.LocationListener access$21(com.athlete.google.android.apps.mytracks.services.TrackRecordingService) -> access$21
com.athlete.google.android.apps.mytracks.services.TrackRecordingService$1 -> com.athlete.google.android.apps.mytracks.services.TrackRecordingService$1:
    com.athlete.google.android.apps.mytracks.services.TrackRecordingService this$0 -> this$0
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
com.athlete.google.android.apps.mytracks.services.TrackRecordingService$2 -> com.athlete.google.android.apps.mytracks.services.TrackRecordingService$2:
    com.athlete.google.android.apps.mytracks.services.TrackRecordingService this$0 -> this$0
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onLocationChanged(android.location.Location) -> onLocationChanged
    com.athlete.google.android.apps.mytracks.services.TrackRecordingService access$0(com.athlete.google.android.apps.mytracks.services.TrackRecordingService$2) -> access$0
com.athlete.google.android.apps.mytracks.services.TrackRecordingService$2$1 -> com.athlete.google.android.apps.mytracks.services.TrackRecordingService$2$1:
    com.athlete.google.android.apps.mytracks.services.TrackRecordingService$2 this$1 -> this$1
    android.location.Location val$location -> val$location
    void run() -> run
com.athlete.google.android.apps.mytracks.services.TrackRecordingService$3 -> com.athlete.google.android.apps.mytracks.services.TrackRecordingService$3:
    com.athlete.google.android.apps.mytracks.services.TrackRecordingService this$0 -> this$0
    void run() -> run
    com.athlete.google.android.apps.mytracks.services.TrackRecordingService access$0(com.athlete.google.android.apps.mytracks.services.TrackRecordingService$3) -> access$0
com.athlete.google.android.apps.mytracks.services.TrackRecordingService$3$1 -> com.athlete.google.android.apps.mytracks.services.TrackRecordingService$3$1:
    com.athlete.google.android.apps.mytracks.services.TrackRecordingService$3 this$1 -> this$1
    void run() -> run
com.athlete.google.android.apps.mytracks.services.TrackRecordingService$4 -> com.athlete.google.android.apps.mytracks.services.TrackRecordingService$4:
    com.athlete.google.android.apps.mytracks.services.TrackRecordingService this$0 -> this$0
    com.athlete.google.android.apps.mytracks.services.tasks.PeriodicTask create(android.content.Context) -> create
com.athlete.google.android.apps.mytracks.services.TrackRecordingService$ServiceBinder -> com.athlete.google.android.apps.mytracks.services.TrackRecordingService$ServiceBinder:
    com.athlete.google.android.apps.mytracks.services.TrackRecordingService trackRecordingService -> trackRecordingService
    android.os.IBinder$DeathRecipient deathRecipient -> deathRecipient
    boolean isBinderAlive() -> isBinderAlive
    boolean pingBinder() -> pingBinder
    void linkToDeath(android.os.IBinder$DeathRecipient,int) -> linkToDeath
    boolean unlinkToDeath(android.os.IBinder$DeathRecipient,int) -> unlinkToDeath
    long startNewTrack() -> startNewTrack
    void pauseCurrentTrack() -> pauseCurrentTrack
    void resumeCurrentTrack() -> resumeCurrentTrack
    void endCurrentTrack() -> endCurrentTrack
    boolean isRecording() -> isRecording
    boolean isPaused() -> isPaused
    long getRecordingTrackId() -> getRecordingTrackId
    long getTotalTime() -> getTotalTime
    void insertTrackPoint(android.location.Location) -> insertTrackPoint
    boolean canAccess() -> canAccess
    void detachFromService() -> detachFromService
    void access$0(com.athlete.google.android.apps.mytracks.services.TrackRecordingService$ServiceBinder) -> access$0
com.athlete.google.android.apps.mytracks.services.TrackRecordingServiceConnection -> com.athlete.google.android.apps.mytracks.services.TrackRecordingServiceConnection:
    java.lang.String TAG -> TAG
    android.os.IBinder$DeathRecipient deathRecipient -> deathRecipient
    android.content.ServiceConnection serviceConnection -> serviceConnection
    android.content.Context context -> context
    java.lang.Runnable callback -> callback
    com.athlete.google.android.apps.mytracks.services.ITrackRecordingService trackRecordingService -> trackRecordingService
    void startAndBind() -> startAndBind
    void bindIfStarted() -> bindIfStarted
    void unbindAndStop() -> unbindAndStop
    void unbind() -> unbind
    com.athlete.google.android.apps.mytracks.services.ITrackRecordingService getServiceIfBound() -> getServiceIfBound
    void bindService(boolean) -> bindService
    void setTrackRecordingService(com.athlete.google.android.apps.mytracks.services.ITrackRecordingService) -> setTrackRecordingService
    java.lang.String access$0() -> access$0
    void access$1(com.athlete.google.android.apps.mytracks.services.TrackRecordingServiceConnection,com.athlete.google.android.apps.mytracks.services.ITrackRecordingService) -> access$1
    android.os.IBinder$DeathRecipient access$2(com.athlete.google.android.apps.mytracks.services.TrackRecordingServiceConnection) -> access$2
com.athlete.google.android.apps.mytracks.services.TrackRecordingServiceConnection$1 -> com.athlete.google.android.apps.mytracks.services.TrackRecordingServiceConnection$1:
    com.athlete.google.android.apps.mytracks.services.TrackRecordingServiceConnection this$0 -> this$0
    void binderDied() -> binderDied
com.athlete.google.android.apps.mytracks.services.TrackRecordingServiceConnection$2 -> com.athlete.google.android.apps.mytracks.services.TrackRecordingServiceConnection$2:
    com.athlete.google.android.apps.mytracks.services.TrackRecordingServiceConnection this$0 -> this$0
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.athlete.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTask -> com.athlete.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTask:
    float TTS_SPEECH_RATE -> TTS_SPEECH_RATE
    java.lang.String TAG -> TAG
    long HOUR_TO_MILLISECOND -> HOUR_TO_MILLISECOND
    android.content.Context context -> context
    android.speech.tts.TextToSpeech tts -> tts
    int initStatus -> initStatus
    boolean ready -> ready
    boolean speechAllowed -> speechAllowed
    android.telephony.PhoneStateListener phoneStateListener -> phoneStateListener
    void start() -> start
    void run(com.athlete.google.android.apps.mytracks.services.TrackRecordingService) -> run
    void announce(com.athlete.google.android.apps.mytracks.stats.TripStatistics) -> announce
    void shutdown() -> shutdown
    void onTtsReady() -> onTtsReady
    void speakAnnouncement(java.lang.String) -> speakAnnouncement
    android.speech.tts.TextToSpeech newTextToSpeech(android.content.Context,android.speech.tts.TextToSpeech$OnInitListener) -> newTextToSpeech
    java.lang.String getAnnouncement(com.athlete.google.android.apps.mytracks.stats.TripStatistics) -> getAnnouncement
    void listenToPhoneState(android.telephony.PhoneStateListener,int) -> listenToPhoneState
    java.lang.String getAnnounceTime(long) -> getAnnounceTime
    int getQuantityCount(double) -> getQuantityCount
    void access$0(com.athlete.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTask,boolean) -> access$0
    boolean access$1(com.athlete.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTask) -> access$1
    void access$2(com.athlete.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTask,int) -> access$2
com.athlete.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTask$1 -> com.athlete.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTask$1:
    com.athlete.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTask this$0 -> this$0
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
com.athlete.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTask$2 -> com.athlete.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTask$2:
    com.athlete.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTask this$0 -> this$0
    void onInit(int) -> onInit
com.athlete.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTaskFactory -> com.athlete.google.android.apps.mytracks.services.tasks.AnnouncementPeriodicTaskFactory:
    com.athlete.google.android.apps.mytracks.services.tasks.PeriodicTask create(android.content.Context) -> create
com.athlete.google.android.apps.mytracks.services.tasks.Api8AnnouncementPeriodicTask -> com.athlete.google.android.apps.mytracks.services.tasks.Api8AnnouncementPeriodicTask:
    java.lang.String TAG -> TAG
    java.util.HashMap SPEECH_PARAMS -> SPEECH_PARAMS
    android.speech.tts.TextToSpeech$OnUtteranceCompletedListener utteranceListener -> utteranceListener
    android.media.AudioManager audioManager -> audioManager
    void onTtsReady() -> onTtsReady
    void speakAnnouncement(java.lang.String) -> speakAnnouncement
    android.media.AudioManager access$0(com.athlete.google.android.apps.mytracks.services.tasks.Api8AnnouncementPeriodicTask) -> access$0
    java.lang.String access$1() -> access$1
com.athlete.google.android.apps.mytracks.services.tasks.Api8AnnouncementPeriodicTask$1 -> com.athlete.google.android.apps.mytracks.services.tasks.Api8AnnouncementPeriodicTask$1:
    com.athlete.google.android.apps.mytracks.services.tasks.Api8AnnouncementPeriodicTask this$0 -> this$0
    void onUtteranceCompleted(java.lang.String) -> onUtteranceCompleted
com.athlete.google.android.apps.mytracks.services.tasks.PeriodicTask -> com.athlete.google.android.apps.mytracks.services.tasks.PeriodicTask:
    void start() -> start
    void run(com.athlete.google.android.apps.mytracks.services.TrackRecordingService) -> run
    void shutdown() -> shutdown
com.athlete.google.android.apps.mytracks.services.tasks.PeriodicTaskExecutor -> com.athlete.google.android.apps.mytracks.services.tasks.PeriodicTaskExecutor:
    java.lang.String TAG -> TAG
    long MINUTE_TO_MILLISECONDS -> MINUTE_TO_MILLISECONDS
    com.athlete.google.android.apps.mytracks.services.TrackRecordingService trackRecordingService -> trackRecordingService
    com.athlete.google.android.apps.mytracks.services.tasks.PeriodicTaskFactory periodicTaskFactory -> periodicTaskFactory
    int taskFrequency -> taskFrequency
    com.athlete.google.android.apps.mytracks.services.tasks.PeriodicTask periodicTask -> periodicTask
    com.athlete.google.android.apps.mytracks.services.tasks.TimerTaskExecutor timerTaskExecutor -> timerTaskExecutor
    boolean metricUnits -> metricUnits
    double nextTaskDistance -> nextTaskDistance
    void restore() -> restore
    void shutdown() -> shutdown
    void update() -> update
    void setTaskFrequency(int) -> setTaskFrequency
    void setMetricUnits(boolean) -> setMetricUnits
    void calculateNextTaskDistance() -> calculateNextTaskDistance
    boolean isTimeFrequency() -> isTimeFrequency
    boolean isDistanceFrequency() -> isDistanceFrequency
com.athlete.google.android.apps.mytracks.services.tasks.PeriodicTaskFactory -> com.athlete.google.android.apps.mytracks.services.tasks.PeriodicTaskFactory:
    com.athlete.google.android.apps.mytracks.services.tasks.PeriodicTask create(android.content.Context) -> create
com.athlete.google.android.apps.mytracks.services.tasks.TimerTaskExecutor -> com.athlete.google.android.apps.mytracks.services.tasks.TimerTaskExecutor:
    com.athlete.google.android.apps.mytracks.services.tasks.PeriodicTask periodicTask -> periodicTask
    com.athlete.google.android.apps.mytracks.services.TrackRecordingService trackRecordingService -> trackRecordingService
    java.util.Timer timer -> timer
    void scheduleTask(long) -> scheduleTask
    void shutdown() -> shutdown
    com.athlete.google.android.apps.mytracks.services.tasks.PeriodicTask access$0(com.athlete.google.android.apps.mytracks.services.tasks.TimerTaskExecutor) -> access$0
    com.athlete.google.android.apps.mytracks.services.TrackRecordingService access$1(com.athlete.google.android.apps.mytracks.services.tasks.TimerTaskExecutor) -> access$1
com.athlete.google.android.apps.mytracks.services.tasks.TimerTaskExecutor$PeriodicTimerTask -> com.athlete.google.android.apps.mytracks.services.tasks.TimerTaskExecutor$PeriodicTimerTask:
    com.athlete.google.android.apps.mytracks.services.tasks.TimerTaskExecutor this$0 -> this$0
    void run() -> run
com.athlete.google.android.apps.mytracks.stats.DoubleBuffer -> com.athlete.google.android.apps.mytracks.stats.DoubleBuffer:
    int index -> index
    double[] buffer -> buffer
    boolean isFull -> isFull
    void reset() -> reset
    boolean isFull() -> isFull
    double getAverage() -> getAverage
    double getAverageElevation() -> getAverageElevation
    double[] getAverageAndVariance() -> getAverageAndVariance
    void setNext(double) -> setNext
    java.lang.String toString() -> toString
com.athlete.google.android.apps.mytracks.stats.ExtremityMonitor -> com.athlete.google.android.apps.mytracks.stats.ExtremityMonitor:
    double min -> min
    double max -> max
    void reset() -> reset
    double getMin() -> getMin
    double getMax() -> getMax
    boolean update(double) -> update
    void set(double,double) -> set
    void setMin(double) -> setMin
    void setMax(double) -> setMax
    boolean hasData() -> hasData
    java.lang.String toString() -> toString
com.athlete.google.android.apps.mytracks.stats.TripStatistics -> com.athlete.google.android.apps.mytracks.stats.TripStatistics:
    long startTime -> startTime
    long stopTime -> stopTime
    double totalDistance -> totalDistance
    long totalTime -> totalTime
    long movingTime -> movingTime
    com.athlete.google.android.apps.mytracks.stats.ExtremityMonitor latitudeExtremities -> latitudeExtremities
    com.athlete.google.android.apps.mytracks.stats.ExtremityMonitor longitudeExtremities -> longitudeExtremities
    double maxSpeed -> maxSpeed
    com.athlete.google.android.apps.mytracks.stats.ExtremityMonitor elevationExtremities -> elevationExtremities
    double totalElevationGain -> totalElevationGain
    double currentElevation -> currentElevation
    com.athlete.google.android.apps.mytracks.stats.ExtremityMonitor gradeExtremities -> gradeExtremities
    com.athlete.google.android.apps.mytracks.stats.TripStatistics$Creator CREATOR -> CREATOR
    void merge(com.athlete.google.android.apps.mytracks.stats.TripStatistics) -> merge
    long getStartTime() -> getStartTime
    long getStopTime() -> getStopTime
    double getTotalDistance() -> getTotalDistance
    long getTotalTime() -> getTotalTime
    long getMovingTime() -> getMovingTime
    double getTopDegrees() -> getTopDegrees
    int getTop() -> getTop
    double getBottomDegrees() -> getBottomDegrees
    int getBottom() -> getBottom
    double getLeftDegrees() -> getLeftDegrees
    int getLeft() -> getLeft
    double getRightDegrees() -> getRightDegrees
    int getRight() -> getRight
    double getMeanLatitude() -> getMeanLatitude
    double getMeanLongitude() -> getMeanLongitude
    double getAverageSpeed() -> getAverageSpeed
    double getAverageMovingSpeed() -> getAverageMovingSpeed
    double getMaxSpeed() -> getMaxSpeed
    double getMinElevation() -> getMinElevation
    double getMaxElevation() -> getMaxElevation
    double getTotalElevationGain() -> getTotalElevationGain
    double getCurrentElevation() -> getCurrentElevation
    double getMinGrade() -> getMinGrade
    double getMaxGrade() -> getMaxGrade
    void setStartTime(long) -> setStartTime
    void setStopTime(long) -> setStopTime
    void setTotalDistance(double) -> setTotalDistance
    void addTotalDistance(double) -> addTotalDistance
    void setTotalTime(long) -> setTotalTime
    void setMovingTime(long) -> setMovingTime
    void addMovingTime(long) -> addMovingTime
    void setBounds(int,int,int,int) -> setBounds
    void updateLatitudeExtremities(double) -> updateLatitudeExtremities
    void updateLongitudeExtremities(double) -> updateLongitudeExtremities
    void setMaxSpeed(double) -> setMaxSpeed
    void setMinElevation(double) -> setMinElevation
    void setMaxElevation(double) -> setMaxElevation
    void updateElevationExtremities(double) -> updateElevationExtremities
    void setTotalElevationGain(double) -> setTotalElevationGain
    void setCurrentElevation(double) -> setCurrentElevation
    void addTotalElevationGain(double) -> addTotalElevationGain
    void setMinGrade(double) -> setMinGrade
    void setMaxGrade(double) -> setMaxGrade
    void updateGradeExtremities(double) -> updateGradeExtremities
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void access$0(com.athlete.google.android.apps.mytracks.stats.TripStatistics,long) -> access$0
    void access$1(com.athlete.google.android.apps.mytracks.stats.TripStatistics,long) -> access$1
    void access$2(com.athlete.google.android.apps.mytracks.stats.TripStatistics,double) -> access$2
    void access$3(com.athlete.google.android.apps.mytracks.stats.TripStatistics,double) -> access$3
    void access$4(com.athlete.google.android.apps.mytracks.stats.TripStatistics,long) -> access$4
    void access$5(com.athlete.google.android.apps.mytracks.stats.TripStatistics,long) -> access$5
    com.athlete.google.android.apps.mytracks.stats.ExtremityMonitor access$6(com.athlete.google.android.apps.mytracks.stats.TripStatistics) -> access$6
    com.athlete.google.android.apps.mytracks.stats.ExtremityMonitor access$7(com.athlete.google.android.apps.mytracks.stats.TripStatistics) -> access$7
    void access$8(com.athlete.google.android.apps.mytracks.stats.TripStatistics,double) -> access$8
    com.athlete.google.android.apps.mytracks.stats.ExtremityMonitor access$9(com.athlete.google.android.apps.mytracks.stats.TripStatistics) -> access$9
    void access$10(com.athlete.google.android.apps.mytracks.stats.TripStatistics,double) -> access$10
    com.athlete.google.android.apps.mytracks.stats.ExtremityMonitor access$11(com.athlete.google.android.apps.mytracks.stats.TripStatistics) -> access$11
com.athlete.google.android.apps.mytracks.stats.TripStatistics$Creator -> com.athlete.google.android.apps.mytracks.stats.TripStatistics$Creator:
    com.athlete.google.android.apps.mytracks.stats.TripStatistics createFromParcel(android.os.Parcel) -> createFromParcel
    com.athlete.google.android.apps.mytracks.stats.TripStatistics[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.athlete.google.android.apps.mytracks.stats.TripStatisticsUpdater -> com.athlete.google.android.apps.mytracks.stats.TripStatisticsUpdater:
    com.athlete.google.android.apps.mytracks.stats.TripStatistics tripStatistics -> tripStatistics
    com.athlete.google.android.apps.mytracks.stats.TripStatistics currentSegment -> currentSegment
    android.location.Location lastLocation -> lastLocation
    android.location.Location lastMovingLocation -> lastMovingLocation
    com.athlete.google.android.apps.mytracks.stats.DoubleBuffer speedBuffer -> speedBuffer
    com.athlete.google.android.apps.mytracks.stats.DoubleBuffer elevationBuffer -> elevationBuffer
    com.athlete.google.android.apps.mytracks.stats.DoubleBuffer distanceBuffer -> distanceBuffer
    com.athlete.google.android.apps.mytracks.stats.DoubleBuffer gradeBuffer -> gradeBuffer
    int ELEVATION_GAIN_THRESHOLD_METERS -> ELEVATION_GAIN_THRESHOLD_METERS
    double sectionDelta -> sectionDelta
    void updateTime(long) -> updateTime
    com.athlete.google.android.apps.mytracks.stats.TripStatistics getTripStatistics() -> getTripStatistics
    void addLocation(android.location.Location,int) -> addLocation
    double getSmoothedElevation() -> getSmoothedElevation
    double getSmoothedSpeed() -> getSmoothedSpeed
    void updateSpeed(long,double,long,double) -> updateSpeed
    double updateElevation(double,boolean) -> updateElevation
    void updateGrade(double,double) -> updateGrade
    com.athlete.google.android.apps.mytracks.stats.TripStatistics init(long) -> init
    boolean isValidSpeed(long,double,long,double) -> isValidSpeed
com.athlete.google.android.apps.mytracks.util.Api11Adapter -> com.athlete.google.android.apps.mytracks.util.Api11Adapter:
    com.athlete.google.android.apps.mytracks.services.tasks.PeriodicTask getAnnouncementPeriodicTask(android.content.Context) -> getAnnouncementPeriodicTask
    void applyPreferenceChanges(android.content.SharedPreferences$Editor) -> applyPreferenceChanges
    void enableStrictMode() -> enableStrictMode
    byte[] copyByteArray(byte[],int,int) -> copyByteArray
    com.google.api.client.http.HttpTransport getHttpTransport() -> getHttpTransport
    boolean isGeoCoderPresent() -> isGeoCoderPresent
    void hideTitle(android.app.Activity) -> hideTitle
    void configureActionBarHomeAsUp(android.app.Activity) -> configureActionBarHomeAsUp
    void configureSearchWidget(android.app.Activity,android.view.MenuItem) -> configureSearchWidget
    boolean handleSearchMenuSelection(android.app.Activity) -> handleSearchMenuSelection
    void addAllToArrayAdapter(android.widget.ArrayAdapter,java.util.List) -> addAllToArrayAdapter
    void invalidMenu(android.app.Activity) -> invalidMenu
    void disableHardwareAccelerated(android.view.View) -> disableHardwareAccelerated
    boolean handleSearchKey(android.view.MenuItem) -> handleSearchKey
com.athlete.google.android.apps.mytracks.util.Api7Adapter -> com.athlete.google.android.apps.mytracks.util.Api7Adapter:
    com.athlete.google.android.apps.mytracks.services.tasks.PeriodicTask getAnnouncementPeriodicTask(android.content.Context) -> getAnnouncementPeriodicTask
    void applyPreferenceChanges(android.content.SharedPreferences$Editor) -> applyPreferenceChanges
    void enableStrictMode() -> enableStrictMode
    byte[] copyByteArray(byte[],int,int) -> copyByteArray
    com.google.api.client.http.HttpTransport getHttpTransport() -> getHttpTransport
    boolean isGeoCoderPresent() -> isGeoCoderPresent
    void hideTitle(android.app.Activity) -> hideTitle
    void configureActionBarHomeAsUp(android.app.Activity) -> configureActionBarHomeAsUp
    void configureSearchWidget(android.app.Activity,android.view.MenuItem) -> configureSearchWidget
    boolean handleSearchMenuSelection(android.app.Activity) -> handleSearchMenuSelection
    void addAllToArrayAdapter(android.widget.ArrayAdapter,java.util.List) -> addAllToArrayAdapter
    void invalidMenu(android.app.Activity) -> invalidMenu
    void disableHardwareAccelerated(android.view.View) -> disableHardwareAccelerated
    boolean handleSearchKey(android.view.MenuItem) -> handleSearchKey
com.athlete.google.android.apps.mytracks.util.ApiAdapter -> com.athlete.google.android.apps.mytracks.util.ApiAdapter:
    com.athlete.google.android.apps.mytracks.services.tasks.PeriodicTask getAnnouncementPeriodicTask(android.content.Context) -> getAnnouncementPeriodicTask
    void applyPreferenceChanges(android.content.SharedPreferences$Editor) -> applyPreferenceChanges
    void enableStrictMode() -> enableStrictMode
    byte[] copyByteArray(byte[],int,int) -> copyByteArray
    com.google.api.client.http.HttpTransport getHttpTransport() -> getHttpTransport
    boolean isGeoCoderPresent() -> isGeoCoderPresent
    void hideTitle(android.app.Activity) -> hideTitle
    void configureActionBarHomeAsUp(android.app.Activity) -> configureActionBarHomeAsUp
    void configureSearchWidget(android.app.Activity,android.view.MenuItem) -> configureSearchWidget
    boolean handleSearchMenuSelection(android.app.Activity) -> handleSearchMenuSelection
    void addAllToArrayAdapter(android.widget.ArrayAdapter,java.util.List) -> addAllToArrayAdapter
    void invalidMenu(android.app.Activity) -> invalidMenu
    void disableHardwareAccelerated(android.view.View) -> disableHardwareAccelerated
    boolean handleSearchKey(android.view.MenuItem) -> handleSearchKey
com.athlete.google.android.apps.mytracks.util.ApiAdapterFactory -> com.athlete.google.android.apps.mytracks.util.ApiAdapterFactory:
    com.athlete.google.android.apps.mytracks.util.ApiAdapter apiAdapter -> apiAdapter
    com.athlete.google.android.apps.mytracks.util.ApiAdapter getApiAdapter() -> getApiAdapter
com.athlete.google.android.apps.mytracks.util.DialogUtils -> com.athlete.google.android.apps.mytracks.util.DialogUtils:
    android.app.Dialog createConfirmationDialog(android.content.Context,int,android.content.DialogInterface$OnClickListener) -> createConfirmationDialog
    android.app.Dialog createConfirmationDialog(android.content.Context,int,android.view.View,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnClickListener) -> createConfirmationDialog
    android.app.ProgressDialog createSpinnerProgressDialog(android.content.Context,int,android.content.DialogInterface$OnCancelListener) -> createSpinnerProgressDialog
    android.app.ProgressDialog createHorizontalProgressDialog(android.content.Context,int,android.content.DialogInterface$OnCancelListener,java.lang.Object[]) -> createHorizontalProgressDialog
    android.app.ProgressDialog createProgressDialog(boolean,android.content.Context,int,android.content.DialogInterface$OnCancelListener,java.lang.Object[]) -> createProgressDialog
com.athlete.google.android.apps.mytracks.util.FileUtils -> com.athlete.google.android.apps.mytracks.util.FileUtils:
    int MAX_FAT32_PATH_LENGTH -> MAX_FAT32_PATH_LENGTH
    boolean isSdCardAvailable() -> isSdCardAvailable
    boolean ensureDirectoryExists(java.io.File) -> ensureDirectoryExists
    java.lang.String buildExternalDirectoryPath(java.lang.String[]) -> buildExternalDirectoryPath
    java.lang.String buildUniqueFileName(java.io.File,java.lang.String,java.lang.String) -> buildUniqueFileName
    java.lang.String buildUniqueFileName(java.io.File,java.lang.String,java.lang.String,int) -> buildUniqueFileName
    java.lang.String sanitizeFileName(java.lang.String) -> sanitizeFileName
    boolean isSpecialFat32(char) -> isSpecialFat32
    java.lang.String truncateFileName(java.io.File,java.lang.String,java.lang.String) -> truncateFileName
com.athlete.google.android.apps.mytracks.util.GeoRect -> com.athlete.google.android.apps.mytracks.util.GeoRect:
    int top -> top
    int left -> left
    int bottom -> bottom
    int right -> right
    com.google.android.maps.GeoPoint getCenter() -> getCenter
    int getLatSpan() -> getLatSpan
    int getLongSpan() -> getLongSpan
    boolean contains(com.google.android.maps.GeoPoint) -> contains
com.athlete.google.android.apps.mytracks.util.GoogleLocationUtils -> com.athlete.google.android.apps.mytracks.util.GoogleLocationUtils:
    java.lang.String ACTION_GOOGLE_LOCATION_SETTINGS -> ACTION_GOOGLE_LOCATION_SETTINGS
    java.lang.String ACTION_GOOGLE_APPS_LOCATION_SETTINGS -> ACTION_GOOGLE_APPS_LOCATION_SETTINGS
    boolean isAvailable(android.content.Context) -> isAvailable
com.athlete.google.android.apps.mytracks.util.IntentUtils -> com.athlete.google.android.apps.mytracks.util.IntentUtils:
    java.lang.String TEXT_PLAIN_TYPE -> TEXT_PLAIN_TYPE
    android.content.Intent newIntent(android.content.Context,java.lang.Class) -> newIntent
com.athlete.google.android.apps.mytracks.util.LocationUtils -> com.athlete.google.android.apps.mytracks.util.LocationUtils:
    double distance(android.location.Location,android.location.Location,android.location.Location) -> distance
    void decimate(double,java.util.ArrayList,java.util.ArrayList) -> decimate
    void decimate(com.athlete.google.android.apps.mytracks.content.Track,double) -> decimate
    void cut(com.athlete.google.android.apps.mytracks.content.Track,int) -> cut
    java.util.ArrayList split(com.athlete.google.android.apps.mytracks.content.Track,int) -> split
    boolean isValidGeoPoint(com.google.android.maps.GeoPoint) -> isValidGeoPoint
    boolean isValidLocation(android.location.Location) -> isValidLocation
    android.location.Location getLocation(com.google.android.maps.GeoPoint) -> getLocation
    com.google.android.maps.GeoPoint getGeoPoint(android.location.Location) -> getGeoPoint
com.athlete.google.android.apps.mytracks.util.PreferencesUtils -> com.athlete.google.android.apps.mytracks.util.PreferencesUtils:
    int IS_DELETE -> IS_DELETE
    boolean ALLOW_ACCESS_DEFAULT -> ALLOW_ACCESS_DEFAULT
    int ANNOUNCEMENT_FREQUENCY_DEFAULT -> ANNOUNCEMENT_FREQUENCY_DEFAULT
    int AUTO_RESUME_TRACK_CURRENT_RETRY_DEFAULT -> AUTO_RESUME_TRACK_CURRENT_RETRY_DEFAULT
    int AUTO_RESUME_TRACK_TIMEOUT_ALWAYS -> AUTO_RESUME_TRACK_TIMEOUT_ALWAYS
    int AUTO_RESUME_TRACK_TIMEOUT_DEFAULT -> AUTO_RESUME_TRACK_TIMEOUT_DEFAULT
    int AUTO_RESUME_TRACK_TIMEOUT_NEVER -> AUTO_RESUME_TRACK_TIMEOUT_NEVER
    java.lang.String BLUETOOTH_SENSOR_DEFAULT -> BLUETOOTH_SENSOR_DEFAULT
    boolean CHART_BY_DISTANCE_DEFAULT -> CHART_BY_DISTANCE_DEFAULT
    boolean CHART_SHOW_CADENCE_DEFAULT -> CHART_SHOW_CADENCE_DEFAULT
    boolean CHART_SHOW_ELEVATION_DEFAULT -> CHART_SHOW_ELEVATION_DEFAULT
    boolean CHART_SHOW_HEART_RATE_DEFAULT -> CHART_SHOW_HEART_RATE_DEFAULT
    boolean CHART_SHOW_POWER_DEFAULT -> CHART_SHOW_POWER_DEFAULT
    boolean CHART_SHOW_SPEED_DEFAULT -> CHART_SHOW_SPEED_DEFAULT
    java.lang.String DEFAULT_ACTIVITY_DEFAULT -> DEFAULT_ACTIVITY_DEFAULT
    boolean DEFAULT_MAP_PUBLIC_DEFAULT -> DEFAULT_MAP_PUBLIC_DEFAULT
    int FREQUENCY_OFF -> FREQUENCY_OFF
    java.lang.String GOOGLE_ACCOUNT_DEFAULT -> GOOGLE_ACCOUNT_DEFAULT
    int MAX_RECORDING_DISTANCE_DEFAULT -> MAX_RECORDING_DISTANCE_DEFAULT
    boolean METRIC_UNITS_DEFAULT -> METRIC_UNITS_DEFAULT
    int MIN_RECORDING_DISTANCE_DEFAULT -> MIN_RECORDING_DISTANCE_DEFAULT
    int MIN_RECORDING_INTERVAL_ADAPT_ACCURACY -> MIN_RECORDING_INTERVAL_ADAPT_ACCURACY
    int MIN_RECORDING_INTERVAL_ADAPT_BATTERY_LIFE -> MIN_RECORDING_INTERVAL_ADAPT_BATTERY_LIFE
    int MIN_RECORDING_INTERVAL_DEFAULT -> MIN_RECORDING_INTERVAL_DEFAULT
    int MIN_REQUIRED_ACCURACY_DEFAULT -> MIN_REQUIRED_ACCURACY_DEFAULT
    int MIN_REQUIRED_ACCURACY_EXCELLENT -> MIN_REQUIRED_ACCURACY_EXCELLENT
    int MIN_REQUIRED_ACCURACY_POOR -> MIN_REQUIRED_ACCURACY_POOR
    boolean PICK_EXISTING_MAP_DEFAULT -> PICK_EXISTING_MAP_DEFAULT
    long RECORDING_TRACK_ID_DEFAULT -> RECORDING_TRACK_ID_DEFAULT
    boolean RECORDING_TRACK_PAUSED_DEFAULT -> RECORDING_TRACK_PAUSED_DEFAULT
    boolean REPORT_SPEED_DEFAULT -> REPORT_SPEED_DEFAULT
    long SELECTED_TRACK_ID_DEFAULT -> SELECTED_TRACK_ID_DEFAULT
    boolean SEND_TO_DOCS_DEFAULT -> SEND_TO_DOCS_DEFAULT
    boolean SEND_TO_FUSION_TABLES_DEFAULT -> SEND_TO_FUSION_TABLES_DEFAULT
    boolean SEND_TO_MAPS_DEFAULT -> SEND_TO_MAPS_DEFAULT
    boolean SHOW_CONFIRM_SHARING_DIALOG_DEFAULT -> SHOW_CONFIRM_SHARING_DIALOG_DEFAULT
    int SPLIT_FREQUENCY_DEFAULT -> SPLIT_FREQUENCY_DEFAULT
    boolean STATS_SHOW_COORDINATE_DEFAULT -> STATS_SHOW_COORDINATE_DEFAULT
    boolean STATS_SHOW_ELEVATION_DEFAULT -> STATS_SHOW_ELEVATION_DEFAULT
    boolean STATS_SHOW_GRADE_DEFAULT -> STATS_SHOW_GRADE_DEFAULT
    boolean STATS_SHOW_MOVING_TIME_DEFAULT -> STATS_SHOW_MOVING_TIME_DEFAULT
    int TRACK_COLOR_MODE_MEDIUM_DEFAULT -> TRACK_COLOR_MODE_MEDIUM_DEFAULT
    int TRACK_COLOR_MODE_PERCENTAGE_DEFAULT -> TRACK_COLOR_MODE_PERCENTAGE_DEFAULT
    int TRACK_COLOR_MODE_SLOW_DEFAULT -> TRACK_COLOR_MODE_SLOW_DEFAULT
    java.lang.String getKey(android.content.Context,int) -> getKey
    boolean getBoolean(android.content.Context,int,boolean) -> getBoolean
    boolean getMetricUnit(android.content.Context) -> getMetricUnit
    void setBoolean(android.content.Context,int,boolean) -> setBoolean
    int getInt(android.content.Context,int,int) -> getInt
    void setInt(android.content.Context,int,int) -> setInt
    long getLong(android.content.Context,int) -> getLong
    void setLong(android.content.Context,int,long) -> setLong
    java.lang.String getString(android.content.Context,int,java.lang.String) -> getString
    void setString(android.content.Context,int,java.lang.String) -> setString
com.athlete.google.android.apps.mytracks.util.ResourceUtils -> com.athlete.google.android.apps.mytracks.util.ResourceUtils:
    java.lang.CharSequence readFile(android.content.Context,int) -> readFile
    void readBinaryFileToOutputStream(android.content.Context,int,java.io.OutputStream) -> readBinaryFileToOutputStream
com.athlete.google.android.apps.mytracks.util.StatsUtils -> com.athlete.google.android.apps.mytracks.util.StatsUtils:
    void setTotalTimeValue(android.app.Activity,long) -> setTotalTimeValue
    void setTripStatisticsValues(android.app.Activity,com.athlete.google.android.apps.mytracks.stats.TripStatistics,double) -> setTripStatisticsValues
    void setSpeedValue(android.app.Activity,int,double,boolean,boolean) -> setSpeedValue
    void setDistanceValue(android.app.Activity,int,int,double,boolean) -> setDistanceValue
    void setTimeValue(android.app.Activity,int,long) -> setTimeValue
    void setElevationValue(android.app.Activity,int,double,boolean) -> setElevationValue
com.athlete.google.android.apps.mytracks.util.StringUtils -> com.athlete.google.android.apps.mytracks.util.StringUtils:
    java.text.SimpleDateFormat ISO_8601_DATE_TIME_FORMAT -> ISO_8601_DATE_TIME_FORMAT
    java.text.SimpleDateFormat yyyyMMddTHHmmssz -> yyyyMMddTHHmmssz
    java.text.SimpleDateFormat ISO_8601_BASE -> ISO_8601_BASE
    java.util.regex.Pattern ISO_8601_EXTRAS -> ISO_8601_EXTRAS
    java.lang.String formatDateTime(android.content.Context,long) -> formatDateTime
    java.lang.String formatRelativeDateTime(android.content.Context,long) -> formatRelativeDateTime
    java.lang.String formatDateTimeIso8601(long) -> formatDateTimeIso8601
    java.lang.String formatElapsedTime(long) -> formatElapsedTime
    java.lang.String formatElapsedTimeWithHour(long) -> formatElapsedTimeWithHour
    android.util.Pair formatDistance(android.content.Context,double,boolean,boolean) -> formatDistance
    java.lang.String formatSpeed(android.content.Context,double,boolean,boolean) -> formatSpeed
    java.lang.String formatCData(java.lang.String) -> formatCData
    long getTime(java.lang.String) -> getTime
    int[] getTimeParts(long) -> getTimeParts
com.athlete.google.android.apps.mytracks.util.TrackNameUtils -> com.athlete.google.android.apps.mytracks.util.TrackNameUtils:
    java.lang.String ISO_8601_FORMAT -> ISO_8601_FORMAT
    java.lang.String getTrackName(android.content.Context,long,long,android.location.Location) -> getTrackName
    java.lang.String getReverseGeoCoding(android.content.Context,android.location.Location) -> getReverseGeoCoding
com.athlete.google.android.apps.mytracks.util.TrackRecordingServiceConnectionUtils -> com.athlete.google.android.apps.mytracks.util.TrackRecordingServiceConnectionUtils:
    java.lang.String TAG -> TAG
    boolean isRecordingServiceRunning(android.content.Context) -> isRecordingServiceRunning
    void resumeTrack(com.athlete.google.android.apps.mytracks.services.TrackRecordingServiceConnection) -> resumeTrack
    void pauseTrack(com.athlete.google.android.apps.mytracks.services.TrackRecordingServiceConnection) -> pauseTrack
    void stopRecording(android.app.Activity,com.athlete.google.android.apps.mytracks.services.TrackRecordingServiceConnection,boolean) -> stopRecording
    void resumeConnection(android.content.Context,com.athlete.google.android.apps.mytracks.services.TrackRecordingServiceConnection) -> resumeConnection
com.athlete.google.android.apps.mytracks.util.UnitConversions -> com.athlete.google.android.apps.mytracks.util.UnitConversions:
    double KM_TO_MI -> KM_TO_MI
    double KG_TO_POUNDS -> KG_TO_POUNDS
    double MI_TO_KM -> MI_TO_KM
    double MI_TO_FT -> MI_TO_FT
    double FT_TO_MI -> FT_TO_MI
    double M_TO_KM -> M_TO_KM
    double MS_TO_KMH -> MS_TO_KMH
    double M_TO_MI -> M_TO_MI
    double M_TO_FT -> M_TO_FT
    double DEG_TO_RAD -> DEG_TO_RAD
    double MI_TO_M -> MI_TO_M
com.athlete.google.android.apps.mytracks.util.UriUtils -> com.athlete.google.android.apps.mytracks.util.UriUtils:
    boolean matchesContentUri(android.net.Uri,android.net.Uri) -> matchesContentUri
    boolean isFileUri(android.net.Uri) -> isFileUri
com.athlete.model.BaseTable -> com.athlete.model.BaseTable:
    long serialVersionUID -> serialVersionUID
    java.lang.String id -> id
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
com.athlete.model.BaseTable$COL -> com.athlete.model.BaseTable$COL:
    java.lang.String ID -> ID
    com.athlete.model.BaseTable this$0 -> this$0
com.athlete.model.Comment -> com.athlete.model.Comment:
    long serialVersionUID -> serialVersionUID
    java.lang.String ID -> ID
    java.lang.String FEED_ID -> FEED_ID
    java.lang.String USER -> USER
    java.lang.String COMMENT -> COMMENT
    java.lang.String LIKERS -> LIKERS
    java.lang.String POST -> POST
    java.lang.String RESOURCE_URI -> RESOURCE_URI
    java.lang.String SUBMIT_DATE -> SUBMIT_DATE
    com.athlete.model.User user -> user
    int id -> id
    int feedId -> feedId
    java.lang.String comment -> comment
    java.util.ArrayList likers -> likers
    java.lang.String submitDate -> submitDate
    int getId() -> getId
    void setId(int) -> setId
    com.athlete.model.User getUser() -> getUser
    java.util.ArrayList getLikers() -> getLikers
    void setLikers(java.util.ArrayList) -> setLikers
    void setUser(com.athlete.model.User) -> setUser
    int getFeedId() -> getFeedId
    void setFeedId(int) -> setFeedId
    java.lang.String getComment() -> getComment
    void setComment(java.lang.String) -> setComment
    java.lang.String getSubmitDate() -> getSubmitDate
    void setSubmitDate(java.lang.String) -> setSubmitDate
com.athlete.model.Conversation -> com.athlete.model.Conversation:
    long serialVersionUID -> serialVersionUID
    java.lang.String ARCHIVED -> ARCHIVED
    java.lang.String CREATED_DAY -> CREATED_DAY
    java.lang.String HAS_UNREAD_MESSAGES -> HAS_UNREAD_MESSAGES
    java.lang.String HIDDEN -> HIDDEN
    java.lang.String LAST_MESSAGE -> LAST_MESSAGE
    java.lang.String ID -> ID
    java.lang.String MESSAGE -> MESSAGE
    java.lang.String CURR_USER_ID -> CURR_USER_ID
    java.lang.String RECIPIENTS -> RECIPIENTS
    java.lang.String CONM2MUSER -> CONM2MUSER
    java.lang.String PAST_USERS_INVOLVED -> PAST_USERS_INVOLVED
    boolean archived -> archived
    boolean hasUnreadMessages -> hasUnreadMessages
    boolean hidden -> hidden
    int id -> id
    java.util.ArrayList pastUsersInvolved -> pastUsersInvolved
    java.lang.String createdDate -> createdDate
    java.lang.String currUserID -> currUserID
    com.athlete.model.Message lastMessage -> lastMessage
    com.j256.ormlite.dao.ForeignCollection conv_m2m_user -> conv_m2m_user
    boolean isArchived() -> isArchived
    void setArchived(boolean) -> setArchived
    boolean isHasUnreadMessages() -> isHasUnreadMessages
    void setHasUnreadMessages(boolean) -> setHasUnreadMessages
    boolean isHidden() -> isHidden
    void setHidden(boolean) -> setHidden
    int getId() -> getId
    void setId(int) -> setId
    java.lang.String getCreatedDate() -> getCreatedDate
    void setCreatedDate(java.lang.String) -> setCreatedDate
    com.athlete.model.Message getLastMessage() -> getLastMessage
    void setLastMessage(com.athlete.model.Message) -> setLastMessage
    java.util.ArrayList getPastUsersInvolved() -> getPastUsersInvolved
    void setPastUsersInvolved(java.util.ArrayList) -> setPastUsersInvolved
    java.lang.String getCurrUserID() -> getCurrUserID
    void setCurrUserID(java.lang.String) -> setCurrUserID
com.athlete.model.ConversationM2MUser -> com.athlete.model.ConversationM2MUser:
    long serialVersionUID -> serialVersionUID
    java.lang.String CONVERSATION -> CONVERSATION
    java.lang.String USER -> USER
    com.athlete.model.Conversation conversation -> conversation
    com.athlete.model.User user -> user
    com.athlete.model.Conversation getConversation() -> getConversation
    void setConversation(com.athlete.model.Conversation) -> setConversation
    com.athlete.model.User getUser() -> getUser
    void setUser(com.athlete.model.User) -> setUser
    void generateId() -> generateId
com.athlete.model.FaceBookUser -> com.athlete.model.FaceBookUser:
    java.lang.String currentUserIdField -> currentUserIdField
    long serialVersionUID -> serialVersionUID
    java.lang.String FIRST_NAME -> FIRST_NAME
    java.lang.String ID -> ID
    java.lang.String PROFILE_IMAGE_225 -> PROFILE_IMAGE_225
    java.lang.String LIKE_RUNNING -> LIKE_RUNNING
    java.lang.String currentUserId -> currentUserId
    java.lang.String id -> id
    java.lang.String profileImage225url -> profileImage225url
    java.lang.String firstName -> firstName
    boolean isLikeRunning -> isLikeRunning
    java.lang.String getCurrentUserId() -> getCurrentUserId
    void setCurrentUserId(java.lang.String) -> setCurrentUserId
    java.lang.String getFirstName() -> getFirstName
    void setFirstName(java.lang.String) -> setFirstName
    java.lang.String getProfileImage225url() -> getProfileImage225url
    void setProfileImage225url(java.lang.String) -> setProfileImage225url
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    boolean isLikeRunning() -> isLikeRunning
    void setLikeRunning(boolean) -> setLikeRunning
com.athlete.model.FacebookUserM2M -> com.athlete.model.FacebookUserM2M:
    long serialVersionUID -> serialVersionUID
    java.lang.String FB_USER -> FB_USER
    java.lang.String CURR_USER_ID -> CURR_USER_ID
    java.lang.String HIDE -> HIDE
    java.lang.String user -> user
    java.lang.String curruserId -> curruserId
    boolean hide -> hide
    void generateId() -> generateId
    java.lang.String getUser() -> getUser
    void setFacebookUserId(java.lang.String) -> setFacebookUserId
    boolean isHide() -> isHide
    void setHide(boolean) -> setHide
    java.lang.String getCurruserId() -> getCurruserId
    void setCurruserId(java.lang.String) -> setCurruserId
com.athlete.model.Feed -> com.athlete.model.Feed:
    long serialVersionUID -> serialVersionUID
    java.lang.String ID -> ID
    java.lang.String AUTHOR -> AUTHOR
    java.lang.String AUTHORS -> AUTHORS
    java.lang.String BODY -> BODY
    java.lang.String COMMENT_COUNT -> COMMENT_COUNT
    java.lang.String CREATED_DATE -> CREATED_DATE
    java.lang.String DISPLAY_DATE -> DISPLAY_DATE
    java.lang.String LIKERS -> LIKERS
    java.lang.String WORKOUT -> WORKOUT
    java.lang.String WORKOUT_OBJ -> WORKOUT_OBJ
    java.lang.String ID_USER -> ID_USER
    int id -> id
    int idCurrentUser -> idCurrentUser
    com.athlete.model.User user -> user
    com.j256.ormlite.dao.ForeignCollection userM2Mfeed -> userM2Mfeed
    java.lang.String body -> body
    int commentCount -> commentCount
    java.lang.String createdDate -> createdDate
    java.lang.String displayDate -> displayDate
    java.util.ArrayList likers -> likers
    com.athlete.model.WorkOut workOut -> workOut
    com.j256.ormlite.dao.ForeignCollection workOuts -> workOuts
    int getId() -> getId
    void setId(int) -> setId
    com.athlete.model.User getUser() -> getUser
    void setUser(com.athlete.model.User) -> setUser
    java.lang.String getBody() -> getBody
    void setBody(java.lang.String) -> setBody
    int getCommentCount() -> getCommentCount
    void setCommentCount(int) -> setCommentCount
    java.lang.String getCreatedDate() -> getCreatedDate
    void setCreatedDate(java.lang.String) -> setCreatedDate
    java.lang.String getDisplayDate() -> getDisplayDate
    void setDisplayDate(java.lang.String) -> setDisplayDate
    java.util.ArrayList getLikers() -> getLikers
    void setLikers(java.util.ArrayList) -> setLikers
    int getIdUser() -> getIdUser
    void setIdUser(int) -> setIdUser
    com.j256.ormlite.dao.ForeignCollection getUserM2Mfeed() -> getUserM2Mfeed
    void setUserM2Mfeed(com.j256.ormlite.dao.ForeignCollection) -> setUserM2Mfeed
    com.athlete.model.WorkOut getWorkOut() -> getWorkOut
    void setWorkOut(com.athlete.model.WorkOut) -> setWorkOut
com.athlete.model.Feed2Type2User -> com.athlete.model.Feed2Type2User:
    long serialVersionUID -> serialVersionUID
    java.lang.String FEED -> FEED
    java.lang.String CURR_USER -> CURR_USER
    java.lang.String USER -> USER
    java.lang.String TYPE -> TYPE
    com.athlete.model.Feed feed -> feed
    java.lang.String currentUserId -> currentUserId
    java.lang.String userId -> userId
    int type -> type
    com.athlete.model.Feed getFeed() -> getFeed
    void setFeed(com.athlete.model.Feed) -> setFeed
    void generateId() -> generateId
    int getType() -> getType
    void setType(int) -> setType
    java.lang.String getCurrentUserId() -> getCurrentUserId
    void setCurrentUserId(java.lang.String) -> setCurrentUserId
    java.lang.String getUserId() -> getUserId
    void setUserId(java.lang.String) -> setUserId
com.athlete.model.FriendsM2M -> com.athlete.model.FriendsM2M:
    long serialVersionUID -> serialVersionUID
    java.lang.String USER -> USER
    java.lang.String FRIEND -> FRIEND
    java.lang.String TOTAL_FRIEND -> TOTAL_FRIEND
    java.lang.String REQUESTER -> REQUESTER
    java.lang.String STATUS -> STATUS
    java.lang.String ACCEPTED -> ACCEPTED
    java.lang.String PENDING -> PENDING
    java.lang.String FRIEND_SHIP_ID -> FRIEND_SHIP_ID
    java.lang.String FRIEND_SHIP_ID_COLUMN_NAME -> FRIEND_SHIP_ID_COLUMN_NAME
    com.athlete.model.User user -> user
    com.athlete.model.User friend -> friend
    int totalFriend -> totalFriend
    int requester -> requester
    java.lang.String status -> status
    java.lang.String friendShipId -> friendShipId
    void generateId() -> generateId
    com.athlete.model.User getUser() -> getUser
    void setUser(com.athlete.model.User) -> setUser
    com.athlete.model.User getFriend() -> getFriend
    void setFriend(com.athlete.model.User) -> setFriend
    int getTotal_friend() -> getTotal_friend
    void setTotalFriend(int) -> setTotalFriend
    int getRequester() -> getRequester
    void setRequester(int) -> setRequester
    java.lang.String getStatus() -> getStatus
    void setStatus(java.lang.String) -> setStatus
    java.lang.String getFriendShipId() -> getFriendShipId
    void setFriendShipId(java.lang.String) -> setFriendShipId
com.athlete.model.IdleWorkOut -> com.athlete.model.IdleWorkOut:
    long serialVersionUID -> serialVersionUID
    java.lang.String PHOTO -> PHOTO
    java.lang.String TRACK_PATH -> TRACK_PATH
    java.lang.String PRIVACY -> PRIVACY
    java.lang.String FB_ACCES -> FB_ACCES
    java.lang.String USER -> USER
    java.lang.String NOW_DOWNLOAD -> NOW_DOWNLOAD
    java.lang.String ONLY_PHOTO -> ONLY_PHOTO
    int id -> id
    java.lang.String trackPath -> trackPath
    java.lang.String idUser -> idUser
    java.lang.String post -> post
    double distance -> distance
    long duration -> duration
    boolean nowDownload -> nowDownload
    boolean onlyPhoto -> onlyPhoto
    long calories -> calories
    java.lang.String postBody -> postBody
    java.lang.String privacy -> privacy
    java.lang.String runType -> runType
    java.lang.String fbAcces -> fbAcces
    java.lang.String title -> title
    java.lang.String[] photoPath -> photoPath
    double getDistance() -> getDistance
    void setDistance(double) -> setDistance
    long getDuration() -> getDuration
    void setDuration(long) -> setDuration
    java.lang.String getPostBody() -> getPostBody
    void setPostBody(java.lang.String) -> setPostBody
    java.lang.String getRunType() -> getRunType
    void setRunType(java.lang.String) -> setRunType
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    int getId() -> getId
    void setId(int) -> setId
    java.lang.String getIdUser() -> getIdUser
    void setIdUser(java.lang.String) -> setIdUser
    long getCalories() -> getCalories
    void setCalories(long) -> setCalories
    java.lang.String getTrackPath() -> getTrackPath
    void setTrackPath(java.lang.String) -> setTrackPath
    java.lang.String getPrivacy() -> getPrivacy
    void setPrivacy(java.lang.String) -> setPrivacy
    java.lang.String getFbAcces() -> getFbAcces
    void setFbAcces(java.lang.String) -> setFbAcces
    boolean isNowDownload() -> isNowDownload
    void setNowDownload(boolean) -> setNowDownload
    java.lang.String[] getPhotoPath() -> getPhotoPath
    void setPhotoPath(java.lang.String[]) -> setPhotoPath
    boolean isOnlyPhoto() -> isOnlyPhoto
    void setOnlyPhoto(boolean) -> setOnlyPhoto
    java.lang.String getPost() -> getPost
    void setPost(java.lang.String) -> setPost
com.athlete.model.Message -> com.athlete.model.Message:
    long serialVersionUID -> serialVersionUID
    java.lang.String MESSAGE -> MESSAGE
    java.lang.String CREATED_DAY -> CREATED_DAY
    java.lang.String LAST_MESSAGE -> LAST_MESSAGE
    java.lang.String ID -> ID
    java.lang.String CONVERSATION -> CONVERSATION
    java.lang.String USER -> USER
    java.lang.String USER_DELETED_NAME -> USER_DELETED_NAME
    int id -> id
    java.lang.String createdDate -> createdDate
    java.lang.String message -> message
    com.athlete.model.User user -> user
    com.athlete.model.Conversation conversation -> conversation
    java.lang.String userDeletedName -> userDeletedName
    int getId() -> getId
    void setId(int) -> setId
    java.lang.String getCreatedDate() -> getCreatedDate
    void setCreatedDate(java.lang.String) -> setCreatedDate
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    com.athlete.model.User getUser() -> getUser
    void setUser(com.athlete.model.User) -> setUser
    com.athlete.model.Conversation getConversation() -> getConversation
    void setConversation(com.athlete.model.Conversation) -> setConversation
    java.lang.String getUserDeletedName() -> getUserDeletedName
    void setUserDeletedName(java.lang.String) -> setUserDeletedName
com.athlete.model.PostPicture -> com.athlete.model.PostPicture:
    long serialVersionUID -> serialVersionUID
    java.lang.String ID -> ID
    java.lang.String FEED_ID -> FEED_ID
    java.lang.String DETAIL -> DETAIL
    java.lang.String FEED -> FEED
    java.lang.String ORIGINAL -> ORIGINAL
    java.lang.String THUMBNAIL -> THUMBNAIL
    int id -> id
    int feedId -> feedId
    java.lang.String detail -> detail
    java.lang.String feed -> feed
    java.lang.String original -> original
    java.lang.String thumbnail -> thumbnail
    int getId() -> getId
    void setId(int) -> setId
    int getFeedId() -> getFeedId
    void setFeedId(int) -> setFeedId
    java.lang.String getThumbnail() -> getThumbnail
    void setThumbnail(java.lang.String) -> setThumbnail
    java.lang.String getDetail() -> getDetail
    void setDetail(java.lang.String) -> setDetail
    java.lang.String getFeed() -> getFeed
    void setFeed(java.lang.String) -> setFeed
    java.lang.String getOriginal() -> getOriginal
    void setOriginal(java.lang.String) -> setOriginal
com.athlete.model.PreferenceUser -> com.athlete.model.PreferenceUser:
    long serialVersionUID -> serialVersionUID
    java.lang.String ID -> ID
    java.lang.String ANNUALLY_EMAIL_REPORT -> ANNUALLY_EMAIL_REPORT
    java.lang.String DISTANCE -> DISTANCE
    java.lang.String ELEVATION -> ELEVATION
    java.lang.String MONTHLY_EMAIL_REPORT -> MONTHLY_EMAIL_REPORT
    java.lang.String TIMEZONE -> TIMEZONE
    java.lang.String USER -> USER
    java.lang.String WEEKLY_EMAIL_REPORT -> WEEKLY_EMAIL_REPORT
    java.lang.String id -> id
    java.lang.String distance -> distance
    java.lang.String elevation -> elevation
    java.lang.String timezone -> timezone
    boolean annuallyEmailReport -> annuallyEmailReport
    boolean monthlyEmailReport -> monthlyEmailReport
    boolean weeklyEmailReport -> weeklyEmailReport
    com.athlete.model.User user -> user
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getTimezone() -> getTimezone
    void setTimezone(java.lang.String) -> setTimezone
    java.lang.String getElevation() -> getElevation
    void setElevation(java.lang.String) -> setElevation
    java.lang.String getDistance() -> getDistance
    void setDistance(java.lang.String) -> setDistance
    boolean isWeeklyEmailReport() -> isWeeklyEmailReport
    void setWeeklyEmailReport(boolean) -> setWeeklyEmailReport
    boolean isMonthlyEmailReport() -> isMonthlyEmailReport
    void setMonthlyEmailReport(boolean) -> setMonthlyEmailReport
    boolean isAnnuallyEmailReport() -> isAnnuallyEmailReport
    void setAnnuallyEmailReport(boolean) -> setAnnuallyEmailReport
    com.athlete.model.User getUser() -> getUser
    void setUser(com.athlete.model.User) -> setUser
com.athlete.model.ProfileUser -> com.athlete.model.ProfileUser:
    long serialVersionUID -> serialVersionUID
    java.lang.String ID -> ID
    java.lang.String GENDER -> GENDER
    java.lang.String USER -> USER
    java.lang.String USERS -> USERS
    java.lang.String WEIGHT -> WEIGHT
    java.lang.String BIRTH_DATE -> BIRTH_DATE
    java.lang.String WEIGHT_UNIT -> WEIGHT_UNIT
    java.lang.String LOCATION -> LOCATION
    java.lang.String LAT -> LAT
    java.lang.String LNG -> LNG
    java.lang.String NAME -> NAME
    java.lang.String id -> id
    java.lang.String weightUnit -> weightUnit
    java.lang.String birthDate -> birthDate
    java.lang.String gender -> gender
    java.lang.String locationName -> locationName
    double weight -> weight
    double lat -> lat
    double lng -> lng
    com.athlete.model.User user -> user
    com.j256.ormlite.dao.ForeignCollection users -> users
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    com.athlete.model.User getUser() -> getUser
    void setUser(com.athlete.model.User) -> setUser
    java.lang.String getGender() -> getGender
    void setGender(java.lang.String) -> setGender
    java.lang.String getBirthDate() -> getBirthDate
    void setBirthDate(java.lang.String) -> setBirthDate
    java.lang.String getWeightUnit() -> getWeightUnit
    void setWeightUnit(java.lang.String) -> setWeightUnit
    double getWeight() -> getWeight
    void setWeight(double) -> setWeight
    java.lang.String getLocationName() -> getLocationName
    void setLocationName(java.lang.String) -> setLocationName
    double getLat() -> getLat
    void setLat(double) -> setLat
    double getLng() -> getLng
    void setLng(double) -> setLng
com.athlete.model.Split -> com.athlete.model.Split:
    double avgPace -> avgPace
    double climb -> climb
    double getAvgPace() -> getAvgPace
    void setAvgPace(double) -> setAvgPace
    double getClimb() -> getClimb
    void setClimb(double) -> setClimb
com.athlete.model.Stats -> com.athlete.model.Stats:
    java.lang.String AVG_WEEKLY -> AVG_WEEKLY
    java.lang.String BEST_10K -> BEST_10K
    java.lang.String BEST_5K -> BEST_5K
    java.lang.String BEST_HALF -> BEST_HALF
    java.lang.String BEST_MARATHON -> BEST_MARATHON
    java.lang.String BEST_MILE -> BEST_MILE
    java.lang.String ID -> ID
    java.lang.String LATEST_WORKOUT -> LATEST_WORKOUT
    java.lang.String MAX_DISTANCE -> MAX_DISTANCE
    java.lang.String MAX_DURATION -> MAX_DURATION
    java.lang.String MAX_ELEVATION -> MAX_ELEVATION
    java.lang.String TOTAL_DISTANCE -> TOTAL_DISTANCE
    java.lang.String USER -> USER
    int avgWeekly -> avgWeekly
    int best10k -> best10k
    int best5k -> best5k
    int besthalf -> besthalf
    int bestMarathon -> bestMarathon
    int bestMile -> bestMile
    int id -> id
    java.lang.String latestWorkoutDate -> latestWorkoutDate
    double maxDistanceInMeters -> maxDistanceInMeters
    int maxDurationInSeconds -> maxDurationInSeconds
    double maxElevationGainInMeters -> maxElevationGainInMeters
    double totalDistanceInMeters -> totalDistanceInMeters
    com.athlete.model.User user -> user
    int getAvgWeekly() -> getAvgWeekly
    void setAvgWeekly(int) -> setAvgWeekly
    int getBest10k() -> getBest10k
    void setBest10k(int) -> setBest10k
    int getBest5k() -> getBest5k
    void setBest5k(int) -> setBest5k
    int getBesthalf() -> getBesthalf
    void setBesthalf(int) -> setBesthalf
    int getBestMarathon() -> getBestMarathon
    void setBestMarathon(int) -> setBestMarathon
    int getBestMile() -> getBestMile
    void setBestMile(int) -> setBestMile
    int getId() -> getId
    void setId(int) -> setId
    java.lang.String getLatestWorkoutDate() -> getLatestWorkoutDate
    void setLatestWorkoutDate(java.lang.String) -> setLatestWorkoutDate
    double getMaxDistanceInMeters() -> getMaxDistanceInMeters
    void setMaxDistanceInMeters(double) -> setMaxDistanceInMeters
    int getMaxDurationInSeconds() -> getMaxDurationInSeconds
    void setMaxDurationInSeconds(int) -> setMaxDurationInSeconds
    double getMaxElevationGainInMeters() -> getMaxElevationGainInMeters
    void setMax_elevation_gain_in_meters(double) -> setMax_elevation_gain_in_meters
    double getTotalDistanceInMeters() -> getTotalDistanceInMeters
    void setTotalDistanceInMeters(double) -> setTotalDistanceInMeters
    com.athlete.model.User getUser() -> getUser
    void setUser(com.athlete.model.User) -> setUser
com.athlete.model.TaskResult -> com.athlete.model.TaskResult:
    java.lang.String error -> error
    java.lang.String error_description -> error_description
    java.lang.Object result -> result
    boolean isError -> isError
    java.lang.Exception exception -> exception
    int typeFeed -> typeFeed
    void setError(boolean,java.lang.String,java.lang.String) -> setError
    void setError(boolean,java.lang.String,java.lang.String,java.lang.Exception) -> setError
    java.lang.String getError() -> getError
    boolean isError() -> isError
    void setResult(java.lang.Object) -> setResult
    java.lang.Object getResult() -> getResult
    java.lang.String getError_description() -> getError_description
    java.lang.Exception getException() -> getException
    void setException(java.lang.Exception) -> setException
    int getTypeFeed() -> getTypeFeed
    void setTypeFeed(int) -> setTypeFeed
com.athlete.model.User -> com.athlete.model.User:
    long serialVersionUID -> serialVersionUID
    java.lang.String USERNAME -> USERNAME
    java.lang.String API_KEY -> API_KEY
    java.lang.String FIRST_NAME -> FIRST_NAME
    java.lang.String ID -> ID
    java.lang.String LAST_NAME -> LAST_NAME
    java.lang.String PREFERENCE -> PREFERENCE
    java.lang.String PREFERENCE_ID -> PREFERENCE_ID
    java.lang.String PREFERENCES -> PREFERENCES
    java.lang.String PROFILE -> PROFILE
    java.lang.String PROFILE_ID -> PROFILE_ID
    java.lang.String PROFILES -> PROFILES
    java.lang.String PROFILE_IMAGE_225 -> PROFILE_IMAGE_225
    java.lang.String PROFILE_IMAGE_48 -> PROFILE_IMAGE_48
    java.lang.String RESOURCE_URI -> RESOURCE_URI
    java.lang.String STATS -> STATS
    java.lang.String EMAIL -> EMAIL
    java.lang.String PHOTO -> PHOTO
    java.lang.String FRIEND -> FRIEND
    java.lang.String FEED -> FEED
    java.lang.String STATS2M -> STATS2M
    java.lang.String MESSAGE2M -> MESSAGE2M
    java.lang.String USER1 -> USER1
    java.lang.String USER2 -> USER2
    java.lang.String COMMENT -> COMMENT
    java.lang.String id -> id
    java.lang.String firstName -> firstName
    java.lang.String email -> email
    java.lang.String lastName -> lastName
    java.lang.String profileImage225url -> profileImage225url
    java.lang.String profileImage48url -> profileImage48url
    java.lang.String resourceUri -> resourceUri
    java.lang.String stats -> stats
    java.lang.String preferenceID -> preferenceID
    java.lang.String profileID -> profileID
    com.j256.ormlite.dao.ForeignCollection friendsM2Ms -> friendsM2Ms
    com.j256.ormlite.dao.ForeignCollection userM2Mfeed -> userM2Mfeed
    com.j256.ormlite.dao.ForeignCollection stats2m -> stats2m
    com.j256.ormlite.dao.ForeignCollection preferenceUsers -> preferenceUsers
    com.j256.ormlite.dao.ForeignCollection profileUsers -> profileUsers
    com.j256.ormlite.dao.ForeignCollection comments -> comments
    com.j256.ormlite.dao.ForeignCollection messages -> messages
    com.athlete.model.ProfileUser profileUser -> profileUser
    com.athlete.model.PreferenceUser preferenceUser -> preferenceUser
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    java.lang.String getFirstName() -> getFirstName
    void setFirstName(java.lang.String) -> setFirstName
    java.lang.String getLastName() -> getLastName
    void setLastName(java.lang.String) -> setLastName
    java.lang.String getProfileImage225url() -> getProfileImage225url
    void setProfileImage225url(java.lang.String) -> setProfileImage225url
    java.lang.String getProfileImage48url() -> getProfileImage48url
    void setProfileImage48url(java.lang.String) -> setProfileImage48url
    java.lang.String getResourceUri() -> getResourceUri
    void setResourceUri(java.lang.String) -> setResourceUri
    java.lang.String getStats() -> getStats
    void setStats(java.lang.String) -> setStats
    com.j256.ormlite.dao.ForeignCollection getFriendsM2Ms() -> getFriendsM2Ms
    void setFriendsM2Ms(com.j256.ormlite.dao.ForeignCollection) -> setFriendsM2Ms
    com.j256.ormlite.dao.ForeignCollection getUserM2Mfeed() -> getUserM2Mfeed
    void setUserM2Mfeed(com.j256.ormlite.dao.ForeignCollection) -> setUserM2Mfeed
    com.j256.ormlite.dao.ForeignCollection getStats2m() -> getStats2m
    void setStats2m(com.j256.ormlite.dao.ForeignCollection) -> setStats2m
    com.j256.ormlite.dao.ForeignCollection getPreferenceUsers() -> getPreferenceUsers
    void setPreferenceUsers(com.j256.ormlite.dao.ForeignCollection) -> setPreferenceUsers
    com.athlete.model.ProfileUser getProfileUser() -> getProfileUser
    void setProfileUser(com.athlete.model.ProfileUser) -> setProfileUser
    com.athlete.model.PreferenceUser getPreferenceUser() -> getPreferenceUser
    void setPreferenceUser(com.athlete.model.PreferenceUser) -> setPreferenceUser
    java.lang.String getPreferenceID() -> getPreferenceID
    void setPreferenceID(java.lang.String) -> setPreferenceID
    java.lang.String getProfileID() -> getProfileID
    void setProfileID(java.lang.String) -> setProfileID
    java.lang.String getEmail() -> getEmail
    void setEmail(java.lang.String) -> setEmail
com.athlete.model.UserM2MFeed -> com.athlete.model.UserM2MFeed:
    long serialVersionUID -> serialVersionUID
    java.lang.String USER -> USER
    java.lang.String FEED -> FEED
    com.athlete.model.User user -> user
    com.athlete.model.Feed feed -> feed
    void generateId() -> generateId
    com.athlete.model.User getUser() -> getUser
    void setUser(com.athlete.model.User) -> setUser
    com.athlete.model.Feed getFeed() -> getFeed
    void setFeed(com.athlete.model.Feed) -> setFeed
com.athlete.model.WorkOut -> com.athlete.model.WorkOut:
    long serialVersionUID -> serialVersionUID
    java.lang.String ID -> ID
    java.lang.String DISTANCE -> DISTANCE
    java.lang.String DURATION -> DURATION
    java.lang.String POST_BODY -> POST_BODY
    java.lang.String RUN_DATE -> RUN_DATE
    java.lang.String RUN_TYPE -> RUN_TYPE
    java.lang.String SOURCE -> SOURCE
    java.lang.String STATIC_MAP_URL -> STATIC_MAP_URL
    java.lang.String TITLE -> TITLE
    java.lang.String USER -> USER
    java.lang.String ROUTE -> ROUTE
    java.lang.String IS_FAVORITE -> IS_FAVORITE
    java.lang.String CALORIES -> CALORIES
    java.lang.String TYPE_ENDURANCE -> TYPE_ENDURANCE
    java.lang.String TYPE_TEMPO -> TYPE_TEMPO
    java.lang.String TYPE_SLOW -> TYPE_SLOW
    java.lang.String TYPE_INTERVAL -> TYPE_INTERVAL
    java.lang.String TYPE_GROUP -> TYPE_GROUP
    java.lang.String TYPE_RACE -> TYPE_RACE
    java.lang.String TYPE_ELEVATION -> TYPE_ELEVATION
    java.lang.String FEED -> FEED
    java.lang.String POST -> POST
    java.lang.String TRACK_ID -> TRACK_ID
    java.lang.String ROUTE_ID -> ROUTE_ID
    com.athlete.model.Feed feed -> feed
    int id -> id
    java.lang.String idUser -> idUser
    double distance -> distance
    long duration -> duration
    long calories -> calories
    java.lang.String postBody -> postBody
    java.lang.String runDate -> runDate
    boolean favorite -> favorite
    java.lang.String runType -> runType
    java.lang.String source -> source
    java.lang.String staticMapUrl -> staticMapUrl
    java.lang.String title -> title
    java.lang.String post -> post
    long trackID -> trackID
    int routeID -> routeID
    double getDistance() -> getDistance
    void setDistance(double) -> setDistance
    long getDuration() -> getDuration
    void setDuration(long) -> setDuration
    java.lang.String getPostBody() -> getPostBody
    void setPostBody(java.lang.String) -> setPostBody
    java.lang.String getRunDate() -> getRunDate
    void setRunDate(java.lang.String) -> setRunDate
    java.lang.String getRunType() -> getRunType
    void setRunType(java.lang.String) -> setRunType
    java.lang.String getSource() -> getSource
    void setSource(java.lang.String) -> setSource
    java.lang.String getStaticMapUrl() -> getStaticMapUrl
    void setStaticMapUrl(java.lang.String) -> setStaticMapUrl
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    int getId() -> getId
    void setId(int) -> setId
    java.lang.String getIdUser() -> getIdUser
    void setIdUser(java.lang.String) -> setIdUser
    long getCalories() -> getCalories
    void setCalories(long) -> setCalories
    boolean isFavorite() -> isFavorite
    void setFavorite(boolean) -> setFavorite
    com.athlete.model.Feed getFeed() -> getFeed
    void setFeed(com.athlete.model.Feed) -> setFeed
    java.lang.String getPost() -> getPost
    void setPost(java.lang.String) -> setPost
    long getTrackID() -> getTrackID
    void setTrackID(long) -> setTrackID
    int getRouteID() -> getRouteID
    void setRouteID(int) -> setRouteID
com.athlete.model.WorkoutM2MTrack -> com.athlete.model.WorkoutM2MTrack:
    long serialVersionUID -> serialVersionUID
    java.lang.String WORKOUT -> WORKOUT
    java.lang.String TRACK -> TRACK
    int workoutID -> workoutID
    long trackID -> trackID
    int getWorkOutID() -> getWorkOutID
    void setWorkOutID(int) -> setWorkOutID
    long getTrackID() -> getTrackID
    void setTrackID(long) -> setTrackID
    void generateId() -> generateId
com.athlete.parser.BaseParser -> com.athlete.d.a:
    org.json.JSONObject jsonObj -> a
    com.athlete.db.DatabaseHelper helper -> b
    java.lang.String[] getUser() -> a
com.athlete.parser.CommentParser -> com.athlete.d.b:
    java.util.List getComments(java.lang.String,com.athlete.bl.BaseOperationsBL) -> a
    com.athlete.model.Comment getComment(java.lang.String,com.athlete.bl.BaseOperationsBL) -> b
com.athlete.parser.ConversationParser -> com.athlete.d.c:
    java.util.List getConversation(java.lang.String,com.athlete.bl.BaseOperationsBL,java.lang.String) -> a
    com.athlete.model.Conversation getOneConversation(org.json.JSONObject,com.athlete.bl.BaseOperationsBL,java.lang.String) -> a
com.athlete.parser.ErrorParser -> com.athlete.d.d:
    java.lang.String errorParser(java.lang.String) -> a
com.athlete.parser.FaceBookUserParser -> com.athlete.d.e:
    java.util.List getFBUser(java.lang.String,com.athlete.bl.BaseBl,java.lang.String,boolean,java.util.List) -> a
com.athlete.parser.FeedParser -> com.athlete.d.f:
    int typeFeed -> a
    int getTypeFeed() -> a
    java.util.List getFeed(java.lang.String,int,com.athlete.bl.BaseBl,int,boolean,int) -> a
    com.athlete.model.Feed getFeed(org.json.JSONObject,int,com.athlete.bl.BaseOperationsBL,int) -> a
com.athlete.parser.FriendParser -> com.athlete.d.g:
    int count -> a
    java.util.ArrayList status -> b
    java.util.ArrayList friendShipId -> c
    java.util.ArrayList requester -> d
    java.util.ArrayList getFriends(java.lang.String,com.athlete.bl.BaseOperationsBL,java.lang.String) -> a
    com.athlete.model.User getFriend(com.athlete.bl.BaseOperationsBL,java.lang.String,org.json.JSONObject) -> a
    int getTotalFriend() -> a
    java.util.ArrayList getStatus() -> b
    java.util.ArrayList getFriendShipId() -> c
    java.util.ArrayList getRequester() -> d
com.athlete.parser.MessageParser -> com.athlete.d.h:
    java.util.List getMessages(java.lang.String,com.athlete.bl.BaseBl,com.athlete.model.Conversation) -> a
    com.athlete.model.Message getMessage(org.json.JSONObject) -> a
com.athlete.parser.PictureParser -> com.athlete.d.i:
    java.util.List getPostPictures(java.lang.String,com.athlete.bl.BaseOperationsBL) -> a
com.athlete.parser.ProfileParser -> com.athlete.d.j:
com.athlete.parser.StatsParser -> com.athlete.d.k:
    com.athlete.model.Stats getStats(java.lang.String) -> a
com.athlete.parser.UserParser -> com.athlete.d.l:
    java.util.List getUserSearch(java.lang.String,com.athlete.bl.BaseBl,java.lang.String) -> a
    com.athlete.model.User getUserDetails$89d4e9e(java.lang.String) -> a
com.athlete.parser.WorkOutParser -> com.athlete.d.m:
    com.athlete.model.WorkOut getWorkout(org.json.JSONObject) -> a
    java.util.List getListWorkout(java.lang.String,com.athlete.bl.BaseBl) -> a
com.athlete.services.AsyncTaskManager -> com.athlete.services.AsyncTaskManager:
    android.app.Dialog mDialog -> a
    android.content.Context context -> b
    java.util.HashMap taskList -> c
    boolean isDestroy -> d
    boolean isCanCancel -> e
    void executeTask$10504ab4(com.athlete.services.BaseTask,com.athlete.services.OnTskCpltListener,boolean) -> a
    void onCancel(android.content.DialogInterface) -> onCancel
    void finishAll() -> a
    void onProgress() -> b
    void onComplete(java.lang.Object) -> a
com.athlete.services.BaseTask -> com.athlete.services.a:
    java.lang.Object mResult -> c
    java.lang.String mProgressMessage -> d
    long time2013 -> e
    com.athlete.services.IProgressTracker mProgressTracker -> f
    boolean isProgress -> g
    java.lang.String publicKey -> a
    java.lang.String privateKey -> b
    long getTime(android.app.Activity) -> a
    java.lang.String getmProgressMessage() -> a
    void setProgressTracker(com.athlete.services.IProgressTracker) -> a
    boolean isProgressDialogNeeded() -> b
    void onCancelled() -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.athlete.services.IAppFilter -> com.athlete.services.b:
com.athlete.services.IProgressTracker -> com.athlete.services.c:
    void onProgress() -> b
    void onComplete(java.lang.Object) -> a
com.athlete.services.OnTskCpltListener -> com.athlete.services.d:
    void onTaskComplete(com.athlete.services.BaseTask) -> a
com.athlete.services.task.AcceptFriendRequestTask -> com.athlete.services.a.a:
    java.lang.String FRIENDSHIP_ID -> c
    java.lang.String URL_POST -> d
    java.lang.String mAcces -> e
    java.lang.String mApiKey -> f
    java.lang.String mUserName -> g
    java.lang.String friendShipId -> h
    java.lang.String urlHost -> i
    android.app.Activity activity -> j
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.ArchiveTheConversationTask -> com.athlete.services.a.b:
    java.lang.String mAcces -> c
    java.lang.String mApiKey -> d
    java.lang.String mUserName -> e
    java.lang.String URL_PATCH -> f
    java.lang.String urlHost -> g
    android.app.Activity activity -> h
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.CreateNewConversationTask -> com.athlete.services.a.c:
    java.lang.String URL_POST -> c
    java.lang.String mAcces -> d
    java.lang.String mApiKey -> e
    java.lang.String mUserName -> f
    java.lang.Integer[] recipients -> g
    java.lang.String message -> h
    java.lang.String urlHost -> i
    android.app.Activity activity -> j
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.LoginTask -> com.athlete.services.a.d:
    java.lang.String mEmail -> c
    java.lang.String mPassword -> d
    java.lang.String EMAIL -> e
    java.lang.String PASSWORD -> f
    java.lang.String URL_POST -> g
    java.lang.String urlHost -> h
    android.app.Activity activity -> i
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.LoginTaskViaFB -> com.athlete.services.a.e:
    java.lang.String token -> c
    java.lang.String TOKEN -> d
    java.lang.String URL_POST -> e
    boolean mIsLogin -> f
    java.lang.String urlHost -> g
    com.athlete.activity.BaseActivity activity -> h
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.PatchReadConversationTask -> com.athlete.services.a.f:
    java.lang.String LAST_MESSAGE_ID -> c
    java.lang.String mAcces -> d
    java.lang.String mApiKey -> e
    java.lang.String mUserName -> f
    int messageID -> g
    java.lang.String URL_POST -> h
    java.lang.String urlHost -> i
    android.app.Activity activity -> j
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.PostRouteFavoriteTask -> com.athlete.services.a.g:
    java.lang.String URL_POST -> c
    java.lang.String mAcces -> d
    java.lang.String mApiKey -> e
    java.lang.String mUserName -> f
    java.lang.String urlHost -> g
    android.app.Activity activity -> h
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.RequestFriendTask -> com.athlete.services.a.h:
    java.lang.String USER_ID -> c
    java.lang.String URL_POST -> d
    java.lang.String mAcces -> e
    java.lang.String mApiKey -> f
    java.lang.String mUserName -> g
    java.lang.String userId -> h
    java.lang.String urlHost -> i
    android.app.Activity activity -> j
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.SearchUsersTask -> com.athlete.services.a.i:
    java.lang.String URL_GET -> c
    java.lang.String mUserName -> d
    java.lang.String mApikey -> e
    java.lang.String mAcces -> f
    com.athlete.bl.BaseBl baseBl -> g
    java.lang.String q -> h
    java.lang.String currentID -> i
    java.lang.String QUERY -> j
    java.lang.String urlHost -> k
    android.app.Activity activity -> l
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.SendCommentTask -> com.athlete.services.a.j:
    java.lang.String URL_POST -> c
    java.lang.String mAcces -> d
    java.lang.String mApiKey -> e
    java.lang.String mUserName -> f
    int feedID -> g
    java.lang.String commentBody -> h
    com.athlete.model.Comment comment -> i
    java.lang.String urlHost -> j
    android.app.Activity activity -> k
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.SendInviteByEmailTask -> com.athlete.services.a.k:
    java.lang.String URL_POST -> c
    java.lang.String mAcces -> d
    java.lang.String mApiKey -> e
    java.lang.String mUserName -> f
    java.lang.String name -> g
    java.lang.String email -> h
    java.lang.String urlHost -> i
    android.app.Activity activity -> j
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.SendLikeTask -> com.athlete.services.a.l:
    java.lang.String URL_POST -> c
    java.lang.String mAcces -> d
    java.lang.String mApiKey -> e
    java.lang.String mUserName -> f
    int objectId -> g
    java.lang.String objectType -> h
    java.lang.String urlHost -> i
    android.app.Activity activity -> j
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.SendMessageTask -> com.athlete.services.a.m:
    java.lang.String URL_POST -> c
    java.lang.String mAcces -> d
    java.lang.String mApiKey -> e
    java.lang.String mUserName -> f
    int conversationID -> g
    java.lang.String message -> h
    java.lang.String urlHost -> i
    android.app.Activity activity -> j
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.SendPhotoTask -> com.athlete.services.a.n:
    java.lang.String mAcces -> c
    java.lang.String mApiKey -> d
    java.lang.String mUserName -> e
    java.io.File file -> f
    java.lang.String urlHost -> g
    java.lang.String URL_POST -> h
    android.app.Activity activity -> i
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.SendPicturePostTask -> com.athlete.services.a.o:
    java.lang.String mAcces -> c
    java.lang.String mApiKey -> d
    java.lang.String mUserName -> e
    java.io.File file -> f
    java.lang.String POST_ID -> g
    java.lang.String URL_POST -> h
    java.lang.String urlHost -> i
    android.app.Activity activity -> j
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.SendWorkoutFileTask -> com.athlete.services.a.p:
    java.lang.String mAcces -> c
    java.lang.String mApiKey -> d
    java.lang.String mUserName -> e
    java.io.File file -> f
    java.lang.String urlHost -> g
    java.lang.String URL_POST -> h
    android.app.Activity activity -> i
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.SendWorkoutJSONTask -> com.athlete.services.a.q:
    java.lang.String URL_POST -> c
    java.lang.String mAcces -> d
    java.lang.String mApiKey -> e
    java.lang.String mUserName -> f
    org.json.JSONObject jsonObjSend -> g
    java.lang.String RUN_DATE -> h
    java.lang.String urlHost -> i
    android.app.Activity activity -> j
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.SignUpDetailsTask -> com.athlete.services.a.r:
    java.lang.String mAcces -> c
    java.lang.String mApiKey -> d
    java.lang.String mUserName -> e
    java.lang.String URL_PATCH -> f
    java.lang.String urlHost -> g
    org.json.JSONObject jsonObjSend -> h
    java.lang.String type -> i
    java.lang.String id -> j
    android.app.Activity activity -> k
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.SignUpTask -> com.athlete.services.a.s:
    java.lang.String mName -> c
    java.lang.String mLastName -> d
    java.lang.String mEmail -> e
    java.lang.String mPassword -> f
    java.lang.String FIRST_NAME -> g
    java.lang.String LAST_NAME -> h
    java.lang.String EMAIL -> i
    java.lang.String PASSWORD -> j
    java.lang.String URL_POST -> k
    java.lang.String urlHost -> l
    android.app.Activity activity -> m
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.delete.DeleteFeedTask -> com.athlete.services.a.a.a:
    java.lang.String mAcces -> c
    java.lang.String mApiKey -> d
    java.lang.String mUserName -> e
    java.lang.String URL_DELETE -> f
    java.lang.String urlHost -> g
    android.app.Activity activity -> h
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.delete.DeleteFriendshipTask -> com.athlete.services.a.a.b:
    java.lang.String mAcces -> c
    java.lang.String mApiKey -> d
    java.lang.String mUserName -> e
    java.lang.String URL_DELETE -> f
    java.lang.String urlHost -> g
    android.app.Activity activity -> h
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.get.GetCommentListTask -> com.athlete.services.a.b.a:
    java.lang.String mUserName -> c
    java.lang.String mApikey -> d
    java.lang.String mAcces -> e
    com.athlete.bl.BaseOperationsBL baseBl -> f
    java.lang.String URL_GET -> g
    java.lang.String urlHost -> h
    java.lang.String POST_ID -> i
    java.lang.String LIMIT -> j
    int feedID -> k
    android.app.Activity activity -> l
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.get.GetConversationOneTask -> com.athlete.services.a.b.b:
    java.lang.String mUserName -> c
    java.lang.String mApikey -> d
    java.lang.String mAcces -> e
    com.athlete.bl.BaseBl baseBl -> f
    java.lang.String URL_GET -> g
    java.lang.String currUserId -> h
    java.lang.String urlHost -> i
    android.app.Activity activity -> j
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.get.GetConversationTask -> com.athlete.services.a.b.c:
    java.lang.String URL_GET -> c
    java.lang.String mUserName -> d
    java.lang.String mApikey -> e
    java.lang.String mAcces -> f
    com.athlete.bl.BaseOperationsBL baseBl -> g
    java.lang.String LATER_THAN -> h
    java.lang.String later_than -> i
    java.lang.String currUserId -> j
    java.lang.String urlHost -> k
    android.app.Activity activity -> l
    android.os.Handler handler -> m
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.get.GetFeedByIDTask -> com.athlete.services.a.b.d:
    java.lang.String URL_GET -> c
    java.lang.String mUserName -> d
    java.lang.String mApikey -> e
    java.lang.String mAcces -> f
    com.athlete.bl.BaseOperationsBL bl -> g
    int current_id -> h
    int type -> i
    java.lang.String urlHost -> j
    android.app.Activity activity -> k
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.get.GetFeedTask -> com.athlete.services.a.b.e:
    java.lang.String URL_GET -> c
    java.lang.String TYPE -> d
    java.lang.String USER_ID -> e
    java.lang.String LIMIT -> f
    java.lang.String EARLIER -> g
    java.lang.String LATER_THAN -> h
    java.lang.String FALL_BACK -> i
    java.lang.String urlHost -> j
    java.lang.String type -> k
    java.lang.String user_id -> l
    java.lang.String limit -> m
    java.lang.String earlier_than -> n
    java.lang.String mUserName -> o
    java.lang.String mApikey -> p
    java.lang.String mAcces -> q
    java.lang.String later_than -> r
    int id_current -> s
    com.athlete.bl.BaseBl baseBl -> t
    int typeFeed -> u
    int fallBack -> v
    boolean isDelete -> w
    android.app.Activity activity -> x
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.get.GetFriendExistTask -> com.athlete.services.a.b.f:
    java.lang.String URL_GET -> c
    java.lang.String WITH_USER_ID -> d
    java.lang.String mUserName -> e
    java.lang.String mApikey -> f
    java.lang.String mAcces -> g
    com.athlete.bl.BaseOperationsBL baseBl -> h
    com.athlete.model.User currentUser -> i
    java.lang.String urlHost -> j
    android.app.Activity activity -> k
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.get.GetFriendsTask -> com.athlete.services.a.b.g:
    java.lang.String URL_GET -> c
    java.lang.String mUserName -> d
    java.lang.String mApikey -> e
    java.lang.String mAcces -> f
    com.athlete.bl.BaseOperationsBL baseBl -> g
    java.lang.String limit -> h
    com.athlete.model.User userDetails -> i
    java.lang.String urlHost -> j
    android.app.Activity activity -> k
    android.os.Handler handler -> l
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.get.GetMeTask -> com.athlete.services.a.b.h:
    java.lang.String URL_GET -> c
    java.lang.String mAcces -> d
    java.lang.String mApiKey -> e
    java.lang.String mUserName -> f
    android.app.Activity activity -> g
    com.athlete.bl.BaseBl baseBl -> h
    java.lang.String urlHost -> i
    android.os.Handler handler -> j
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.get.GetMessageOneTask -> com.athlete.services.a.b.i:
    java.lang.String mUserName -> c
    java.lang.String mApikey -> d
    java.lang.String mAcces -> e
    java.lang.String URL_GET -> f
    java.lang.String urlHost -> g
    android.app.Activity activity -> h
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.get.GetMessagesTask -> com.athlete.services.a.b.j:
    java.lang.String URL_GET -> c
    java.lang.String mUserName -> d
    java.lang.String mApikey -> e
    java.lang.String mAcces -> f
    com.athlete.bl.BaseBl baseBl -> g
    java.lang.String LATER_THAN -> h
    java.lang.String CONVERSATION -> i
    java.lang.String later_than -> j
    java.lang.String idConversation -> k
    com.athlete.model.Conversation conversation -> l
    java.lang.String urlHost -> m
    android.app.Activity activity -> n
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.get.GetPicturePostTask -> com.athlete.services.a.b.k:
    java.lang.String mUserName -> c
    java.lang.String mApikey -> d
    java.lang.String mAcces -> e
    com.athlete.bl.BaseOperationsBL baseBl -> f
    java.lang.String URL_GET -> g
    java.lang.String urlHost -> h
    java.lang.String POST_ID -> i
    android.app.Activity activity -> j
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.get.GetProfileTask -> com.athlete.services.a.b.l:
    java.lang.String URL_GET -> c
    com.athlete.model.User user -> d
    java.lang.String mUserName -> e
    java.lang.String mApikey -> f
    java.lang.String mAcces -> g
    com.athlete.bl.BaseBl baseBl -> h
    java.lang.String urlHost -> i
    android.app.Activity activity -> j
    android.os.Handler handler -> k
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.get.GetStatsTask -> com.athlete.services.a.b.m:
    java.lang.String URL_GET -> c
    java.lang.String mUserName -> d
    java.lang.String mApikey -> e
    java.lang.String mAcces -> f
    com.athlete.bl.BaseBl baseBl -> g
    com.athlete.model.User userDetails -> h
    java.lang.String urlHost -> i
    android.app.Activity activity -> j
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.get.GetWorkoutByIDTask -> com.athlete.services.a.b.n:
    java.lang.String URL_GET -> c
    java.lang.String mUserName -> d
    java.lang.String mApikey -> e
    java.lang.String mAcces -> f
    boolean isGPX -> g
    android.app.Activity activity -> h
    java.lang.String urlHost -> i
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    long importGPXFile(java.lang.String) -> a
    java.io.File write(java.lang.String,java.lang.String) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.services.task.get.GetWorkoutTask -> com.athlete.services.a.b.o:
    java.lang.String URL_GET -> c
    java.lang.String OFFSET -> d
    java.lang.String USER_ID -> e
    java.lang.String user_id -> f
    int offset -> g
    java.lang.String mUserName -> h
    java.lang.String mApikey -> i
    java.lang.String mAcces -> j
    com.athlete.bl.BaseBl baseBl -> k
    java.lang.String urlHost -> l
    android.app.Activity activity -> m
    boolean isLog -> n
    com.athlete.model.TaskResult doInBackground$49041832() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.athlete.util.AnalyticsUtils -> com.athlete.util.a:
    void sendPageViews(android.content.Context,java.lang.String) -> a
    void sendPageViews$722828f7(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
com.athlete.util.AudioFocusHelper -> com.athlete.util.b:
    android.media.AudioManager mAudioManager -> a
    android.media.MediaPlayer mediaPlayer -> b
    int focus -> c
    int focusTypeGain -> d
    int focusTypeLoss -> e
    int focusTypeTransient -> f
    int focusTypeTransientDuck -> g
    boolean requestFocusMayDuck() -> a
    boolean requestFocus() -> b
    boolean abandonFocus() -> c
    void onAudioFocusChange(int) -> onAudioFocusChange
com.athlete.util.BaseRequestListener -> com.athlete.util.c:
    void onFileNotFoundException$64f06040(java.io.FileNotFoundException) -> a
    void onIOException$7e5565fb(java.io.IOException) -> a
    void onMalformedURLException$11b5f444(java.net.MalformedURLException) -> a
com.athlete.util.CommonHelper -> com.athlete.util.d:
    double metersToMiles -> a
    double metersToKm -> b
    int BASE_CAL_PER_HOUR -> c
    int BASE_WEIGHT_LBS -> d
    int BASE_PACE_MPH -> e
    int sdk -> f
    void dumpString$552c4e01() -> a
    java.lang.String formatElapsedTime(long) -> a
    java.lang.String getTimeMusic(int) -> a
    void setBackground(android.view.View,android.graphics.drawable.Drawable) -> a
    java.lang.String getElevation(double,boolean) -> a
    double getElevationDouble(double,boolean) -> b
    java.lang.String getLastCompanion(java.lang.String) -> a
    int getLastCompanionInt(java.lang.String) -> b
    java.lang.String getDateFormatYYYYMMDDtHHMMSS(java.util.Date) -> a
    java.lang.String getDateFormatMMMMyyyy(java.lang.String) -> c
    java.lang.String getDateHHMM(long,android.content.Context) -> a
    int getWeek(long) -> d
    int getPX(int,android.content.Context) -> a
    int calculateCalories(double,long,float) -> a
    java.lang.String getCountdownText(int,android.content.Context) -> b
    java.lang.String getDateMSS$6909e107(long) -> b
    java.lang.String getMiOrKm(boolean) -> a
    java.lang.String getDateMSSQuote$6909e107(long) -> c
    long getLongYYYYMMDDtHHMMSS(java.lang.String) -> d
    long getLongMMMMyyyy(java.lang.String) -> e
    java.lang.String getMonthDayDotTime(java.lang.String,android.content.Context) -> a
    float convertMetersToMiles(double,boolean) -> c
    int convertMetersToMilesAVG(double,boolean) -> d
    double getK(boolean) -> b
    java.lang.String getLastSeen(long,android.content.Context) -> b
    void setType(android.widget.ImageView,com.athlete.model.WorkOut,android.widget.TextView) -> a
    java.lang.String computeHmac(java.lang.String,java.lang.String) -> a
com.athlete.util.HttpUtil -> com.athlete.util.e:
    java.lang.String TAG -> a
    org.apache.http.client.HttpClient sClient -> b
    java.lang.String get(java.lang.String,java.lang.String) -> a
    java.lang.String getGPX(java.lang.String,java.lang.String) -> b
    java.lang.String readResponse(org.apache.http.HttpResponse) -> a
    boolean delete(java.lang.String,java.lang.String) -> c
    java.lang.String post(java.lang.String,org.json.JSONObject,java.lang.String,boolean) -> a
    java.lang.String postJSONTrack(java.lang.String,org.json.JSONObject,java.lang.String) -> a
    java.lang.String postPhoto(java.lang.String,java.lang.String,java.io.File) -> a
    java.lang.String postWorkout(java.lang.String,java.lang.String,java.io.File) -> b
    java.lang.String patch(java.lang.String,org.json.JSONObject,java.lang.String) -> b
com.athlete.util.MySSLSocketFactory -> com.athlete.util.f:
    javax.net.ssl.SSLContext sslContext -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.athlete.util.MySSLSocketFactory$1 -> com.athlete.util.g:
    com.athlete.util.MySSLSocketFactory this$0 -> a
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
com.athlete.util.OrmLiteBaseMapActivity -> com.athlete.util.OrmLiteBaseMapActivity:
    java.lang.String TAG -> R
    com.athlete.db.DatabaseHelper helper -> a
    boolean created -> b
    boolean destroyed -> c
    com.athlete.db.DatabaseHelper getHelper() -> y
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    boolean isRouteDisplayed() -> isRouteDisplayed
com.athlete.util.SntpClient -> com.athlete.util.h:
    long mNtpTime -> a
    long mNtpTimeReference -> b
    long mRoundTripTime -> c
    int timeout -> d
    boolean requestTime(java.lang.String) -> a
    long getNtpTime() -> a
    long read32(byte[],int) -> a
    long readTimeStamp(byte[],int) -> b
com.athlete.util.SystemUtils -> com.athlete.util.i:
    android.os.PowerManager$WakeLock acquireWakeLock(android.app.Activity,android.os.PowerManager$WakeLock) -> a
com.facebook.android.AsyncFacebookRunner -> com.a.a.a:
    com.facebook.android.Facebook fb -> a
    void request(android.os.Bundle,com.facebook.android.AsyncFacebookRunner$RequestListener) -> a
    void request(java.lang.String,com.facebook.android.AsyncFacebookRunner$RequestListener) -> a
    void request$36491ccc(java.lang.String,android.os.Bundle,java.lang.String,com.facebook.android.AsyncFacebookRunner$RequestListener) -> a
com.facebook.android.AsyncFacebookRunner$2 -> com.a.a.b:
    com.facebook.android.AsyncFacebookRunner this$0 -> a
    java.lang.String val$graphPath -> b
    android.os.Bundle val$parameters -> c
    java.lang.String val$httpMethod -> d
    com.facebook.android.AsyncFacebookRunner$RequestListener val$listener -> e
    java.lang.Object val$state -> f
    void run() -> run
com.facebook.android.AsyncFacebookRunner$RequestListener -> com.a.a.c:
    void onComplete$645b3fe5(java.lang.String) -> a
    void onIOException$7e5565fb(java.io.IOException) -> a
    void onFileNotFoundException$64f06040(java.io.FileNotFoundException) -> a
    void onMalformedURLException$11b5f444(java.net.MalformedURLException) -> a
com.facebook.android.DialogError -> com.a.a.d:
    int mErrorCode -> a
    java.lang.String mFailingUrl -> b
com.facebook.android.Facebook -> com.a.a.e:
    java.lang.String DIALOG_BASE_URL -> a
    java.lang.String GRAPH_BASE_URL -> b
    java.lang.String RESTSERVER_URL -> c
    java.lang.String mAccessToken -> d
    long mAccessExpires -> e
    java.lang.String mAppId -> f
    android.app.Activity mAuthActivity -> g
    java.lang.String[] mAuthPermissions -> h
    int mAuthActivityCode -> i
    com.facebook.android.Facebook$DialogListener mAuthDialogListener -> j
    void authorize(android.app.Activity,java.lang.String[],com.facebook.android.Facebook$DialogListener) -> a
    boolean startSingleSignOn$66411259(android.app.Activity,java.lang.String,java.lang.String[]) -> a
    boolean validateAppSignatureForIntent(android.app.Activity,android.content.Intent) -> a
    void startDialogAuth(android.app.Activity,java.lang.String[]) -> a
    void authorizeCallback(int,int,android.content.Intent) -> a
    java.lang.String request(java.lang.String,android.os.Bundle,java.lang.String) -> a
    void dialog(android.content.Context,java.lang.String,android.os.Bundle,com.facebook.android.Facebook$DialogListener) -> a
    boolean isSessionValid() -> a
    java.lang.String getAccessToken() -> b
    long getAccessExpires() -> c
    void setAccessToken(java.lang.String) -> a
    void setAccessExpires(long) -> a
    void setAccessExpiresIn(java.lang.String) -> b
    com.facebook.android.Facebook$DialogListener access$0(com.facebook.android.Facebook) -> a
com.facebook.android.Facebook$1 -> com.a.a.f:
    com.facebook.android.Facebook this$0 -> a
    void onComplete(android.os.Bundle) -> a
    void onError(com.facebook.android.DialogError) -> a
    void onFacebookError(com.facebook.android.FacebookError) -> a
    void onCancel() -> a
com.facebook.android.Facebook$DialogListener -> com.a.a.g:
    void onComplete(android.os.Bundle) -> a
    void onFacebookError(com.facebook.android.FacebookError) -> a
    void onError(com.facebook.android.DialogError) -> a
    void onCancel() -> a
com.facebook.android.FacebookError -> com.a.a.h:
    int mErrorCode -> a
com.facebook.android.FbDialog -> com.a.a.i:
    float[] DIMENSIONS_DIFF_LANDSCAPE -> a
    float[] DIMENSIONS_DIFF_PORTRAIT -> b
    android.widget.FrameLayout$LayoutParams FILL -> c
    java.lang.String mUrl -> d
    com.facebook.android.Facebook$DialogListener mListener -> e
    android.app.ProgressDialog mSpinner -> f
    android.widget.ImageView mCrossImage -> g
    android.webkit.WebView mWebView -> h
    android.widget.FrameLayout mContent -> i
    void onCreate(android.os.Bundle) -> onCreate
    com.facebook.android.Facebook$DialogListener access$0(com.facebook.android.FbDialog) -> a
    android.app.ProgressDialog access$1(com.facebook.android.FbDialog) -> b
    android.widget.FrameLayout access$2(com.facebook.android.FbDialog) -> c
    android.webkit.WebView access$3(com.facebook.android.FbDialog) -> d
    android.widget.ImageView access$4(com.facebook.android.FbDialog) -> e
com.facebook.android.FbDialog$1 -> com.a.a.j:
    com.facebook.android.FbDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.facebook.android.FbDialog$FbWebViewClient -> com.a.a.k:
    com.facebook.android.FbDialog this$0 -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.facebook.android.R -> com.a.a.l:
com.facebook.android.R$drawable -> com.a.a.m:
    int close -> a
com.facebook.android.Util -> com.a.a.n:
    java.lang.String encodePostBody(android.os.Bundle,java.lang.String) -> a
    java.lang.String encodeUrl(android.os.Bundle) -> a
    android.os.Bundle decodeUrl(java.lang.String) -> b
    android.os.Bundle parseUrl(java.lang.String) -> a
    java.lang.String openUrl(java.lang.String,java.lang.String,android.os.Bundle) -> a
    java.lang.String read(java.io.InputStream) -> a
com.google.analytics.tracking.android.AdHitIdGenerator -> com.google.analytics.tracking.android.AdHitIdGenerator:
    boolean adMobSdkInstalled -> adMobSdkInstalled
    int getAdHitId() -> getAdHitId
com.google.analytics.tracking.android.AdMobInfo -> com.google.analytics.tracking.android.AdMobInfo:
    com.google.analytics.tracking.android.AdMobInfo INSTANCE -> INSTANCE
    int adHitId -> adHitId
    java.util.Random random -> random
    com.google.analytics.tracking.android.AdMobInfo getInstance() -> getInstance
    java.util.Map getJoinIds() -> getJoinIds
    int generateAdHitId() -> generateAdHitId
    void setAdHitId(int) -> setAdHitId
    int getAdHitId() -> getAdHitId
com.google.analytics.tracking.android.AdMobInfo$AdMobKey -> com.google.analytics.tracking.android.AdMobInfo$AdMobKey:
    com.google.analytics.tracking.android.AdMobInfo$AdMobKey CLIENT_ID_KEY -> CLIENT_ID_KEY
    com.google.analytics.tracking.android.AdMobInfo$AdMobKey HIT_ID_KEY -> HIT_ID_KEY
    com.google.analytics.tracking.android.AdMobInfo$AdMobKey PROPERTY_ID_KEY -> PROPERTY_ID_KEY
    com.google.analytics.tracking.android.AdMobInfo$AdMobKey VISITOR_ID_KEY -> VISITOR_ID_KEY
    java.lang.String bowParameter -> bowParameter
    com.google.analytics.tracking.android.AdMobInfo$AdMobKey[] $VALUES -> $VALUES
    com.google.analytics.tracking.android.AdMobInfo$AdMobKey[] values() -> values
    com.google.analytics.tracking.android.AdMobInfo$AdMobKey valueOf(java.lang.String) -> valueOf
    java.lang.String getBowParameter() -> getBowParameter
com.google.analytics.tracking.android.Analytics -> com.google.analytics.tracking.android.Analytics:
    void setDebug(boolean) -> setDebug
    boolean debugEnabled() -> debugEnabled
    com.google.analytics.tracking.android.Tracker getTracker(java.lang.String) -> getTracker
    com.google.analytics.tracking.android.Tracker getDefaultTracker() -> getDefaultTracker
    void setDefaultTracker(com.google.analytics.tracking.android.Tracker) -> setDefaultTracker
    void setAppOptOut(boolean) -> setAppOptOut
    void requestAppOptOut(com.google.analytics.tracking.android.Analytics$AppOptOutCallback) -> requestAppOptOut
com.google.analytics.tracking.android.Analytics$AppOptOutCallback -> com.google.analytics.tracking.android.Analytics$AppOptOutCallback:
    void reportAppOptOut(boolean) -> reportAppOptOut
com.google.analytics.tracking.android.AnalyticsClient -> com.google.analytics.tracking.android.AnalyticsClient:
    void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> sendHit
    void clearHits() -> clearHits
    void connect() -> connect
    void disconnect() -> disconnect
com.google.analytics.tracking.android.AnalyticsConstants -> com.google.analytics.tracking.android.AnalyticsConstants:
    int MAX_GET_LENGTH -> MAX_GET_LENGTH
    int MAX_POST_LENGTH -> MAX_POST_LENGTH
    int MAX_REQUESTS_PER_DISPATCH -> MAX_REQUESTS_PER_DISPATCH
    int MAX_NUM_STORED_HITS -> MAX_NUM_STORED_HITS
    java.lang.String PRODUCT -> PRODUCT
    java.lang.String VERSION -> VERSION
    java.lang.String INSTALL_DATA_FILE -> INSTALL_DATA_FILE
    java.lang.String CLIENT_ID_FILE -> CLIENT_ID_FILE
    java.lang.String OPT_OUT_FILE -> OPT_OUT_FILE
    java.lang.String OPTOUT_ID -> OPTOUT_ID
    int OPTOUT_TIME_CHECK_IN_SECONDS -> OPTOUT_TIME_CHECK_IN_SECONDS
    long MILLISECONDS_PER_MINUTE -> MILLISECONDS_PER_MINUTE
    long MILLISECONDS_PER_HOUR -> MILLISECONDS_PER_HOUR
    long MILLISECONDS_PER_DAY -> MILLISECONDS_PER_DAY
    long MILLISECONDS_PER_MONTH -> MILLISECONDS_PER_MONTH
    java.lang.String ANALYTICS_PATH_INSECURE -> ANALYTICS_PATH_INSECURE
    java.lang.String ANALYTICS_PATH_SECURE -> ANALYTICS_PATH_SECURE
    java.lang.String HIT_URL_MODEL_FIELD -> HIT_URL_MODEL_FIELD
com.google.analytics.tracking.android.AnalyticsGmsCoreClient -> com.google.analytics.tracking.android.AnalyticsGmsCoreClient:
    int BIND_FAILED -> BIND_FAILED
    int REMOTE_EXECUTION_FAILED -> REMOTE_EXECUTION_FAILED
    java.lang.String SERVICE_DESCRIPTOR -> SERVICE_DESCRIPTOR
    java.lang.String SERVICE_ACTION -> SERVICE_ACTION
    int BIND_ADJUST_WITH_ACTIVITY -> BIND_ADJUST_WITH_ACTIVITY
    java.lang.String KEY_APP_PACKAGE_NAME -> KEY_APP_PACKAGE_NAME
    android.content.ServiceConnection connection -> connection
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectedListener onConnectedListener -> onConnectedListener
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectionFailedListener onConnectionFailedListener -> onConnectionFailedListener
    android.content.Context context -> context
    com.google.android.gms.analytics.internal.IAnalyticsService service -> service
    void connect() -> connect
    void disconnect() -> disconnect
    void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> sendHit
    void clearHits() -> clearHits
    com.google.android.gms.analytics.internal.IAnalyticsService getService() -> getService
    void checkConnected() -> checkConnected
    boolean isConnected() -> isConnected
    void onServiceBound() -> onServiceBound
    void onConnectionSuccess() -> onConnectionSuccess
    com.google.android.gms.analytics.internal.IAnalyticsService access$002(com.google.analytics.tracking.android.AnalyticsGmsCoreClient,com.google.android.gms.analytics.internal.IAnalyticsService) -> access$002
    void access$100(com.google.analytics.tracking.android.AnalyticsGmsCoreClient) -> access$100
    android.content.Context access$200(com.google.analytics.tracking.android.AnalyticsGmsCoreClient) -> access$200
    android.content.ServiceConnection access$302(com.google.analytics.tracking.android.AnalyticsGmsCoreClient,android.content.ServiceConnection) -> access$302
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectionFailedListener access$400(com.google.analytics.tracking.android.AnalyticsGmsCoreClient) -> access$400
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectedListener access$500(com.google.analytics.tracking.android.AnalyticsGmsCoreClient) -> access$500
com.google.analytics.tracking.android.AnalyticsGmsCoreClient$AnalyticsServiceConnection -> com.google.analytics.tracking.android.AnalyticsGmsCoreClient$AnalyticsServiceConnection:
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient this$0 -> this$0
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectedListener -> com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectedListener:
    void onConnected() -> onConnected
    void onDisconnected() -> onDisconnected
com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectionFailedListener -> com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectionFailedListener:
    void onConnectionFailed(int,android.content.Intent) -> onConnectionFailed
com.google.analytics.tracking.android.AnalyticsReceiver -> com.google.analytics.tracking.android.AnalyticsReceiver:
    java.lang.String INSTALL_ACTION -> INSTALL_ACTION
    java.lang.String CAMPAIGN_KEY -> CAMPAIGN_KEY
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.analytics.tracking.android.AnalyticsStore -> com.google.analytics.tracking.android.AnalyticsStore:
    void setDispatch(boolean) -> setDispatch
    void putHit(java.util.Map,long,java.lang.String,java.util.Collection) -> putHit
    void clearHits() -> clearHits
    void dispatch() -> dispatch
    void close() -> close
    void setThrottlingEnabled(boolean) -> setThrottlingEnabled
com.google.analytics.tracking.android.AnalyticsStoreStateListener -> com.google.analytics.tracking.android.AnalyticsStoreStateListener:
    void reportStoreIsEmpty(boolean) -> reportStoreIsEmpty
com.google.analytics.tracking.android.AnalyticsThread -> com.google.analytics.tracking.android.AnalyticsThread:
    void sendHit(java.util.Map) -> sendHit
    void dispatch() -> dispatch
    void setAppOptOut(boolean) -> setAppOptOut
    void requestAppOptOut(com.google.analytics.tracking.android.Analytics$AppOptOutCallback) -> requestAppOptOut
    void requestClientId(com.google.analytics.tracking.android.AnalyticsThread$ClientIdCallback) -> requestClientId
    java.util.concurrent.LinkedBlockingQueue getQueue() -> getQueue
    java.lang.Thread getThread() -> getThread
com.google.analytics.tracking.android.AnalyticsThread$ClientIdCallback -> com.google.analytics.tracking.android.AnalyticsThread$ClientIdCallback:
    void reportClientId(java.lang.String) -> reportClientId
com.google.analytics.tracking.android.Clock -> com.google.analytics.tracking.android.Clock:
    long currentTimeMillis() -> currentTimeMillis
com.google.analytics.tracking.android.Dispatcher -> com.google.analytics.tracking.android.Dispatcher:
    int dispatchHits(java.util.List) -> dispatchHits
    boolean okToDispatch() -> okToDispatch
com.google.analytics.tracking.android.EasyTracker -> com.google.analytics.tracking.android.EasyTracker:
    com.google.analytics.tracking.android.EasyTracker instance -> instance
    int NUM_MILLISECONDS_TO_WAIT_FOR_OPEN_ACTIVITY -> NUM_MILLISECONDS_TO_WAIT_FOR_OPEN_ACTIVITY
    boolean gaEnabled -> gaEnabled
    java.lang.String gaTrackingId -> gaTrackingId
    java.lang.String gaAppName -> gaAppName
    java.lang.String gaAppVersion -> gaAppVersion
    int gaDispatchPeriod -> gaDispatchPeriod
    boolean gaDebug -> gaDebug
    java.lang.Double gaSampleRate -> gaSampleRate
    boolean gaAnonymizeIp -> gaAnonymizeIp
    boolean gaReportUncaughtExceptions -> gaReportUncaughtExceptions
    java.lang.Thread$UncaughtExceptionHandler handler -> handler
    boolean autoActivityTracking -> autoActivityTracking
    int activitiesActive -> activitiesActive
    long gaSessionTimeout -> gaSessionTimeout
    long lastOnStopTime -> lastOnStopTime
    android.content.Context gaContext -> gaContext
    java.util.Map activityNameMap -> activityNameMap
    com.google.analytics.tracking.android.Tracker tracker -> tracker
    com.google.analytics.tracking.android.ParameterLoader parameterFetcher -> parameterFetcher
    com.google.analytics.tracking.android.Analytics ga -> ga
    com.google.analytics.tracking.android.ServiceManager serviceManager -> serviceManager
    com.google.analytics.tracking.android.Clock clock -> clock
    java.util.Timer timer -> timer
    java.util.TimerTask timerTask -> timerTask
    boolean inForeground -> inForeground
    com.google.analytics.tracking.android.EasyTracker getInstance() -> getInstance
    com.google.analytics.tracking.android.Tracker getTracker() -> getTracker
    boolean checkForNewSession() -> checkForNewSession
    void loadParameters() -> loadParameters
    void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler) -> setUncaughtExceptionHandler
    void setContext(android.content.Context) -> setContext
    void setContext(android.content.Context,com.google.analytics.tracking.android.ParameterLoader,com.google.analytics.tracking.android.Analytics,com.google.analytics.tracking.android.ServiceManager) -> setContext
    void activityStart(android.app.Activity) -> activityStart
    void activityStop(android.app.Activity) -> activityStop
    void dispatch() -> dispatch
    void clearExistingTimer() -> clearExistingTimer
    java.lang.String getActivityName(android.app.Activity) -> getActivityName
    void clearTracker() -> clearTracker
    void setClock(com.google.analytics.tracking.android.Clock) -> setClock
    int getActivitiesActive() -> getActivitiesActive
    boolean access$102(com.google.analytics.tracking.android.EasyTracker,boolean) -> access$102
com.google.analytics.tracking.android.EasyTracker$1 -> com.google.analytics.tracking.android.EasyTracker$1:
    com.google.analytics.tracking.android.EasyTracker this$0 -> this$0
    long currentTimeMillis() -> currentTimeMillis
com.google.analytics.tracking.android.EasyTracker$NoopTracker -> com.google.analytics.tracking.android.EasyTracker$NoopTracker:
    java.lang.String appId -> appId
    java.lang.String appInstallerId -> appInstallerId
    double sampleRate -> sampleRate
    boolean anonymizeIp -> anonymizeIp
    boolean useSecure -> useSecure
    com.google.analytics.tracking.android.ExceptionParser exceptionParser -> exceptionParser
    com.google.analytics.tracking.android.EasyTracker this$0 -> this$0
    void setStartSession(boolean) -> setStartSession
    void setAppName(java.lang.String) -> setAppName
    void setAppVersion(java.lang.String) -> setAppVersion
    void setAppScreen(java.lang.String) -> setAppScreen
    void trackView() -> trackView
    void trackView(java.lang.String) -> trackView
    void trackEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.Long) -> trackEvent
    void trackTransaction(com.google.analytics.tracking.android.Transaction) -> trackTransaction
    void trackException(java.lang.String,boolean) -> trackException
    void trackException(java.lang.String,java.lang.Throwable,boolean) -> trackException
    void trackTiming(java.lang.String,long,java.lang.String,java.lang.String) -> trackTiming
    void trackSocial(java.lang.String,java.lang.String,java.lang.String) -> trackSocial
    void close() -> close
    void send(java.lang.String,java.util.Map) -> send
    java.lang.String get(java.lang.String) -> get
    void set(java.lang.String,java.lang.String) -> set
    java.lang.String getTrackingId() -> getTrackingId
    void setAnonymizeIp(boolean) -> setAnonymizeIp
    boolean anonymizeIpEnabled() -> anonymizeIpEnabled
    void setSampleRate(double) -> setSampleRate
    double getSampleRate() -> getSampleRate
    void setUseSecure(boolean) -> setUseSecure
    boolean getUseSecure() -> getUseSecure
    void setReferrer(java.lang.String) -> setReferrer
    void setCampaign(java.lang.String) -> setCampaign
    void setAppId(java.lang.String) -> setAppId
    java.lang.String getAppId() -> getAppId
    void setAppInstallerId(java.lang.String) -> setAppInstallerId
    java.lang.String getAppInstallerId() -> getAppInstallerId
    void setExceptionParser(com.google.analytics.tracking.android.ExceptionParser) -> setExceptionParser
    com.google.analytics.tracking.android.ExceptionParser getExceptionParser() -> getExceptionParser
    java.util.Map constructEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.Long) -> constructEvent
    java.util.Map constructTransaction(com.google.analytics.tracking.android.Transaction) -> constructTransaction
    java.util.Map constructException(java.lang.String,boolean) -> constructException
    java.util.Map constructRawException(java.lang.String,java.lang.Throwable,boolean) -> constructRawException
    java.util.Map constructTiming(java.lang.String,long,java.lang.String,java.lang.String) -> constructTiming
    java.util.Map constructSocial(java.lang.String,java.lang.String,java.lang.String) -> constructSocial
    void setCustomDimension(int,java.lang.String) -> setCustomDimension
    void setCustomMetric(int,java.lang.Long) -> setCustomMetric
    void setCustomDimensionsAndMetrics(java.util.Map,java.util.Map) -> setCustomDimensionsAndMetrics
com.google.analytics.tracking.android.EasyTracker$NotInForegroundTimerTask -> com.google.analytics.tracking.android.EasyTracker$NotInForegroundTimerTask:
    com.google.analytics.tracking.android.EasyTracker this$0 -> this$0
    void run() -> run
com.google.analytics.tracking.android.ExceptionParser -> com.google.analytics.tracking.android.ExceptionParser:
    java.lang.String getDescription(java.lang.String,java.lang.Throwable) -> getDescription
com.google.analytics.tracking.android.ExceptionReporter -> com.google.analytics.tracking.android.ExceptionReporter:
    java.lang.Thread$UncaughtExceptionHandler originalHandler -> originalHandler
    com.google.analytics.tracking.android.Tracker tracker -> tracker
    com.google.analytics.tracking.android.ServiceManager serviceManager -> serviceManager
    com.google.analytics.tracking.android.ExceptionParser exceptionParser -> exceptionParser
    com.google.analytics.tracking.android.ExceptionParser getExceptionParser() -> getExceptionParser
    void setExceptionParser(com.google.analytics.tracking.android.ExceptionParser) -> setExceptionParser
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.google.analytics.tracking.android.FutureApis -> com.google.analytics.tracking.android.FutureApis:
    int version() -> version
    boolean setOwnerOnlyReadWrite(java.lang.String) -> setOwnerOnlyReadWrite
com.google.analytics.tracking.android.GAServiceManager -> com.google.analytics.tracking.android.GAServiceManager:
    int MSG_KEY -> MSG_KEY
    java.lang.Object MSG_OBJECT -> MSG_OBJECT
    android.content.Context ctx -> ctx
    com.google.analytics.tracking.android.AnalyticsStore store -> store
    com.google.analytics.tracking.android.AnalyticsThread thread -> thread
    int dispatchPeriodInSeconds -> dispatchPeriodInSeconds
    boolean pendingDispatch -> pendingDispatch
    com.google.analytics.tracking.android.AnalyticsStoreStateListener listener -> listener
    android.os.Handler handler -> handler
    boolean powerSaveMode -> powerSaveMode
    com.google.analytics.tracking.android.GAServiceManager instance -> instance
    com.google.analytics.tracking.android.GAServiceManager getInstance() -> getInstance
    void initializeHandler() -> initializeHandler
    void initialize(android.content.Context,com.google.analytics.tracking.android.AnalyticsThread) -> initialize
    void setThrottlingEnabled(boolean) -> setThrottlingEnabled
    com.google.analytics.tracking.android.AnalyticsStoreStateListener getListener() -> getListener
    com.google.analytics.tracking.android.AnalyticsStore getStore() -> getStore
    void dispatch() -> dispatch
    void setDispatchPeriod(int) -> setDispatchPeriod
    void updatePowerSaveMode(boolean) -> updatePowerSaveMode
    java.lang.Object access$000() -> access$000
    int access$100(com.google.analytics.tracking.android.GAServiceManager) -> access$100
    boolean access$200(com.google.analytics.tracking.android.GAServiceManager) -> access$200
    android.os.Handler access$300(com.google.analytics.tracking.android.GAServiceManager) -> access$300
com.google.analytics.tracking.android.GAServiceManager$1 -> com.google.analytics.tracking.android.GAServiceManager$1:
    com.google.analytics.tracking.android.GAServiceManager this$0 -> this$0
    void reportStoreIsEmpty(boolean) -> reportStoreIsEmpty
com.google.analytics.tracking.android.GAServiceManager$2 -> com.google.analytics.tracking.android.GAServiceManager$2:
    com.google.analytics.tracking.android.GAServiceManager this$0 -> this$0
    boolean handleMessage(android.os.Message) -> handleMessage
com.google.analytics.tracking.android.GAServiceProxy -> com.google.analytics.tracking.android.GAServiceProxy:
    int MAX_TRIES -> MAX_TRIES
    long SERVICE_CONNECTION_TIMEOUT -> SERVICE_CONNECTION_TIMEOUT
    long RECONNECT_WAIT_TIME -> RECONNECT_WAIT_TIME
    long FAILED_CONNECT_WAIT_TIME -> FAILED_CONNECT_WAIT_TIME
    long lastRequestTime -> lastRequestTime
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState state -> state
    com.google.analytics.tracking.android.AnalyticsClient client -> client
    com.google.analytics.tracking.android.AnalyticsStore store -> store
    com.google.analytics.tracking.android.AnalyticsStore testStore -> testStore
    com.google.analytics.tracking.android.AnalyticsThread thread -> thread
    android.content.Context ctx -> ctx
    java.util.Queue queue -> queue
    int connectTries -> connectTries
    java.util.Timer reConnectTimer -> reConnectTimer
    java.util.Timer failedConnectTimer -> failedConnectTimer
    java.util.Timer disconnectCheckTimer -> disconnectCheckTimer
    boolean pendingDispatch -> pendingDispatch
    boolean pendingClearHits -> pendingClearHits
    com.google.analytics.tracking.android.Clock clock -> clock
    long idleTimeout -> idleTimeout
    void setClock(com.google.analytics.tracking.android.Clock) -> setClock
    void putHit(java.util.Map,long,java.lang.String,java.util.List) -> putHit
    void dispatch() -> dispatch
    void clearHits() -> clearHits
    java.util.Timer cancelTimer(java.util.Timer) -> cancelTimer
    void clearAllTimers() -> clearAllTimers
    void createService() -> createService
    void createService(com.google.analytics.tracking.android.AnalyticsClient) -> createService
    void setIdleTimeout(long) -> setIdleTimeout
    void sendQueue() -> sendQueue
    void dispatchToStore() -> dispatchToStore
    void useStore() -> useStore
    void connectToService() -> connectToService
    void disconnectFromService() -> disconnectFromService
    void onConnected() -> onConnected
    void onDisconnected() -> onDisconnected
    void onConnectionFailed(int,android.content.Intent) -> onConnectionFailed
    void fireReconnectAttempt() -> fireReconnectAttempt
    void access$000(com.google.analytics.tracking.android.GAServiceProxy) -> access$000
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState access$400(com.google.analytics.tracking.android.GAServiceProxy) -> access$400
    void access$500(com.google.analytics.tracking.android.GAServiceProxy) -> access$500
    void access$600(com.google.analytics.tracking.android.GAServiceProxy) -> access$600
    java.util.Queue access$700(com.google.analytics.tracking.android.GAServiceProxy) -> access$700
    long access$800(com.google.analytics.tracking.android.GAServiceProxy) -> access$800
    long access$900(com.google.analytics.tracking.android.GAServiceProxy) -> access$900
    com.google.analytics.tracking.android.Clock access$1000(com.google.analytics.tracking.android.GAServiceProxy) -> access$1000
    void access$1100(com.google.analytics.tracking.android.GAServiceProxy) -> access$1100
    java.util.Timer access$1200(com.google.analytics.tracking.android.GAServiceProxy) -> access$1200
com.google.analytics.tracking.android.GAServiceProxy$1 -> com.google.analytics.tracking.android.GAServiceProxy$1:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> this$0
    long currentTimeMillis() -> currentTimeMillis
com.google.analytics.tracking.android.GAServiceProxy$2 -> com.google.analytics.tracking.android.GAServiceProxy$2:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> this$0
    void run() -> run
com.google.analytics.tracking.android.GAServiceProxy$3 -> com.google.analytics.tracking.android.GAServiceProxy$3:
    int[] $SwitchMap$com$google$analytics$tracking$android$GAServiceProxy$ConnectState -> $SwitchMap$com$google$analytics$tracking$android$GAServiceProxy$ConnectState
com.google.analytics.tracking.android.GAServiceProxy$ConnectState -> com.google.analytics.tracking.android.GAServiceProxy$ConnectState:
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState CONNECTING -> CONNECTING
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState CONNECTED_SERVICE -> CONNECTED_SERVICE
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState CONNECTED_LOCAL -> CONNECTED_LOCAL
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState BLOCKED -> BLOCKED
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState PENDING_CONNECTION -> PENDING_CONNECTION
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState PENDING_DISCONNECT -> PENDING_DISCONNECT
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState DISCONNECTED -> DISCONNECTED
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState[] $VALUES -> $VALUES
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState[] values() -> values
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState valueOf(java.lang.String) -> valueOf
com.google.analytics.tracking.android.GAServiceProxy$DisconnectCheckTask -> com.google.analytics.tracking.android.GAServiceProxy$DisconnectCheckTask:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> this$0
    void run() -> run
com.google.analytics.tracking.android.GAServiceProxy$FailedConnectTask -> com.google.analytics.tracking.android.GAServiceProxy$FailedConnectTask:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> this$0
    void run() -> run
com.google.analytics.tracking.android.GAServiceProxy$HitParams -> com.google.analytics.tracking.android.GAServiceProxy$HitParams:
    java.util.Map wireFormatParams -> wireFormatParams
    long hitTimeInMilliseconds -> hitTimeInMilliseconds
    java.lang.String path -> path
    java.util.List commands -> commands
    java.util.Map getWireFormatParams() -> getWireFormatParams
    long getHitTimeInMilliseconds() -> getHitTimeInMilliseconds
    java.lang.String getPath() -> getPath
    java.util.List getCommands() -> getCommands
com.google.analytics.tracking.android.GAServiceProxy$ReconnectTask -> com.google.analytics.tracking.android.GAServiceProxy$ReconnectTask:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> this$0
    void run() -> run
com.google.analytics.tracking.android.GAThread -> com.google.analytics.tracking.android.GAThread:
    java.lang.String CLIENT_VERSION -> CLIENT_VERSION
    int MAX_SAMPLE_RATE -> MAX_SAMPLE_RATE
    int SAMPLE_RATE_MULTIPLIER -> SAMPLE_RATE_MULTIPLIER
    int SAMPLE_RATE_MODULO -> SAMPLE_RATE_MODULO
    java.lang.String API_VERSION -> API_VERSION
    java.util.concurrent.LinkedBlockingQueue queue -> queue
    boolean disabled -> disabled
    boolean closed -> closed
    boolean appOptOut -> appOptOut
    java.util.List commands -> commands
    com.google.analytics.tracking.android.MetaModel metaModel -> metaModel
    java.lang.String installCampaign -> installCampaign
    java.lang.String clientId -> clientId
    com.google.analytics.tracking.android.GAThread instance -> instance
    com.google.analytics.tracking.android.ServiceProxy proxy -> proxy
    android.content.Context ctx -> ctx
    com.google.analytics.tracking.android.GAThread getInstance(android.content.Context) -> getInstance
    void init() -> init
    void sendHit(java.util.Map) -> sendHit
    java.lang.String getHostUrl(java.util.Map) -> getHostUrl
    void fillExceptionParameters(java.util.Map) -> fillExceptionParameters
    boolean isSampledOut(java.util.Map) -> isSampledOut
    void fillAppParameters(java.util.Map) -> fillAppParameters
    void putIfAbsent(java.util.Map,java.lang.String,java.lang.String) -> putIfAbsent
    void fillCampaignParameters(java.util.Map) -> fillCampaignParameters
    void dispatch() -> dispatch
    void setAppOptOut(boolean) -> setAppOptOut
    void requestAppOptOut(com.google.analytics.tracking.android.Analytics$AppOptOutCallback) -> requestAppOptOut
    void requestClientId(com.google.analytics.tracking.android.AnalyticsThread$ClientIdCallback) -> requestClientId
    void queueToThread(java.lang.Runnable) -> queueToThread
    boolean loadAppOptOut() -> loadAppOptOut
    boolean storeClientId(java.lang.String) -> storeClientId
    java.lang.String generateClientId() -> generateClientId
    java.lang.String initializeClientId() -> initializeClientId
    java.lang.String getAndClearCampaign(android.content.Context) -> getAndClearCampaign
    java.lang.String printStackTrace(java.lang.Throwable) -> printStackTrace
    void run() -> run
    java.util.concurrent.LinkedBlockingQueue getQueue() -> getQueue
    java.lang.Thread getThread() -> getThread
    void close() -> close
    boolean isDisabled() -> isDisabled
    boolean access$000(com.google.analytics.tracking.android.GAThread) -> access$000
    boolean access$100(com.google.analytics.tracking.android.GAThread,java.util.Map) -> access$100
    java.lang.String access$200(com.google.analytics.tracking.android.GAThread) -> access$200
    java.lang.String access$300(com.google.analytics.tracking.android.GAThread) -> access$300
    java.lang.String access$302(com.google.analytics.tracking.android.GAThread,java.lang.String) -> access$302
    void access$400(com.google.analytics.tracking.android.GAThread,java.util.Map) -> access$400
    void access$500(com.google.analytics.tracking.android.GAThread,java.util.Map) -> access$500
    void access$600(com.google.analytics.tracking.android.GAThread,java.util.Map) -> access$600
    com.google.analytics.tracking.android.MetaModel access$700(com.google.analytics.tracking.android.GAThread) -> access$700
    java.lang.String access$800(com.google.analytics.tracking.android.GAThread,java.util.Map) -> access$800
    java.util.List access$900(com.google.analytics.tracking.android.GAThread) -> access$900
    com.google.analytics.tracking.android.ServiceProxy access$1000(com.google.analytics.tracking.android.GAThread) -> access$1000
    android.content.Context access$1100(com.google.analytics.tracking.android.GAThread) -> access$1100
    boolean access$002(com.google.analytics.tracking.android.GAThread,boolean) -> access$002
com.google.analytics.tracking.android.GAThread$1 -> com.google.analytics.tracking.android.GAThread$1:
    java.util.Map val$hitCopy -> val$hitCopy
    long val$hitTime -> val$hitTime
    com.google.analytics.tracking.android.GAThread this$0 -> this$0
    void run() -> run
com.google.analytics.tracking.android.GAThread$2 -> com.google.analytics.tracking.android.GAThread$2:
    com.google.analytics.tracking.android.GAThread this$0 -> this$0
    void run() -> run
com.google.analytics.tracking.android.GAThread$3 -> com.google.analytics.tracking.android.GAThread$3:
    boolean val$appOptOut -> val$appOptOut
    com.google.analytics.tracking.android.GAThread this$0 -> this$0
    void run() -> run
com.google.analytics.tracking.android.GAThread$4 -> com.google.analytics.tracking.android.GAThread$4:
    com.google.analytics.tracking.android.Analytics$AppOptOutCallback val$callback -> val$callback
    com.google.analytics.tracking.android.GAThread this$0 -> this$0
    void run() -> run
com.google.analytics.tracking.android.GAThread$5 -> com.google.analytics.tracking.android.GAThread$5:
    com.google.analytics.tracking.android.AnalyticsThread$ClientIdCallback val$callback -> val$callback
    com.google.analytics.tracking.android.GAThread this$0 -> this$0
    void run() -> run
com.google.analytics.tracking.android.GAUsage -> com.google.analytics.tracking.android.GAUsage:
    java.lang.String BASE_64_CHARS -> BASE_64_CHARS
    java.util.SortedSet usedFields -> usedFields
    java.lang.StringBuilder sequence -> sequence
    boolean disableUsage -> disableUsage
    com.google.analytics.tracking.android.GAUsage INSTANCE -> INSTANCE
    com.google.analytics.tracking.android.GAUsage getInstance() -> getInstance
    com.google.analytics.tracking.android.GAUsage getPrivateInstance() -> getPrivateInstance
    void setDisableUsage(boolean) -> setDisableUsage
    void setUsage(com.google.analytics.tracking.android.GAUsage$Field) -> setUsage
    java.lang.String getAndClearUsage() -> getAndClearUsage
    java.lang.String getAndClearSequence() -> getAndClearSequence
com.google.analytics.tracking.android.GAUsage$Field -> com.google.analytics.tracking.android.GAUsage$Field:
    com.google.analytics.tracking.android.GAUsage$Field TRACK_VIEW -> TRACK_VIEW
    com.google.analytics.tracking.android.GAUsage$Field TRACK_VIEW_WITH_APPSCREEN -> TRACK_VIEW_WITH_APPSCREEN
    com.google.analytics.tracking.android.GAUsage$Field TRACK_EVENT -> TRACK_EVENT
    com.google.analytics.tracking.android.GAUsage$Field TRACK_TRANSACTION -> TRACK_TRANSACTION
    com.google.analytics.tracking.android.GAUsage$Field TRACK_EXCEPTION_WITH_DESCRIPTION -> TRACK_EXCEPTION_WITH_DESCRIPTION
    com.google.analytics.tracking.android.GAUsage$Field TRACK_EXCEPTION_WITH_THROWABLE -> TRACK_EXCEPTION_WITH_THROWABLE
    com.google.analytics.tracking.android.GAUsage$Field BLANK_06 -> BLANK_06
    com.google.analytics.tracking.android.GAUsage$Field TRACK_TIMING -> TRACK_TIMING
    com.google.analytics.tracking.android.GAUsage$Field TRACK_SOCIAL -> TRACK_SOCIAL
    com.google.analytics.tracking.android.GAUsage$Field GET -> GET
    com.google.analytics.tracking.android.GAUsage$Field SET -> SET
    com.google.analytics.tracking.android.GAUsage$Field SEND -> SEND
    com.google.analytics.tracking.android.GAUsage$Field SET_START_SESSION -> SET_START_SESSION
    com.google.analytics.tracking.android.GAUsage$Field BLANK_13 -> BLANK_13
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_NAME -> SET_APP_NAME
    com.google.analytics.tracking.android.GAUsage$Field BLANK_15 -> BLANK_15
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_VERSION -> SET_APP_VERSION
    com.google.analytics.tracking.android.GAUsage$Field BLANK_17 -> BLANK_17
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_SCREEN -> SET_APP_SCREEN
    com.google.analytics.tracking.android.GAUsage$Field GET_TRACKING_ID -> GET_TRACKING_ID
    com.google.analytics.tracking.android.GAUsage$Field SET_ANONYMIZE_IP -> SET_ANONYMIZE_IP
    com.google.analytics.tracking.android.GAUsage$Field GET_ANONYMIZE_IP -> GET_ANONYMIZE_IP
    com.google.analytics.tracking.android.GAUsage$Field SET_SAMPLE_RATE -> SET_SAMPLE_RATE
    com.google.analytics.tracking.android.GAUsage$Field GET_SAMPLE_RATE -> GET_SAMPLE_RATE
    com.google.analytics.tracking.android.GAUsage$Field SET_USE_SECURE -> SET_USE_SECURE
    com.google.analytics.tracking.android.GAUsage$Field GET_USE_SECURE -> GET_USE_SECURE
    com.google.analytics.tracking.android.GAUsage$Field SET_REFERRER -> SET_REFERRER
    com.google.analytics.tracking.android.GAUsage$Field SET_CAMPAIGN -> SET_CAMPAIGN
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_ID -> SET_APP_ID
    com.google.analytics.tracking.android.GAUsage$Field GET_APP_ID -> GET_APP_ID
    com.google.analytics.tracking.android.GAUsage$Field SET_EXCEPTION_PARSER -> SET_EXCEPTION_PARSER
    com.google.analytics.tracking.android.GAUsage$Field GET_EXCEPTION_PARSER -> GET_EXCEPTION_PARSER
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_TRANSACTION -> CONSTRUCT_TRANSACTION
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_EXCEPTION -> CONSTRUCT_EXCEPTION
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_RAW_EXCEPTION -> CONSTRUCT_RAW_EXCEPTION
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_TIMING -> CONSTRUCT_TIMING
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_SOCIAL -> CONSTRUCT_SOCIAL
    com.google.analytics.tracking.android.GAUsage$Field SET_DEBUG -> SET_DEBUG
    com.google.analytics.tracking.android.GAUsage$Field GET_DEBUG -> GET_DEBUG
    com.google.analytics.tracking.android.GAUsage$Field GET_TRACKER -> GET_TRACKER
    com.google.analytics.tracking.android.GAUsage$Field GET_DEFAULT_TRACKER -> GET_DEFAULT_TRACKER
    com.google.analytics.tracking.android.GAUsage$Field SET_DEFAULT_TRACKER -> SET_DEFAULT_TRACKER
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_OPT_OUT -> SET_APP_OPT_OUT
    com.google.analytics.tracking.android.GAUsage$Field REQUEST_APP_OPT_OUT -> REQUEST_APP_OPT_OUT
    com.google.analytics.tracking.android.GAUsage$Field DISPATCH -> DISPATCH
    com.google.analytics.tracking.android.GAUsage$Field SET_DISPATCH_PERIOD -> SET_DISPATCH_PERIOD
    com.google.analytics.tracking.android.GAUsage$Field BLANK_48 -> BLANK_48
    com.google.analytics.tracking.android.GAUsage$Field REPORT_UNCAUGHT_EXCEPTIONS -> REPORT_UNCAUGHT_EXCEPTIONS
    com.google.analytics.tracking.android.GAUsage$Field SET_AUTO_ACTIVITY_TRACKING -> SET_AUTO_ACTIVITY_TRACKING
    com.google.analytics.tracking.android.GAUsage$Field SET_SESSION_TIMEOUT -> SET_SESSION_TIMEOUT
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_EVENT -> CONSTRUCT_EVENT
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_ITEM -> CONSTRUCT_ITEM
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_INSTALLER_ID -> SET_APP_INSTALLER_ID
    com.google.analytics.tracking.android.GAUsage$Field GET_APP_INSTALLER_ID -> GET_APP_INSTALLER_ID
    com.google.analytics.tracking.android.GAUsage$Field[] $VALUES -> $VALUES
    com.google.analytics.tracking.android.GAUsage$Field[] values() -> values
    com.google.analytics.tracking.android.GAUsage$Field valueOf(java.lang.String) -> valueOf
com.google.analytics.tracking.android.GoogleAnalytics -> com.google.analytics.tracking.android.GoogleAnalytics:
    boolean debug -> debug
    com.google.analytics.tracking.android.AnalyticsThread thread -> thread
    android.content.Context context -> context
    com.google.analytics.tracking.android.Tracker defaultTracker -> defaultTracker
    com.google.analytics.tracking.android.AdHitIdGenerator adHitIdGenerator -> adHitIdGenerator
    java.lang.String clientId -> clientId
    java.lang.Boolean appOptOut -> appOptOut
    java.util.Map trackers -> trackers
    java.lang.String lastTrackingId -> lastTrackingId
    com.google.analytics.tracking.android.GoogleAnalytics instance -> instance
    com.google.analytics.tracking.android.GoogleAnalytics getInstance(android.content.Context) -> getInstance
    com.google.analytics.tracking.android.GoogleAnalytics getInstance() -> getInstance
    com.google.analytics.tracking.android.GoogleAnalytics getNewInstance(android.content.Context,com.google.analytics.tracking.android.AnalyticsThread) -> getNewInstance
    void clearInstance() -> clearInstance
    void setDebug(boolean) -> setDebug
    boolean debugEnabled() -> debugEnabled
    com.google.analytics.tracking.android.Tracker getTracker(java.lang.String) -> getTracker
    com.google.analytics.tracking.android.Tracker getDefaultTracker() -> getDefaultTracker
    void setDefaultTracker(com.google.analytics.tracking.android.Tracker) -> setDefaultTracker
    void closeTracker(com.google.analytics.tracking.android.Tracker) -> closeTracker
    void sendHit(java.util.Map) -> sendHit
    void close() -> close
    java.lang.String getTrackingIdForAds() -> getTrackingIdForAds
    java.lang.String getClientIdForAds() -> getClientIdForAds
    void setAppOptOut(boolean) -> setAppOptOut
    java.lang.Boolean getAppOptOut() -> getAppOptOut
    void requestAppOptOut(com.google.analytics.tracking.android.Analytics$AppOptOutCallback) -> requestAppOptOut
    java.lang.Boolean access$002(com.google.analytics.tracking.android.GoogleAnalytics,java.lang.Boolean) -> access$002
    java.lang.String access$102(com.google.analytics.tracking.android.GoogleAnalytics,java.lang.String) -> access$102
com.google.analytics.tracking.android.GoogleAnalytics$1 -> com.google.analytics.tracking.android.GoogleAnalytics$1:
    com.google.analytics.tracking.android.GoogleAnalytics this$0 -> this$0
    void reportAppOptOut(boolean) -> reportAppOptOut
com.google.analytics.tracking.android.GoogleAnalytics$2 -> com.google.analytics.tracking.android.GoogleAnalytics$2:
    com.google.analytics.tracking.android.GoogleAnalytics this$0 -> this$0
    void reportClientId(java.lang.String) -> reportClientId
com.google.analytics.tracking.android.GoogleTracker -> com.google.analytics.tracking.android.GoogleTracker:
    java.text.DecimalFormat DF -> DF
    com.google.analytics.tracking.android.TrackerHandler handler -> handler
    com.google.analytics.tracking.android.GoogleTracker$SimpleModel model -> model
    com.google.analytics.tracking.android.ExceptionParser exceptionParser -> exceptionParser
    boolean trackerClosed -> trackerClosed
    boolean trackingStarted -> trackingStarted
    void assertTrackerOpen() -> assertTrackerOpen
    void send(java.lang.String,java.util.Map) -> send
    void internalSend(java.lang.String,java.util.Map) -> internalSend
    void setStartSession(boolean) -> setStartSession
    void setAppScreen(java.lang.String) -> setAppScreen
    void trackView() -> trackView
    void trackView(java.lang.String) -> trackView
    void trackEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.Long) -> trackEvent
    void trackTransaction(com.google.analytics.tracking.android.Transaction) -> trackTransaction
    void trackException(java.lang.String,boolean) -> trackException
    void trackException(java.lang.String,java.lang.Throwable,boolean) -> trackException
    void trackTiming(java.lang.String,long,java.lang.String,java.lang.String) -> trackTiming
    void trackSocial(java.lang.String,java.lang.String,java.lang.String) -> trackSocial
    java.util.Map constructEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.Long) -> constructEvent
    java.lang.String microsToCurrencyString(long) -> microsToCurrencyString
    java.util.Map constructTransaction(com.google.analytics.tracking.android.Transaction) -> constructTransaction
    java.util.Map constructItem(com.google.analytics.tracking.android.Item,com.google.analytics.tracking.android.Transaction) -> constructItem
    java.util.Map constructException(java.lang.String,boolean) -> constructException
    java.util.Map constructRawException(java.lang.String,java.lang.Throwable,boolean) -> constructRawException
    java.util.Map constructTiming(java.lang.String,long,java.lang.String,java.lang.String) -> constructTiming
    java.util.Map constructSocial(java.lang.String,java.lang.String,java.lang.String) -> constructSocial
    void close() -> close
    java.lang.String getTrackingId() -> getTrackingId
    void setAnonymizeIp(boolean) -> setAnonymizeIp
    void setSampleRate(double) -> setSampleRate
    boolean anonymizeIpEnabled() -> anonymizeIpEnabled
    double getSampleRate() -> getSampleRate
    void setReferrer(java.lang.String) -> setReferrer
    void setCampaign(java.lang.String) -> setCampaign
    java.lang.String get(java.lang.String) -> get
    void set(java.lang.String,java.lang.String) -> set
    void setAppName(java.lang.String) -> setAppName
    void setAppVersion(java.lang.String) -> setAppVersion
    void setAppId(java.lang.String) -> setAppId
    java.lang.String getAppId() -> getAppId
    void setAppInstallerId(java.lang.String) -> setAppInstallerId
    java.lang.String getAppInstallerId() -> getAppInstallerId
    void setExceptionParser(com.google.analytics.tracking.android.ExceptionParser) -> setExceptionParser
    com.google.analytics.tracking.android.ExceptionParser getExceptionParser() -> getExceptionParser
    void setUseSecure(boolean) -> setUseSecure
    boolean getUseSecure() -> getUseSecure
    void setCustomDimension(int,java.lang.String) -> setCustomDimension
    void setCustomMetric(int,java.lang.Long) -> setCustomMetric
    void setCustomDimensionsAndMetrics(java.util.Map,java.util.Map) -> setCustomDimensionsAndMetrics
com.google.analytics.tracking.android.GoogleTracker$1 -> com.google.analytics.tracking.android.GoogleTracker$1:
com.google.analytics.tracking.android.GoogleTracker$SimpleModel -> com.google.analytics.tracking.android.GoogleTracker$SimpleModel:
    java.util.Map temporaryMap -> temporaryMap
    java.util.Map permanentMap -> permanentMap
    void setForNextHit(java.lang.String,java.lang.String) -> setForNextHit
    void set(java.lang.String,java.lang.String) -> set
    void clearTemporaryValues() -> clearTemporaryValues
    java.lang.String get(java.lang.String) -> get
    void setAll(java.util.Map,java.lang.Boolean) -> setAll
    java.util.Map getKeysAndValues() -> getKeysAndValues
com.google.analytics.tracking.android.Hit -> com.google.analytics.tracking.android.Hit:
    java.lang.String hitString -> hitString
    long hitId -> hitId
    long hitTime -> hitTime
    java.lang.String hitUrl -> hitUrl
    java.lang.String getHitParams() -> getHitParams
    void setHitString(java.lang.String) -> setHitString
    long getHitId() -> getHitId
    long getHitTime() -> getHitTime
    java.lang.String getHitUrl() -> getHitUrl
    void setHitUrl(java.lang.String) -> setHitUrl
com.google.analytics.tracking.android.HitBuilder -> com.google.analytics.tracking.android.HitBuilder:
    java.util.Map generateHitParams(com.google.analytics.tracking.android.MetaModel,java.util.Map) -> generateHitParams
    java.lang.String postProcessHit(com.google.analytics.tracking.android.Hit,long) -> postProcessHit
    java.lang.String encode(java.lang.String) -> encode
com.google.analytics.tracking.android.HttpClientFactory -> com.google.analytics.tracking.android.HttpClientFactory:
    org.apache.http.client.HttpClient newInstance() -> newInstance
com.google.analytics.tracking.android.Item -> com.google.analytics.tracking.android.Item:
    java.lang.String productSKU -> productSKU
    java.lang.String productName -> productName
    java.lang.String productCategory -> productCategory
    long itemPriceInMicros -> itemPriceInMicros
    long itemQuantity -> itemQuantity
    java.lang.String getProductSKU() -> getProductSKU
    java.lang.String getProductName() -> getProductName
    java.lang.String getProductCategory() -> getProductCategory
    long getItemPriceInMicros() -> getItemPriceInMicros
    long getItemQuantity() -> getItemQuantity
com.google.analytics.tracking.android.Item$1 -> com.google.analytics.tracking.android.Item$1:
com.google.analytics.tracking.android.Item$Builder -> com.google.analytics.tracking.android.Item$Builder:
    java.lang.String productSKU -> productSKU
    long itemPriceInMicros -> itemPriceInMicros
    long itemQuantity -> itemQuantity
    java.lang.String productName -> productName
    java.lang.String productCategory -> productCategory
    com.google.analytics.tracking.android.Item$Builder setProductCategory(java.lang.String) -> setProductCategory
    com.google.analytics.tracking.android.Item build() -> build
    java.lang.String access$000(com.google.analytics.tracking.android.Item$Builder) -> access$000
    long access$100(com.google.analytics.tracking.android.Item$Builder) -> access$100
    long access$200(com.google.analytics.tracking.android.Item$Builder) -> access$200
    java.lang.String access$300(com.google.analytics.tracking.android.Item$Builder) -> access$300
    java.lang.String access$400(com.google.analytics.tracking.android.Item$Builder) -> access$400
com.google.analytics.tracking.android.Log -> com.google.analytics.tracking.android.Log:
    java.lang.String LOG_TAG -> LOG_TAG
    boolean debug -> debug
    void setDebug(boolean) -> setDebug
    boolean debugEnabled() -> debugEnabled
    int d(java.lang.String) -> d
    int dDebug(java.lang.String) -> dDebug
    int e(java.lang.String) -> e
    int eDebug(java.lang.String) -> eDebug
    int i(java.lang.String) -> i
    int iDebug(java.lang.String) -> iDebug
    int v(java.lang.String) -> v
    int vDebug(java.lang.String) -> vDebug
    int w(java.lang.String) -> w
    int wDebug(java.lang.String) -> wDebug
    java.lang.String formatMessage(java.lang.String) -> formatMessage
com.google.analytics.tracking.android.MetaModel -> com.google.analytics.tracking.android.MetaModel:
    java.util.Map metaInfos -> metaInfos
    com.google.analytics.tracking.android.MetaModel$MetaInfo getMetaInfo(java.lang.String) -> getMetaInfo
    void addField(java.lang.String,java.lang.String,java.lang.String,com.google.analytics.tracking.android.MetaModel$Formatter) -> addField
com.google.analytics.tracking.android.MetaModel$Formatter -> com.google.analytics.tracking.android.MetaModel$Formatter:
    java.lang.String format(java.lang.String) -> format
com.google.analytics.tracking.android.MetaModel$MetaInfo -> com.google.analytics.tracking.android.MetaModel$MetaInfo:
    java.lang.String urlParam -> urlParam
    java.lang.String defaultValue -> defaultValue
    com.google.analytics.tracking.android.MetaModel$Formatter formatter -> formatter
    java.lang.String getUrlParam(java.lang.String) -> getUrlParam
    java.lang.String getDefaultValue() -> getDefaultValue
    com.google.analytics.tracking.android.MetaModel$Formatter getFormatter() -> getFormatter
com.google.analytics.tracking.android.MetaModelInitializer -> com.google.analytics.tracking.android.MetaModelInitializer:
    com.google.analytics.tracking.android.MetaModel$Formatter BOOLEAN_FORMATTER -> BOOLEAN_FORMATTER
    com.google.analytics.tracking.android.MetaModel$Formatter UP_TO_TWO_DIGIT_FLOAT_FORMATTER -> UP_TO_TWO_DIGIT_FLOAT_FORMATTER
    void set(com.google.analytics.tracking.android.MetaModel) -> set
com.google.analytics.tracking.android.MetaModelInitializer$1 -> com.google.analytics.tracking.android.MetaModelInitializer$1:
    java.lang.String format(java.lang.String) -> format
com.google.analytics.tracking.android.MetaModelInitializer$2 -> com.google.analytics.tracking.android.MetaModelInitializer$2:
    java.text.DecimalFormat floatFormat -> floatFormat
    java.lang.String format(java.lang.String) -> format
com.google.analytics.tracking.android.ModelFields -> com.google.analytics.tracking.android.ModelFields:
    java.lang.String EVENT -> EVENT
    java.lang.String ITEM -> ITEM
    java.lang.String APP_VIEW -> APP_VIEW
    java.lang.String SOCIAL -> SOCIAL
    java.lang.String TIMING -> TIMING
    java.lang.String TRANSACTION -> TRANSACTION
    java.lang.String EXCEPTION -> EXCEPTION
    java.lang.String ANONYMIZE_IP -> ANONYMIZE_IP
    java.lang.String API_VERSION -> API_VERSION
    java.lang.String APP_NAME -> APP_NAME
    java.lang.String APP_ID -> APP_ID
    java.lang.String APP_INSTALLER_ID -> APP_INSTALLER_ID
    java.lang.String TRACKING_ID -> TRACKING_ID
    java.lang.String APP_VERSION -> APP_VERSION
    java.lang.String USAGE -> USAGE
    java.lang.String DESCRIPTION -> DESCRIPTION
    java.lang.String APP_SCREEN -> APP_SCREEN
    java.lang.String ENCODING -> ENCODING
    java.lang.String CLIENT_ID -> CLIENT_ID
    java.lang.String HIT_TYPE -> HIT_TYPE
    java.lang.String LANGUAGE -> LANGUAGE
    java.lang.String REFERRER -> REFERRER
    java.lang.String SAMPLE_RATE -> SAMPLE_RATE
    java.lang.String SCREEN_RESOLUTION -> SCREEN_RESOLUTION
    java.lang.String SESSION_CONTROL -> SESSION_CONTROL
    java.lang.String NON_INTERACTION -> NON_INTERACTION
    java.lang.String EVENT_CATEGORY -> EVENT_CATEGORY
    java.lang.String EVENT_ACTION -> EVENT_ACTION
    java.lang.String EVENT_LABEL -> EVENT_LABEL
    java.lang.String EVENT_VALUE -> EVENT_VALUE
    java.lang.String ITEM_CODE -> ITEM_CODE
    java.lang.String ITEM_NAME -> ITEM_NAME
    java.lang.String ITEM_PRICE -> ITEM_PRICE
    java.lang.String ITEM_QUANTITY -> ITEM_QUANTITY
    java.lang.String ITEM_CATEGORY -> ITEM_CATEGORY
    java.lang.String TRANSACTION_ID -> TRANSACTION_ID
    java.lang.String TRANSACTION_AFFILIATION -> TRANSACTION_AFFILIATION
    java.lang.String TRANSACTION_SHIPPING -> TRANSACTION_SHIPPING
    java.lang.String TRANSACTION_TAX -> TRANSACTION_TAX
    java.lang.String TRANSACTION_TOTAL -> TRANSACTION_TOTAL
    java.lang.String CURRENCY_CODE -> CURRENCY_CODE
    java.lang.String EX_DESCRIPTION -> EX_DESCRIPTION
    java.lang.String EX_FATAL -> EX_FATAL
    java.lang.String TIMING_VAR -> TIMING_VAR
    java.lang.String TIMING_VALUE -> TIMING_VALUE
    java.lang.String TIMING_CATEGORY -> TIMING_CATEGORY
    java.lang.String TIMING_LABEL -> TIMING_LABEL
    java.lang.String SOCIAL_NETWORK -> SOCIAL_NETWORK
    java.lang.String SOCIAL_ACTION -> SOCIAL_ACTION
    java.lang.String SOCIAL_TARGET -> SOCIAL_TARGET
    java.lang.String CAMPAIGN_NAME -> CAMPAIGN_NAME
    java.lang.String CAMPAIGN_SOURCE -> CAMPAIGN_SOURCE
    java.lang.String CAMPAIGN_MEDIUM -> CAMPAIGN_MEDIUM
    java.lang.String CAMPAIGN_KEYWORD -> CAMPAIGN_KEYWORD
    java.lang.String CAMPAIGN_CONTENT -> CAMPAIGN_CONTENT
    java.lang.String CAMPAIGN_ID -> CAMPAIGN_ID
    java.lang.String GCLID -> GCLID
    java.lang.String DCLID -> DCLID
    java.lang.String GMOB_T -> GMOB_T
    java.lang.String AD_SENSE_AD_MOB_HIT_ID -> AD_SENSE_AD_MOB_HIT_ID
    java.lang.String PAGE -> PAGE
    java.lang.String SCREEN_COLORS -> SCREEN_COLORS
    java.lang.String VIEWPORT_SIZE -> VIEWPORT_SIZE
    java.lang.String JAVA_ENABLED -> JAVA_ENABLED
    java.lang.String FLASH_VERSION -> FLASH_VERSION
    java.lang.String TITLE -> TITLE
    java.lang.String HIT_TIME -> HIT_TIME
    java.lang.String CAMPAIGN -> CAMPAIGN
    java.lang.String QUEUE_TIME -> QUEUE_TIME
    java.lang.String CACHE_BUSTER -> CACHE_BUSTER
    java.lang.String USE_SECURE -> USE_SECURE
    java.lang.String RAW_EXCEPTION -> RAW_EXCEPTION
    java.lang.String EXCEPTION_THREAD_NAME -> EXCEPTION_THREAD_NAME
    java.lang.String CUSTOM_DIMENSION -> CUSTOM_DIMENSION
    java.lang.String CUSTOM_METRIC -> CUSTOM_METRIC
    java.lang.String CONTENT_GROUPING -> CONTENT_GROUPING
com.google.analytics.tracking.android.NoopDispatcher -> com.google.analytics.tracking.android.NoopDispatcher:
    boolean okToDispatch() -> okToDispatch
    int dispatchHits(java.util.List) -> dispatchHits
com.google.analytics.tracking.android.ParameterLoader -> com.google.analytics.tracking.android.ParameterLoader:
    java.lang.String getString(java.lang.String) -> getString
    java.lang.Double getDoubleFromString(java.lang.String) -> getDoubleFromString
    boolean getBoolean(java.lang.String) -> getBoolean
    boolean isBooleanKeyPresent(java.lang.String) -> isBooleanKeyPresent
    int getInt(java.lang.String,int) -> getInt
com.google.analytics.tracking.android.ParameterLoaderImpl -> com.google.analytics.tracking.android.ParameterLoaderImpl:
    android.content.Context ctx -> ctx
    int getResourceIdForType(java.lang.String,java.lang.String) -> getResourceIdForType
    java.lang.String getString(java.lang.String) -> getString
    boolean getBoolean(java.lang.String) -> getBoolean
    int getInt(java.lang.String,int) -> getInt
    boolean isBooleanKeyPresent(java.lang.String) -> isBooleanKeyPresent
    java.lang.Double getDoubleFromString(java.lang.String) -> getDoubleFromString
com.google.analytics.tracking.android.PersistentAnalyticsStore -> com.google.analytics.tracking.android.PersistentAnalyticsStore:
    java.lang.String BACKEND_LIBRARY_VERSION -> BACKEND_LIBRARY_VERSION
    long TIME_PER_TOKEN_MILLIS -> TIME_PER_TOKEN_MILLIS
    long MAX_TOKENS -> MAX_TOKENS
    long tokens -> tokens
    long lastTrackTime -> lastTrackTime
    boolean throttlingEnabled -> throttlingEnabled
    java.lang.String HIT_ID -> HIT_ID
    java.lang.String HIT_STRING -> HIT_STRING
    java.lang.String HIT_TIME -> HIT_TIME
    java.lang.String HIT_URL -> HIT_URL
    java.lang.String HITS_TABLE -> HITS_TABLE
    java.lang.String CREATE_HITS_TABLE -> CREATE_HITS_TABLE
    java.lang.String DATABASE_FILENAME -> DATABASE_FILENAME
    com.google.analytics.tracking.android.PersistentAnalyticsStore$AnalyticsDatabaseHelper dbHelper -> dbHelper
    com.google.analytics.tracking.android.Dispatcher dispatcher -> dispatcher
    com.google.analytics.tracking.android.AnalyticsStoreStateListener listener -> listener
    android.content.Context context -> context
    java.lang.String databaseName -> databaseName
    long lastDeleteStaleHitsTime -> lastDeleteStaleHitsTime
    com.google.analytics.tracking.android.HttpClientFactory createDefaultHttpClientFactory() -> createDefaultHttpClientFactory
    void setDispatch(boolean) -> setDispatch
    void setDispatcher(com.google.analytics.tracking.android.Dispatcher) -> setDispatcher
    void clearHits() -> clearHits
    void putHit(java.util.Map,long,java.lang.String,java.util.Collection) -> putHit
    void fillVersionParametersIfNecessary(java.util.Map,java.util.Collection) -> fillVersionParametersIfNecessary
    void storeVersion(java.util.Map,java.lang.String,java.lang.String) -> storeVersion
    void removeOldHitIfFull() -> removeOldHitIfFull
    void writeHitToDatabase(java.util.Map,long,java.lang.String) -> writeHitToDatabase
    java.lang.String generateHitString(java.util.Map) -> generateHitString
    java.util.List peekHits(int) -> peekHits
    void setLastDeleteStaleHitsTime(long) -> setLastDeleteStaleHitsTime
    int deleteStaleHits() -> deleteStaleHits
    void deleteHits(java.util.Collection) -> deleteHits
    int getNumStoredHits() -> getNumStoredHits
    void dispatch() -> dispatch
    void close() -> close
    void setLastTrackTime(long) -> setLastTrackTime
    void setTokens(long) -> setTokens
    boolean tokensAvailable() -> tokensAvailable
    void setThrottlingEnabled(boolean) -> setThrottlingEnabled
    com.google.analytics.tracking.android.PersistentAnalyticsStore$AnalyticsDatabaseHelper getHelper() -> getHelper
    android.database.sqlite.SQLiteDatabase getWritableDatabase(java.lang.String) -> getWritableDatabase
    java.lang.String access$000() -> access$000
com.google.analytics.tracking.android.PersistentAnalyticsStore$1 -> com.google.analytics.tracking.android.PersistentAnalyticsStore$1:
    com.google.analytics.tracking.android.PersistentAnalyticsStore this$0 -> this$0
    org.apache.http.client.HttpClient newInstance() -> newInstance
com.google.analytics.tracking.android.PersistentAnalyticsStore$AnalyticsDatabaseHelper -> com.google.analytics.tracking.android.PersistentAnalyticsStore$AnalyticsDatabaseHelper:
    boolean badDatabase -> badDatabase
    com.google.analytics.tracking.android.PersistentAnalyticsStore this$0 -> this$0
    boolean isBadDatabase() -> isBadDatabase
    boolean tablePresent(java.lang.String,android.database.sqlite.SQLiteDatabase) -> tablePresent
    android.database.sqlite.SQLiteDatabase getWritableDatabase() -> getWritableDatabase
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.google.analytics.tracking.android.ServiceManager -> com.google.analytics.tracking.android.ServiceManager:
    void dispatch() -> dispatch
    void setDispatchPeriod(int) -> setDispatchPeriod
com.google.analytics.tracking.android.ServiceProxy -> com.google.analytics.tracking.android.ServiceProxy:
    void putHit(java.util.Map,long,java.lang.String,java.util.List) -> putHit
    void clearHits() -> clearHits
    void dispatch() -> dispatch
    void createService() -> createService
com.google.analytics.tracking.android.SimpleNetworkDispatcher -> com.google.analytics.tracking.android.SimpleNetworkDispatcher:
    java.lang.String USER_AGENT_TEMPLATE -> USER_AGENT_TEMPLATE
    java.lang.String userAgent -> userAgent
    com.google.analytics.tracking.android.HttpClientFactory httpClientFactory -> httpClientFactory
    android.content.Context ctx -> ctx
    boolean okToDispatch() -> okToDispatch
    int dispatchHits(java.util.List) -> dispatchHits
    org.apache.http.HttpEntityEnclosingRequest buildRequest(java.lang.String,java.lang.String) -> buildRequest
    void logDebugInformation(boolean,org.apache.http.HttpEntityEnclosingRequest) -> logDebugInformation
    java.lang.String createUserAgentString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> createUserAgentString
    java.net.URL getUrl(com.google.analytics.tracking.android.Hit) -> getUrl
com.google.analytics.tracking.android.StandardExceptionParser -> com.google.analytics.tracking.android.StandardExceptionParser:
    java.util.TreeSet includedPackages -> includedPackages
    void setIncludedPackages(android.content.Context,java.util.Collection) -> setIncludedPackages
    java.lang.Throwable getCause(java.lang.Throwable) -> getCause
    java.lang.StackTraceElement getBestStackTraceElement(java.lang.Throwable) -> getBestStackTraceElement
    java.lang.String getDescription(java.lang.Throwable,java.lang.StackTraceElement,java.lang.String) -> getDescription
    java.lang.String getDescription(java.lang.String,java.lang.Throwable) -> getDescription
com.google.analytics.tracking.android.TrackedActivity -> com.google.analytics.tracking.android.TrackedActivity:
    void onStart() -> onStart
    void onStop() -> onStop
com.google.analytics.tracking.android.TrackedExpandableListActivity -> com.google.analytics.tracking.android.TrackedExpandableListActivity:
    void onStart() -> onStart
    void onStop() -> onStop
com.google.analytics.tracking.android.TrackedListActivity -> com.google.analytics.tracking.android.TrackedListActivity:
    void onStart() -> onStart
    void onStop() -> onStop
com.google.analytics.tracking.android.TrackedPreferenceActivity -> com.google.analytics.tracking.android.TrackedPreferenceActivity:
    void onStart() -> onStart
    void onStop() -> onStop
com.google.analytics.tracking.android.TrackedTabActivity -> com.google.analytics.tracking.android.TrackedTabActivity:
    void onStart() -> onStart
    void onStop() -> onStop
com.google.analytics.tracking.android.Tracker -> com.google.analytics.tracking.android.Tracker:
    void setStartSession(boolean) -> setStartSession
    void setAppName(java.lang.String) -> setAppName
    void setAppVersion(java.lang.String) -> setAppVersion
    void setAppScreen(java.lang.String) -> setAppScreen
    void trackView() -> trackView
    void trackView(java.lang.String) -> trackView
    void trackEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.Long) -> trackEvent
    void trackTransaction(com.google.analytics.tracking.android.Transaction) -> trackTransaction
    void trackException(java.lang.String,boolean) -> trackException
    void trackException(java.lang.String,java.lang.Throwable,boolean) -> trackException
    void trackTiming(java.lang.String,long,java.lang.String,java.lang.String) -> trackTiming
    void trackSocial(java.lang.String,java.lang.String,java.lang.String) -> trackSocial
    void close() -> close
    void send(java.lang.String,java.util.Map) -> send
    java.lang.String get(java.lang.String) -> get
    void set(java.lang.String,java.lang.String) -> set
    java.lang.String getTrackingId() -> getTrackingId
    void setAnonymizeIp(boolean) -> setAnonymizeIp
    boolean anonymizeIpEnabled() -> anonymizeIpEnabled
    void setSampleRate(double) -> setSampleRate
    double getSampleRate() -> getSampleRate
    void setUseSecure(boolean) -> setUseSecure
    boolean getUseSecure() -> getUseSecure
    void setReferrer(java.lang.String) -> setReferrer
    void setCampaign(java.lang.String) -> setCampaign
    void setAppId(java.lang.String) -> setAppId
    java.lang.String getAppId() -> getAppId
    void setAppInstallerId(java.lang.String) -> setAppInstallerId
    java.lang.String getAppInstallerId() -> getAppInstallerId
    void setExceptionParser(com.google.analytics.tracking.android.ExceptionParser) -> setExceptionParser
    com.google.analytics.tracking.android.ExceptionParser getExceptionParser() -> getExceptionParser
    void setCustomDimension(int,java.lang.String) -> setCustomDimension
    void setCustomMetric(int,java.lang.Long) -> setCustomMetric
    void setCustomDimensionsAndMetrics(java.util.Map,java.util.Map) -> setCustomDimensionsAndMetrics
    java.util.Map constructEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.Long) -> constructEvent
    java.util.Map constructTransaction(com.google.analytics.tracking.android.Transaction) -> constructTransaction
    java.util.Map constructException(java.lang.String,boolean) -> constructException
    java.util.Map constructRawException(java.lang.String,java.lang.Throwable,boolean) -> constructRawException
    java.util.Map constructTiming(java.lang.String,long,java.lang.String,java.lang.String) -> constructTiming
    java.util.Map constructSocial(java.lang.String,java.lang.String,java.lang.String) -> constructSocial
com.google.analytics.tracking.android.TrackerHandler -> com.google.analytics.tracking.android.TrackerHandler:
    void closeTracker(com.google.analytics.tracking.android.Tracker) -> closeTracker
    void sendHit(java.util.Map) -> sendHit
com.google.analytics.tracking.android.Transaction -> com.google.analytics.tracking.android.Transaction:
    java.lang.String transactionId -> transactionId
    java.lang.String affiliation -> affiliation
    long totalCostInMicros -> totalCostInMicros
    long totalTaxInMicros -> totalTaxInMicros
    long shippingCostInMicros -> shippingCostInMicros
    java.lang.String currencyCode -> currencyCode
    java.util.Map items -> items
    java.lang.String getTransactionId() -> getTransactionId
    java.lang.String getAffiliation() -> getAffiliation
    long getTotalCostInMicros() -> getTotalCostInMicros
    long getTotalTaxInMicros() -> getTotalTaxInMicros
    long getShippingCostInMicros() -> getShippingCostInMicros
    java.lang.String getCurrencyCode() -> getCurrencyCode
    void addItem(com.google.analytics.tracking.android.Item) -> addItem
    java.util.List getItems() -> getItems
com.google.analytics.tracking.android.Transaction$1 -> com.google.analytics.tracking.android.Transaction$1:
com.google.analytics.tracking.android.Transaction$Builder -> com.google.analytics.tracking.android.Transaction$Builder:
    java.lang.String transactionId -> transactionId
    java.lang.String affiliation -> affiliation
    long totalCostInMicros -> totalCostInMicros
    long totalTaxInMicros -> totalTaxInMicros
    long shippingCostInMicros -> shippingCostInMicros
    java.lang.String currencyCode -> currencyCode
    com.google.analytics.tracking.android.Transaction$Builder setAffiliation(java.lang.String) -> setAffiliation
    com.google.analytics.tracking.android.Transaction$Builder setTotalTaxInMicros(long) -> setTotalTaxInMicros
    com.google.analytics.tracking.android.Transaction$Builder setShippingCostInMicros(long) -> setShippingCostInMicros
    com.google.analytics.tracking.android.Transaction$Builder setCurrencyCode(java.lang.String) -> setCurrencyCode
    com.google.analytics.tracking.android.Transaction build() -> build
    java.lang.String access$000(com.google.analytics.tracking.android.Transaction$Builder) -> access$000
    long access$100(com.google.analytics.tracking.android.Transaction$Builder) -> access$100
    java.lang.String access$200(com.google.analytics.tracking.android.Transaction$Builder) -> access$200
    long access$300(com.google.analytics.tracking.android.Transaction$Builder) -> access$300
    long access$400(com.google.analytics.tracking.android.Transaction$Builder) -> access$400
    java.lang.String access$500(com.google.analytics.tracking.android.Transaction$Builder) -> access$500
com.google.analytics.tracking.android.Utils -> com.google.analytics.tracking.android.Utils:
    char[] HEXBYTES -> HEXBYTES
    java.util.Map parseURLParameters(java.lang.String) -> parseURLParameters
    double safeParseDouble(java.lang.String) -> safeParseDouble
    long safeParseLong(java.lang.String) -> safeParseLong
    boolean safeParseBoolean(java.lang.String) -> safeParseBoolean
    java.lang.String filterCampaign(java.lang.String) -> filterCampaign
    java.lang.String getLanguage(java.util.Locale) -> getLanguage
    java.lang.String hexEncode(byte[]) -> hexEncode
    int fromHexDigit(char) -> fromHexDigit
    byte[] hexDecode(java.lang.String) -> hexDecode
    java.lang.String getSlottedModelField(java.lang.String,int) -> getSlottedModelField
com.google.android.gms.analytics.internal.Command -> com.google.android.gms.analytics.internal.Command:
    java.lang.String APPEND_VERSION -> APPEND_VERSION
    java.lang.String APPEND_QUEUE_TIME -> APPEND_QUEUE_TIME
    java.lang.String APPEND_CACHE_BUSTER -> APPEND_CACHE_BUSTER
    java.lang.String id -> id
    java.lang.String urlParam -> urlParam
    java.lang.String value -> value
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getId() -> getId
    java.lang.String getUrlParam() -> getUrlParam
    java.lang.String getValue() -> getValue
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void readFromParcel(android.os.Parcel) -> readFromParcel
com.google.android.gms.analytics.internal.Command$1 -> com.google.android.gms.analytics.internal.Command$1:
    com.google.android.gms.analytics.internal.Command createFromParcel(android.os.Parcel) -> createFromParcel
    com.google.android.gms.analytics.internal.Command[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.analytics.internal.IAnalyticsService -> com.google.android.gms.analytics.internal.IAnalyticsService:
    void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> sendHit
    void clearHits() -> clearHits
com.google.android.gms.analytics.internal.IAnalyticsService$Stub -> com.google.android.gms.analytics.internal.IAnalyticsService$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_sendHit -> TRANSACTION_sendHit
    int TRANSACTION_clearHits -> TRANSACTION_clearHits
    com.google.android.gms.analytics.internal.IAnalyticsService asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.analytics.internal.IAnalyticsService$Stub$Proxy -> com.google.android.gms.analytics.internal.IAnalyticsService$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> sendHit
    void clearHits() -> clearHits
com.google.api.client.http.AbstractHttpContent -> com.google.api.client.http.AbstractHttpContent:
    long computedLength -> computedLength
    java.lang.String getEncoding() -> getEncoding
    long getLength() -> getLength
    long computeLength() -> computeLength
    boolean retrySupported() -> retrySupported
com.google.api.client.http.AbstractInputStreamContent -> com.google.api.client.http.AbstractInputStreamContent:
    int BUFFER_SIZE -> BUFFER_SIZE
    java.lang.String type -> type
    java.lang.String encoding -> encoding
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getEncoding() -> getEncoding
    java.lang.String getType() -> getType
    com.google.api.client.http.AbstractInputStreamContent setEncoding(java.lang.String) -> setEncoding
    com.google.api.client.http.AbstractInputStreamContent setType(java.lang.String) -> setType
    void copy(java.io.InputStream,java.io.OutputStream) -> copy
com.google.api.client.http.ByteArrayContent -> com.google.api.client.http.ByteArrayContent:
    byte[] byteArray -> byteArray
    byte[] EMPTY_ARRAY -> EMPTY_ARRAY
    com.google.api.client.http.ByteArrayContent fromString(java.lang.String,java.lang.String) -> fromString
    long getLength() -> getLength
    boolean retrySupported() -> retrySupported
    java.io.InputStream getInputStream() -> getInputStream
    com.google.api.client.http.ByteArrayContent setEncoding(java.lang.String) -> setEncoding
    com.google.api.client.http.ByteArrayContent setType(java.lang.String) -> setType
    com.google.api.client.http.AbstractInputStreamContent setType(java.lang.String) -> setType
    com.google.api.client.http.AbstractInputStreamContent setEncoding(java.lang.String) -> setEncoding
com.google.api.client.http.ByteCountingOutputStream -> com.google.api.client.http.ByteCountingOutputStream:
    long count -> count
    void write(byte[],int,int) -> write
    void write(int) -> write
com.google.api.client.http.FileContent -> com.google.api.client.http.FileContent:
    java.io.File file -> file
    long getLength() -> getLength
    boolean retrySupported() -> retrySupported
    java.io.InputStream getInputStream() -> getInputStream
    java.io.File getFile() -> getFile
    com.google.api.client.http.FileContent setEncoding(java.lang.String) -> setEncoding
    com.google.api.client.http.FileContent setType(java.lang.String) -> setType
    com.google.api.client.http.AbstractInputStreamContent setType(java.lang.String) -> setType
    com.google.api.client.http.AbstractInputStreamContent setEncoding(java.lang.String) -> setEncoding
com.google.api.client.http.GZipContent -> com.google.api.client.http.GZipContent:
    com.google.api.client.http.HttpContent httpContent -> httpContent
    java.lang.String contentType -> contentType
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getEncoding() -> getEncoding
    java.lang.String getType() -> getType
    boolean retrySupported() -> retrySupported
com.google.api.client.http.GenericUrl -> com.google.api.client.http.GenericUrl:
    com.google.api.client.util.escape.Escaper URI_FRAGMENT_ESCAPER -> URI_FRAGMENT_ESCAPER
    java.lang.String scheme -> scheme
    java.lang.String host -> host
    int port -> port
    java.util.List pathParts -> pathParts
    java.lang.String fragment -> fragment
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.api.client.http.GenericUrl clone() -> clone
    java.lang.String getScheme() -> getScheme
    void setScheme(java.lang.String) -> setScheme
    java.lang.String getHost() -> getHost
    void setHost(java.lang.String) -> setHost
    int getPort() -> getPort
    void setPort(int) -> setPort
    java.util.List getPathParts() -> getPathParts
    void setPathParts(java.util.List) -> setPathParts
    java.lang.String getFragment() -> getFragment
    void setFragment(java.lang.String) -> setFragment
    java.lang.String build() -> build
    java.lang.Object getFirst(java.lang.String) -> getFirst
    java.util.Collection getAll(java.lang.String) -> getAll
    java.lang.String getRawPath() -> getRawPath
    void setRawPath(java.lang.String) -> setRawPath
    void appendRawPath(java.lang.String) -> appendRawPath
    java.util.List toPathParts(java.lang.String) -> toPathParts
    void appendRawPathFromParts(java.lang.StringBuilder) -> appendRawPathFromParts
    boolean appendParam(boolean,java.lang.StringBuilder,java.lang.String,java.lang.Object) -> appendParam
    com.google.api.client.util.GenericData clone() -> clone
    java.lang.Object clone() -> clone
com.google.api.client.http.HttpContent -> com.google.api.client.http.HttpContent:
    long getLength() -> getLength
    java.lang.String getEncoding() -> getEncoding
    java.lang.String getType() -> getType
    void writeTo(java.io.OutputStream) -> writeTo
    boolean retrySupported() -> retrySupported
com.google.api.client.http.HttpExecuteInterceptor -> com.google.api.client.http.HttpExecuteInterceptor:
    void intercept(com.google.api.client.http.HttpRequest) -> intercept
com.google.api.client.http.HttpHeaders -> com.google.api.client.http.HttpHeaders:
    java.lang.String accept -> accept
    java.lang.String acceptEncoding -> acceptEncoding
    java.lang.String authorization -> authorization
    java.lang.String cacheControl -> cacheControl
    java.lang.String contentEncoding -> contentEncoding
    java.lang.String contentLength -> contentLength
    java.lang.String contentMD5 -> contentMD5
    java.lang.String contentRange -> contentRange
    java.lang.String contentType -> contentType
    java.lang.String date -> date
    java.lang.String etag -> etag
    java.lang.String expires -> expires
    java.lang.String ifModifiedSince -> ifModifiedSince
    java.lang.String ifMatch -> ifMatch
    java.lang.String ifNoneMatch -> ifNoneMatch
    java.lang.String ifUnmodifiedSince -> ifUnmodifiedSince
    java.lang.String lastModified -> lastModified
    java.lang.String location -> location
    java.lang.String mimeVersion -> mimeVersion
    java.lang.String range -> range
    java.lang.String retryAfter -> retryAfter
    java.lang.String userAgent -> userAgent
    java.lang.String authenticate -> authenticate
    com.google.api.client.http.HttpHeaders clone() -> clone
    java.lang.String getAccept() -> getAccept
    void setAccept(java.lang.String) -> setAccept
    java.lang.String getAcceptEncoding() -> getAcceptEncoding
    void setAcceptEncoding(java.lang.String) -> setAcceptEncoding
    java.lang.String getAuthorization() -> getAuthorization
    void setAuthorization(java.lang.String) -> setAuthorization
    java.lang.String getCacheControl() -> getCacheControl
    void setCacheControl(java.lang.String) -> setCacheControl
    java.lang.String getContentEncoding() -> getContentEncoding
    void setContentEncoding(java.lang.String) -> setContentEncoding
    java.lang.String getContentLength() -> getContentLength
    void setContentLength(java.lang.String) -> setContentLength
    java.lang.String getContentMD5() -> getContentMD5
    void setContentMD5(java.lang.String) -> setContentMD5
    java.lang.String getContentRange() -> getContentRange
    void setContentRange(java.lang.String) -> setContentRange
    java.lang.String getContentType() -> getContentType
    void setContentType(java.lang.String) -> setContentType
    java.lang.String getDate() -> getDate
    void setDate(java.lang.String) -> setDate
    java.lang.String getETag() -> getETag
    void setETag(java.lang.String) -> setETag
    java.lang.String getExpires() -> getExpires
    void setExpires(java.lang.String) -> setExpires
    java.lang.String getIfModifiedSince() -> getIfModifiedSince
    void setIfModifiedSince(java.lang.String) -> setIfModifiedSince
    java.lang.String getIfMatch() -> getIfMatch
    void setIfMatch(java.lang.String) -> setIfMatch
    java.lang.String getIfNoneMatch() -> getIfNoneMatch
    void setIfNoneMatch(java.lang.String) -> setIfNoneMatch
    java.lang.String getIfUnmodifiedSince() -> getIfUnmodifiedSince
    void setIfUnmodifiedSince(java.lang.String) -> setIfUnmodifiedSince
    java.lang.String getLastModified() -> getLastModified
    void setLastModified(java.lang.String) -> setLastModified
    java.lang.String getLocation() -> getLocation
    void setLocation(java.lang.String) -> setLocation
    java.lang.String getMimeVersion() -> getMimeVersion
    void setMimeVersion(java.lang.String) -> setMimeVersion
    java.lang.String getRange() -> getRange
    void setRange(java.lang.String) -> setRange
    java.lang.String getRetryAfter() -> getRetryAfter
    void setRetryAfter(java.lang.String) -> setRetryAfter
    java.lang.String getUserAgent() -> getUserAgent
    void setUserAgent(java.lang.String) -> setUserAgent
    java.lang.String getAuthenticate() -> getAuthenticate
    void setAuthenticate(java.lang.String) -> setAuthenticate
    void setBasicAuthentication(java.lang.String,java.lang.String) -> setBasicAuthentication
    java.util.HashMap getFieldNameMap(java.lang.Class) -> getFieldNameMap
    com.google.api.client.util.GenericData clone() -> clone
    java.lang.Object clone() -> clone
com.google.api.client.http.HttpMethod -> com.google.api.client.http.HttpMethod:
    com.google.api.client.http.HttpMethod DELETE -> DELETE
    com.google.api.client.http.HttpMethod GET -> GET
    com.google.api.client.http.HttpMethod HEAD -> HEAD
    com.google.api.client.http.HttpMethod PATCH -> PATCH
    com.google.api.client.http.HttpMethod PUT -> PUT
    com.google.api.client.http.HttpMethod POST -> POST
    com.google.api.client.http.HttpMethod[] $VALUES -> $VALUES
    com.google.api.client.http.HttpMethod[] values() -> values
    com.google.api.client.http.HttpMethod valueOf(java.lang.String) -> valueOf
com.google.api.client.http.HttpParser -> com.google.api.client.http.HttpParser:
    java.lang.String getContentType() -> getContentType
    java.lang.Object parse(com.google.api.client.http.HttpResponse,java.lang.Class) -> parse
com.google.api.client.http.HttpRequest -> com.google.api.client.http.HttpRequest:
    java.lang.String USER_AGENT_SUFFIX -> USER_AGENT_SUFFIX
    com.google.api.client.http.HttpExecuteInterceptor interceptor -> interceptor
    com.google.api.client.http.HttpHeaders headers -> headers
    com.google.api.client.http.HttpHeaders responseHeaders -> responseHeaders
    int numRetries -> numRetries
    boolean disableContentLogging -> disableContentLogging
    com.google.api.client.http.HttpContent content -> content
    com.google.api.client.http.HttpTransport transport -> transport
    com.google.api.client.http.HttpMethod method -> method
    com.google.api.client.http.GenericUrl url -> url
    int connectTimeout -> connectTimeout
    int readTimeout -> readTimeout
    com.google.api.client.http.HttpUnsuccessfulResponseHandler unsuccessfulResponseHandler -> unsuccessfulResponseHandler
    java.util.Map contentTypeToParserMap -> contentTypeToParserMap
    boolean enableGZipContent -> enableGZipContent
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.http.HttpMethod getMethod() -> getMethod
    com.google.api.client.http.HttpRequest setMethod(com.google.api.client.http.HttpMethod) -> setMethod
    com.google.api.client.http.GenericUrl getUrl() -> getUrl
    com.google.api.client.http.HttpRequest setUrl(com.google.api.client.http.GenericUrl) -> setUrl
    com.google.api.client.http.HttpContent getContent() -> getContent
    com.google.api.client.http.HttpRequest setContent(com.google.api.client.http.HttpContent) -> setContent
    boolean getEnableGZipContent() -> getEnableGZipContent
    com.google.api.client.http.HttpRequest setEnableGZipContent(boolean) -> setEnableGZipContent
    boolean getDisableContentLogging() -> getDisableContentLogging
    com.google.api.client.http.HttpRequest setDisableContentLogging(boolean) -> setDisableContentLogging
    int getConnectTimeout() -> getConnectTimeout
    com.google.api.client.http.HttpRequest setConnectTimeout(int) -> setConnectTimeout
    int getReadTimeout() -> getReadTimeout
    com.google.api.client.http.HttpRequest setReadTimeout(int) -> setReadTimeout
    com.google.api.client.http.HttpHeaders getHeaders() -> getHeaders
    com.google.api.client.http.HttpRequest setHeaders(com.google.api.client.http.HttpHeaders) -> setHeaders
    com.google.api.client.http.HttpHeaders getResponseHeaders() -> getResponseHeaders
    com.google.api.client.http.HttpRequest setResponseHeaders(com.google.api.client.http.HttpHeaders) -> setResponseHeaders
    com.google.api.client.http.HttpExecuteInterceptor getInterceptor() -> getInterceptor
    com.google.api.client.http.HttpRequest setInterceptor(com.google.api.client.http.HttpExecuteInterceptor) -> setInterceptor
    com.google.api.client.http.HttpUnsuccessfulResponseHandler getUnsuccessfulResponseHandler() -> getUnsuccessfulResponseHandler
    com.google.api.client.http.HttpRequest setUnsuccessfulResponseHandler(com.google.api.client.http.HttpUnsuccessfulResponseHandler) -> setUnsuccessfulResponseHandler
    int getNumberOfRetries() -> getNumberOfRetries
    com.google.api.client.http.HttpRequest setNumberOfRetries(int) -> setNumberOfRetries
    void addParser(com.google.api.client.http.HttpParser) -> addParser
    com.google.api.client.http.HttpParser getParser(java.lang.String) -> getParser
    com.google.api.client.http.HttpResponse execute() -> execute
    void addHeader(java.util.logging.Logger,java.lang.StringBuilder,com.google.api.client.http.LowLevelHttpRequest,java.lang.String,java.lang.Object) -> addHeader
    java.lang.String normalizeMediaType(java.lang.String) -> normalizeMediaType
com.google.api.client.http.HttpRequest$1 -> com.google.api.client.http.HttpRequest$1:
    int[] $SwitchMap$com$google$api$client$http$HttpMethod -> $SwitchMap$com$google$api$client$http$HttpMethod
com.google.api.client.http.HttpRequestFactory -> com.google.api.client.http.HttpRequestFactory:
    com.google.api.client.http.HttpTransport transport -> transport
    com.google.api.client.http.HttpRequestInitializer initializer -> initializer
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.http.HttpRequestInitializer getInitializer() -> getInitializer
    com.google.api.client.http.HttpRequest buildRequest(com.google.api.client.http.HttpMethod,com.google.api.client.http.GenericUrl,com.google.api.client.http.HttpContent) -> buildRequest
    com.google.api.client.http.HttpRequest buildDeleteRequest(com.google.api.client.http.GenericUrl) -> buildDeleteRequest
    com.google.api.client.http.HttpRequest buildGetRequest(com.google.api.client.http.GenericUrl) -> buildGetRequest
    com.google.api.client.http.HttpRequest buildPostRequest(com.google.api.client.http.GenericUrl,com.google.api.client.http.HttpContent) -> buildPostRequest
    com.google.api.client.http.HttpRequest buildPutRequest(com.google.api.client.http.GenericUrl,com.google.api.client.http.HttpContent) -> buildPutRequest
    com.google.api.client.http.HttpRequest buildPatchRequest(com.google.api.client.http.GenericUrl,com.google.api.client.http.HttpContent) -> buildPatchRequest
    com.google.api.client.http.HttpRequest buildHeadRequest(com.google.api.client.http.GenericUrl) -> buildHeadRequest
com.google.api.client.http.HttpRequestInitializer -> com.google.api.client.http.HttpRequestInitializer:
    void initialize(com.google.api.client.http.HttpRequest) -> initialize
com.google.api.client.http.HttpResponse -> com.google.api.client.http.HttpResponse:
    java.io.InputStream content -> content
    java.lang.String contentEncoding -> contentEncoding
    long contentLength -> contentLength
    java.lang.String contentType -> contentType
    com.google.api.client.http.HttpHeaders headers -> headers
    boolean isSuccessStatusCode -> isSuccessStatusCode
    com.google.api.client.http.LowLevelHttpResponse response -> response
    int statusCode -> statusCode
    java.lang.String statusMessage -> statusMessage
    com.google.api.client.http.HttpTransport transport -> transport
    com.google.api.client.http.HttpRequest request -> request
    boolean disableContentLogging -> disableContentLogging
    boolean getDisableContentLogging() -> getDisableContentLogging
    com.google.api.client.http.HttpResponse setDisableContentLogging(boolean) -> setDisableContentLogging
    java.lang.String getContentEncoding() -> getContentEncoding
    java.lang.String getContentType() -> getContentType
    com.google.api.client.http.HttpHeaders getHeaders() -> getHeaders
    boolean isSuccessStatusCode() -> isSuccessStatusCode
    int getStatusCode() -> getStatusCode
    java.lang.String getStatusMessage() -> getStatusMessage
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.http.HttpRequest getRequest() -> getRequest
    java.lang.Object parseValue(java.lang.reflect.Type,java.util.List,java.lang.String) -> parseValue
    java.io.InputStream getContent() -> getContent
    void ignore() -> ignore
    void disconnect() -> disconnect
    com.google.api.client.http.HttpParser getParser() -> getParser
    java.lang.Object parseAs(java.lang.Class) -> parseAs
    java.lang.String parseAsString() -> parseAsString
    boolean isSuccessStatusCode(int) -> isSuccessStatusCode
com.google.api.client.http.HttpResponseException -> com.google.api.client.http.HttpResponseException:
    long serialVersionUID -> serialVersionUID
    com.google.api.client.http.HttpResponse response -> response
    com.google.api.client.http.HttpResponse getResponse() -> getResponse
    java.lang.String computeMessage(com.google.api.client.http.HttpResponse) -> computeMessage
com.google.api.client.http.HttpTransport -> com.google.api.client.http.HttpTransport:
    java.util.logging.Logger LOGGER -> LOGGER
    com.google.api.client.http.HttpRequestFactory createRequestFactory() -> createRequestFactory
    com.google.api.client.http.HttpRequestFactory createRequestFactory(com.google.api.client.http.HttpRequestInitializer) -> createRequestFactory
    com.google.api.client.http.HttpRequest buildRequest() -> buildRequest
    boolean supportsHead() -> supportsHead
    boolean supportsPatch() -> supportsPatch
    com.google.api.client.http.LowLevelHttpRequest buildDeleteRequest(java.lang.String) -> buildDeleteRequest
    com.google.api.client.http.LowLevelHttpRequest buildGetRequest(java.lang.String) -> buildGetRequest
    com.google.api.client.http.LowLevelHttpRequest buildHeadRequest(java.lang.String) -> buildHeadRequest
    com.google.api.client.http.LowLevelHttpRequest buildPatchRequest(java.lang.String) -> buildPatchRequest
    com.google.api.client.http.LowLevelHttpRequest buildPostRequest(java.lang.String) -> buildPostRequest
    com.google.api.client.http.LowLevelHttpRequest buildPutRequest(java.lang.String) -> buildPutRequest
    void shutdown() -> shutdown
com.google.api.client.http.HttpUnsuccessfulResponseHandler -> com.google.api.client.http.HttpUnsuccessfulResponseHandler:
    boolean handleResponse(com.google.api.client.http.HttpRequest,com.google.api.client.http.HttpResponse,boolean) -> handleResponse
com.google.api.client.http.InputStreamContent -> com.google.api.client.http.InputStreamContent:
    long length -> length
    java.io.InputStream inputStream -> inputStream
    long getLength() -> getLength
    boolean retrySupported() -> retrySupported
    java.io.InputStream getInputStream() -> getInputStream
    com.google.api.client.http.InputStreamContent setEncoding(java.lang.String) -> setEncoding
    com.google.api.client.http.InputStreamContent setType(java.lang.String) -> setType
    void setLength(long) -> setLength
    com.google.api.client.http.AbstractInputStreamContent setType(java.lang.String) -> setType
    com.google.api.client.http.AbstractInputStreamContent setEncoding(java.lang.String) -> setEncoding
com.google.api.client.http.LogContent -> com.google.api.client.http.LogContent:
    com.google.api.client.http.HttpContent httpContent -> httpContent
    java.lang.String contentType -> contentType
    java.lang.String contentEncoding -> contentEncoding
    long contentLength -> contentLength
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getEncoding() -> getEncoding
    long getLength() -> getLength
    java.lang.String getType() -> getType
    boolean isTextBasedContentType(java.lang.String) -> isTextBasedContentType
    boolean retrySupported() -> retrySupported
com.google.api.client.http.LowLevelHttpRequest -> com.google.api.client.http.LowLevelHttpRequest:
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setContent(com.google.api.client.http.HttpContent) -> setContent
    void setTimeout(int,int) -> setTimeout
    com.google.api.client.http.LowLevelHttpResponse execute() -> execute
com.google.api.client.http.LowLevelHttpResponse -> com.google.api.client.http.LowLevelHttpResponse:
    java.io.InputStream getContent() -> getContent
    java.lang.String getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    java.lang.String getContentType() -> getContentType
    java.lang.String getStatusLine() -> getStatusLine
    int getStatusCode() -> getStatusCode
    java.lang.String getReasonPhrase() -> getReasonPhrase
    int getHeaderCount() -> getHeaderCount
    java.lang.String getHeaderName(int) -> getHeaderName
    java.lang.String getHeaderValue(int) -> getHeaderValue
    void disconnect() -> disconnect
com.google.api.client.http.MultipartRelatedContent -> com.google.api.client.http.MultipartRelatedContent:
    java.lang.String boundary -> boundary
    java.util.Collection parts -> parts
    byte[] CR_LF -> CR_LF
    byte[] CONTENT_TYPE -> CONTENT_TYPE
    byte[] CONTENT_TRANSFER_ENCODING -> CONTENT_TRANSFER_ENCODING
    byte[] TWO_DASHES -> TWO_DASHES
    void forRequest(com.google.api.client.http.HttpRequest) -> forRequest
    com.google.api.client.http.MultipartRelatedContent forRequest(com.google.api.client.http.HttpRequest,com.google.api.client.http.HttpContent[]) -> forRequest
    void writeTo(java.io.OutputStream) -> writeTo
    long computeLength() -> computeLength
    java.lang.String getType() -> getType
    boolean retrySupported() -> retrySupported
    java.lang.String getBoundary() -> getBoundary
    com.google.api.client.http.MultipartRelatedContent setBoundary(java.lang.String) -> setBoundary
    java.util.Collection getParts() -> getParts
com.google.api.client.http.UrlEncodedContent -> com.google.api.client.http.UrlEncodedContent:
    java.lang.String contentType -> contentType
    java.lang.Object data -> data
    java.lang.String getType() -> getType
    void writeTo(java.io.OutputStream) -> writeTo
    com.google.api.client.http.UrlEncodedContent setType(java.lang.String) -> setType
    java.lang.Object getData() -> getData
    com.google.api.client.http.UrlEncodedContent setData(java.lang.Object) -> setData
    boolean appendParam(boolean,java.io.Writer,java.lang.String,java.lang.Object) -> appendParam
com.google.api.client.http.UrlEncodedParser -> com.google.api.client.http.UrlEncodedParser:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    boolean disableContentLogging -> disableContentLogging
    java.lang.String contentType -> contentType
    java.lang.String getContentType() -> getContentType
    java.lang.Object parse(com.google.api.client.http.HttpResponse,java.lang.Class) -> parse
    boolean getDisableContentLogging() -> getDisableContentLogging
    void parse(java.lang.String,java.lang.Object) -> parse
    java.lang.Object parseValue(java.lang.reflect.Type,java.util.List,java.lang.String) -> parseValue
    com.google.api.client.http.UrlEncodedParser$Builder builder() -> builder
com.google.api.client.http.UrlEncodedParser$Builder -> com.google.api.client.http.UrlEncodedParser$Builder:
    boolean disableContentLogging -> disableContentLogging
    java.lang.String contentType -> contentType
    com.google.api.client.http.UrlEncodedParser build() -> build
    java.lang.String getContentType() -> getContentType
    com.google.api.client.http.UrlEncodedParser$Builder setContentType(java.lang.String) -> setContentType
    boolean getDisableContentLogging() -> getDisableContentLogging
    com.google.api.client.http.UrlEncodedParser$Builder setDisableContentLogging(boolean) -> setDisableContentLogging
com.google.api.client.http.apache.ApacheHttpRequest -> com.google.api.client.http.apache.ApacheHttpRequest:
    org.apache.http.client.HttpClient httpClient -> httpClient
    org.apache.http.client.methods.HttpRequestBase request -> request
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setTimeout(int,int) -> setTimeout
    com.google.api.client.http.LowLevelHttpResponse execute() -> execute
    void setContent(com.google.api.client.http.HttpContent) -> setContent
com.google.api.client.http.apache.ApacheHttpResponse -> com.google.api.client.http.apache.ApacheHttpResponse:
    org.apache.http.client.methods.HttpRequestBase request -> request
    org.apache.http.HttpResponse response -> response
    org.apache.http.Header[] allHeaders -> allHeaders
    int getStatusCode() -> getStatusCode
    java.io.InputStream getContent() -> getContent
    java.lang.String getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    java.lang.String getContentType() -> getContentType
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.String getStatusLine() -> getStatusLine
    java.lang.String getHeaderValue(java.lang.String) -> getHeaderValue
    int getHeaderCount() -> getHeaderCount
    java.lang.String getHeaderName(int) -> getHeaderName
    java.lang.String getHeaderValue(int) -> getHeaderValue
    void disconnect() -> disconnect
com.google.api.client.http.apache.ApacheHttpTransport -> com.google.api.client.http.apache.ApacheHttpTransport:
    org.apache.http.client.HttpClient httpClient -> httpClient
    boolean supportsHead() -> supportsHead
    boolean supportsPatch() -> supportsPatch
    com.google.api.client.http.apache.ApacheHttpRequest buildDeleteRequest(java.lang.String) -> buildDeleteRequest
    com.google.api.client.http.apache.ApacheHttpRequest buildGetRequest(java.lang.String) -> buildGetRequest
    com.google.api.client.http.apache.ApacheHttpRequest buildHeadRequest(java.lang.String) -> buildHeadRequest
    com.google.api.client.http.apache.ApacheHttpRequest buildPatchRequest(java.lang.String) -> buildPatchRequest
    com.google.api.client.http.apache.ApacheHttpRequest buildPostRequest(java.lang.String) -> buildPostRequest
    com.google.api.client.http.apache.ApacheHttpRequest buildPutRequest(java.lang.String) -> buildPutRequest
    void shutdown() -> shutdown
    org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    com.google.api.client.http.LowLevelHttpRequest buildPutRequest(java.lang.String) -> buildPutRequest
    com.google.api.client.http.LowLevelHttpRequest buildPostRequest(java.lang.String) -> buildPostRequest
    com.google.api.client.http.LowLevelHttpRequest buildPatchRequest(java.lang.String) -> buildPatchRequest
    com.google.api.client.http.LowLevelHttpRequest buildHeadRequest(java.lang.String) -> buildHeadRequest
    com.google.api.client.http.LowLevelHttpRequest buildGetRequest(java.lang.String) -> buildGetRequest
    com.google.api.client.http.LowLevelHttpRequest buildDeleteRequest(java.lang.String) -> buildDeleteRequest
com.google.api.client.http.apache.ContentEntity -> com.google.api.client.http.apache.ContentEntity:
    long contentLength -> contentLength
    com.google.api.client.http.HttpContent content -> content
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
    boolean isRepeatable() -> isRepeatable
    boolean isStreaming() -> isStreaming
    void writeTo(java.io.OutputStream) -> writeTo
com.google.api.client.http.apache.HttpPatch -> com.google.api.client.http.apache.HttpPatch:
    java.lang.String getMethod() -> getMethod
com.google.api.client.http.javanet.NetHttpRequest -> com.google.api.client.http.javanet.NetHttpRequest:
    java.net.HttpURLConnection connection -> connection
    com.google.api.client.http.HttpContent content -> content
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setTimeout(int,int) -> setTimeout
    com.google.api.client.http.LowLevelHttpResponse execute() -> execute
    void setContent(com.google.api.client.http.HttpContent) -> setContent
com.google.api.client.http.javanet.NetHttpResponse -> com.google.api.client.http.javanet.NetHttpResponse:
    java.net.HttpURLConnection connection -> connection
    int responseCode -> responseCode
    java.lang.String responseMessage -> responseMessage
    java.util.ArrayList headerNames -> headerNames
    java.util.ArrayList headerValues -> headerValues
    int getStatusCode() -> getStatusCode
    java.io.InputStream getContent() -> getContent
    java.lang.String getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    java.lang.String getContentType() -> getContentType
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.String getStatusLine() -> getStatusLine
    int getHeaderCount() -> getHeaderCount
    java.lang.String getHeaderName(int) -> getHeaderName
    java.lang.String getHeaderValue(int) -> getHeaderValue
    void disconnect() -> disconnect
com.google.api.client.http.javanet.NetHttpTransport -> com.google.api.client.http.javanet.NetHttpTransport:
    boolean supportsHead() -> supportsHead
    com.google.api.client.http.javanet.NetHttpRequest buildDeleteRequest(java.lang.String) -> buildDeleteRequest
    com.google.api.client.http.javanet.NetHttpRequest buildGetRequest(java.lang.String) -> buildGetRequest
    com.google.api.client.http.javanet.NetHttpRequest buildHeadRequest(java.lang.String) -> buildHeadRequest
    com.google.api.client.http.javanet.NetHttpRequest buildPostRequest(java.lang.String) -> buildPostRequest
    com.google.api.client.http.javanet.NetHttpRequest buildPutRequest(java.lang.String) -> buildPutRequest
    com.google.api.client.http.LowLevelHttpRequest buildPutRequest(java.lang.String) -> buildPutRequest
    com.google.api.client.http.LowLevelHttpRequest buildPostRequest(java.lang.String) -> buildPostRequest
    com.google.api.client.http.LowLevelHttpRequest buildHeadRequest(java.lang.String) -> buildHeadRequest
    com.google.api.client.http.LowLevelHttpRequest buildGetRequest(java.lang.String) -> buildGetRequest
    com.google.api.client.http.LowLevelHttpRequest buildDeleteRequest(java.lang.String) -> buildDeleteRequest
com.google.api.client.http.json.JsonHttpContent -> com.google.api.client.http.json.JsonHttpContent:
    java.lang.String contentType -> contentType
    java.lang.Object data -> data
    com.google.api.client.json.JsonFactory jsonFactory -> jsonFactory
    java.lang.String getType() -> getType
    void writeTo(java.io.OutputStream) -> writeTo
    com.google.api.client.http.json.JsonHttpContent setType(java.lang.String) -> setType
    java.lang.Object getData() -> getData
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
com.google.api.client.http.json.JsonHttpParser -> com.google.api.client.http.json.JsonHttpParser:
    java.lang.String contentType -> contentType
    com.google.api.client.json.JsonFactory jsonFactory -> jsonFactory
    java.lang.String getContentType() -> getContentType
    java.lang.Object parse(com.google.api.client.http.HttpResponse,java.lang.Class) -> parse
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    com.google.api.client.json.JsonParser parserForResponse(com.google.api.client.json.JsonFactory,com.google.api.client.http.HttpResponse) -> parserForResponse
    com.google.api.client.http.json.JsonHttpParser$Builder builder(com.google.api.client.json.JsonFactory) -> builder
com.google.api.client.http.json.JsonHttpParser$Builder -> com.google.api.client.http.json.JsonHttpParser$Builder:
    java.lang.String contentType -> contentType
    com.google.api.client.json.JsonFactory jsonFactory -> jsonFactory
    com.google.api.client.http.json.JsonHttpParser build() -> build
    java.lang.String getContentType() -> getContentType
    com.google.api.client.http.json.JsonHttpParser$Builder setContentType(java.lang.String) -> setContentType
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
com.google.api.client.http.protobuf.ProtoHttpContent -> com.google.api.client.http.protobuf.ProtoHttpContent:
    com.google.protobuf.MessageLite message -> message
    java.lang.String type -> type
    long getLength() -> getLength
    java.lang.String getType() -> getType
    void writeTo(java.io.OutputStream) -> writeTo
    com.google.api.client.http.protobuf.ProtoHttpContent setType(java.lang.String) -> setType
    com.google.protobuf.MessageLite getMessage() -> getMessage
com.google.api.client.http.protobuf.ProtoHttpParser -> com.google.api.client.http.protobuf.ProtoHttpParser:
    java.lang.String contentType -> contentType
    java.lang.String getContentType() -> getContentType
    java.lang.Object parse(com.google.api.client.http.HttpResponse,java.lang.Class) -> parse
    com.google.api.client.http.protobuf.ProtoHttpParser$Builder builder() -> builder
com.google.api.client.http.protobuf.ProtoHttpParser$Builder -> com.google.api.client.http.protobuf.ProtoHttpParser$Builder:
    java.lang.String contentType -> contentType
    com.google.api.client.http.protobuf.ProtoHttpParser build() -> build
    java.lang.String getContentType() -> getContentType
    com.google.api.client.http.protobuf.ProtoHttpParser$Builder setContentType(java.lang.String) -> setContentType
com.google.api.client.http.xml.AbstractXmlHttpContent -> com.google.api.client.http.xml.AbstractXmlHttpContent:
    java.lang.String contentType -> contentType
    com.google.api.client.xml.XmlNamespaceDictionary namespaceDictionary -> namespaceDictionary
    java.lang.String getType() -> getType
    void writeTo(java.io.OutputStream) -> writeTo
    com.google.api.client.http.xml.AbstractXmlHttpContent setType(java.lang.String) -> setType
    com.google.api.client.xml.XmlNamespaceDictionary getNamespaceDictionary() -> getNamespaceDictionary
    void writeTo(org.xmlpull.v1.XmlSerializer) -> writeTo
com.google.api.client.http.xml.XmlHttpContent -> com.google.api.client.http.xml.XmlHttpContent:
    java.lang.String elementName -> elementName
    java.lang.Object data -> data
    com.google.api.client.http.xml.XmlHttpContent setType(java.lang.String) -> setType
    void writeTo(org.xmlpull.v1.XmlSerializer) -> writeTo
    java.lang.String getElementName() -> getElementName
    java.lang.Object getData() -> getData
    com.google.api.client.http.xml.AbstractXmlHttpContent setType(java.lang.String) -> setType
com.google.api.client.http.xml.XmlHttpParser -> com.google.api.client.http.xml.XmlHttpParser:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String contentType -> contentType
    com.google.api.client.xml.XmlNamespaceDictionary namespaceDictionary -> namespaceDictionary
    java.lang.String getContentType() -> getContentType
    java.lang.Object parse(com.google.api.client.http.HttpResponse,java.lang.Class) -> parse
    com.google.api.client.xml.XmlNamespaceDictionary getNamespaceDictionary() -> getNamespaceDictionary
    com.google.api.client.http.xml.XmlHttpParser$Builder builder(com.google.api.client.xml.XmlNamespaceDictionary) -> builder
com.google.api.client.http.xml.XmlHttpParser$Builder -> com.google.api.client.http.xml.XmlHttpParser$Builder:
    java.lang.String contentType -> contentType
    com.google.api.client.xml.XmlNamespaceDictionary namespaceDictionary -> namespaceDictionary
    com.google.api.client.http.xml.XmlHttpParser build() -> build
    java.lang.String getContentType() -> getContentType
    com.google.api.client.http.xml.XmlHttpParser$Builder setContentType(java.lang.String) -> setContentType
    com.google.api.client.xml.XmlNamespaceDictionary getNamespaceDictionary() -> getNamespaceDictionary
com.google.api.client.http.xml.atom.AtomContent -> com.google.api.client.http.xml.atom.AtomContent:
    boolean isEntry -> isEntry
    java.lang.Object entry -> entry
    com.google.api.client.http.xml.atom.AtomContent forEntry(com.google.api.client.xml.XmlNamespaceDictionary,java.lang.Object) -> forEntry
    com.google.api.client.http.xml.atom.AtomContent forFeed(com.google.api.client.xml.XmlNamespaceDictionary,java.lang.Object) -> forFeed
    com.google.api.client.http.xml.atom.AtomContent setType(java.lang.String) -> setType
    void writeTo(org.xmlpull.v1.XmlSerializer) -> writeTo
    boolean isEntry() -> isEntry
    java.lang.Object getData() -> getData
    com.google.api.client.http.xml.AbstractXmlHttpContent setType(java.lang.String) -> setType
com.google.api.client.http.xml.atom.AtomFeedContent -> com.google.api.client.http.xml.atom.AtomFeedContent:
    java.lang.Object feed -> feed
    void writeTo(org.xmlpull.v1.XmlSerializer) -> writeTo
com.google.api.client.http.xml.atom.AtomFeedParser -> com.google.api.client.http.xml.atom.AtomFeedParser:
    java.lang.Class entryClass -> entryClass
    java.lang.Object parseNextEntry() -> parseNextEntry
    java.lang.Object parseEntryInternal() -> parseEntryInternal
    java.lang.Class getEntryClass() -> getEntryClass
    com.google.api.client.http.xml.atom.AtomFeedParser create(com.google.api.client.http.HttpResponse,com.google.api.client.xml.XmlNamespaceDictionary,java.lang.Class,java.lang.Class) -> create
com.google.api.client.http.xml.atom.AtomParser -> com.google.api.client.http.xml.atom.AtomParser:
com.google.api.client.json.CustomizeJsonParser -> com.google.api.client.json.CustomizeJsonParser:
    boolean stopAt(java.lang.Object,java.lang.String) -> stopAt
    void handleUnrecognizedKey(java.lang.Object,java.lang.String) -> handleUnrecognizedKey
    java.util.Collection newInstanceForArray(java.lang.Object,java.lang.reflect.Field) -> newInstanceForArray
    java.lang.Object newInstanceForObject(java.lang.Object,java.lang.Class) -> newInstanceForObject
com.google.api.client.json.GenericJson -> com.google.api.client.json.GenericJson:
    com.google.api.client.json.JsonFactory jsonFactory -> jsonFactory
    java.lang.String toString() -> toString
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    java.lang.Object clone() -> clone
com.google.api.client.json.Json -> com.google.api.client.json.Json:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
com.google.api.client.json.JsonEncoding -> com.google.api.client.json.JsonEncoding:
    com.google.api.client.json.JsonEncoding UTF8 -> UTF8
    com.google.api.client.json.JsonEncoding[] $VALUES -> $VALUES
    com.google.api.client.json.JsonEncoding[] values() -> values
    com.google.api.client.json.JsonEncoding valueOf(java.lang.String) -> valueOf
com.google.api.client.json.JsonFactory -> com.google.api.client.json.JsonFactory:
    com.google.api.client.json.JsonParser createJsonParser(java.io.InputStream) -> createJsonParser
    com.google.api.client.json.JsonParser createJsonParser(java.lang.String) -> createJsonParser
    com.google.api.client.json.JsonParser createJsonParser(java.io.Reader) -> createJsonParser
    com.google.api.client.json.JsonGenerator createJsonGenerator(java.io.OutputStream,com.google.api.client.json.JsonEncoding) -> createJsonGenerator
    com.google.api.client.json.JsonGenerator createJsonGenerator(java.io.Writer) -> createJsonGenerator
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String,java.lang.Class) -> fromString
com.google.api.client.json.JsonGenerator -> com.google.api.client.json.JsonGenerator:
    com.google.api.client.json.JsonFactory getFactory() -> getFactory
    void flush() -> flush
    void close() -> close
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeNull() -> writeNull
    void writeString(java.lang.String) -> writeString
    void writeBoolean(boolean) -> writeBoolean
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void serialize(java.lang.Object) -> serialize
com.google.api.client.json.JsonParser -> com.google.api.client.json.JsonParser:
    com.google.api.client.json.JsonFactory getFactory() -> getFactory
    void close() -> close
    com.google.api.client.json.JsonToken nextToken() -> nextToken
    com.google.api.client.json.JsonToken getCurrentToken() -> getCurrentToken
    java.lang.String getCurrentName() -> getCurrentName
    com.google.api.client.json.JsonParser skipChildren() -> skipChildren
    java.lang.String getText() -> getText
    byte getByteValue() -> getByteValue
    short getShortValue() -> getShortValue
    int getIntValue() -> getIntValue
    float getFloatValue() -> getFloatValue
    long getLongValue() -> getLongValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.lang.Object parseAndClose(java.lang.Class,com.google.api.client.json.CustomizeJsonParser) -> parseAndClose
    void skipToKey(java.lang.String) -> skipToKey
    com.google.api.client.json.JsonToken startParsing() -> startParsing
    com.google.api.client.json.JsonToken startParsingObjectOrArray() -> startParsingObjectOrArray
    void parseAndClose(java.lang.Object,com.google.api.client.json.CustomizeJsonParser) -> parseAndClose
    java.lang.Object parse(java.lang.Class,com.google.api.client.json.CustomizeJsonParser) -> parse
    void parse(java.lang.Object,com.google.api.client.json.CustomizeJsonParser) -> parse
    void parse(java.util.ArrayList,java.lang.Object,com.google.api.client.json.CustomizeJsonParser) -> parse
    java.util.Collection parseArrayAndClose(java.lang.Class,java.lang.Class,com.google.api.client.json.CustomizeJsonParser) -> parseArrayAndClose
    void parseArrayAndClose(java.util.Collection,java.lang.Class,com.google.api.client.json.CustomizeJsonParser) -> parseArrayAndClose
    java.util.Collection parseArray(java.lang.Class,java.lang.Class,com.google.api.client.json.CustomizeJsonParser) -> parseArray
    void parseArray(java.util.Collection,java.lang.Class,com.google.api.client.json.CustomizeJsonParser) -> parseArray
    void parseArray(java.util.Collection,java.lang.reflect.Type,java.util.ArrayList,com.google.api.client.json.CustomizeJsonParser) -> parseArray
    void parseMap(java.util.Map,java.lang.reflect.Type,java.util.ArrayList,com.google.api.client.json.CustomizeJsonParser) -> parseMap
    java.lang.Object parseValue(java.lang.reflect.Field,java.lang.reflect.Type,java.util.ArrayList,java.lang.Object,com.google.api.client.json.CustomizeJsonParser) -> parseValue
com.google.api.client.json.JsonParser$1 -> com.google.api.client.json.JsonParser$1:
    int[] $SwitchMap$com$google$api$client$json$JsonToken -> $SwitchMap$com$google$api$client$json$JsonToken
com.google.api.client.json.JsonString -> com.google.api.client.json.JsonString:
com.google.api.client.json.JsonToken -> com.google.api.client.json.JsonToken:
    com.google.api.client.json.JsonToken START_ARRAY -> START_ARRAY
    com.google.api.client.json.JsonToken END_ARRAY -> END_ARRAY
    com.google.api.client.json.JsonToken START_OBJECT -> START_OBJECT
    com.google.api.client.json.JsonToken END_OBJECT -> END_OBJECT
    com.google.api.client.json.JsonToken FIELD_NAME -> FIELD_NAME
    com.google.api.client.json.JsonToken VALUE_STRING -> VALUE_STRING
    com.google.api.client.json.JsonToken VALUE_NUMBER_INT -> VALUE_NUMBER_INT
    com.google.api.client.json.JsonToken VALUE_NUMBER_FLOAT -> VALUE_NUMBER_FLOAT
    com.google.api.client.json.JsonToken VALUE_TRUE -> VALUE_TRUE
    com.google.api.client.json.JsonToken VALUE_FALSE -> VALUE_FALSE
    com.google.api.client.json.JsonToken VALUE_NULL -> VALUE_NULL
    com.google.api.client.json.JsonToken NOT_AVAILABLE -> NOT_AVAILABLE
    com.google.api.client.json.JsonToken[] $VALUES -> $VALUES
    com.google.api.client.json.JsonToken[] values() -> values
    com.google.api.client.json.JsonToken valueOf(java.lang.String) -> valueOf
com.google.api.client.json.gson.GsonFactory -> com.google.api.client.json.gson.GsonFactory:
    com.google.api.client.json.JsonParser createJsonParser(java.io.InputStream) -> createJsonParser
    com.google.api.client.json.JsonParser createJsonParser(java.lang.String) -> createJsonParser
    com.google.api.client.json.JsonParser createJsonParser(java.io.Reader) -> createJsonParser
    com.google.api.client.json.JsonGenerator createJsonGenerator(java.io.OutputStream,com.google.api.client.json.JsonEncoding) -> createJsonGenerator
    com.google.api.client.json.JsonGenerator createJsonGenerator(java.io.Writer) -> createJsonGenerator
com.google.api.client.json.gson.GsonGenerator -> com.google.api.client.json.gson.GsonGenerator:
    com.google.gson.stream.JsonWriter writer -> writer
    com.google.api.client.json.gson.GsonFactory factory -> factory
    void flush() -> flush
    void close() -> close
    com.google.api.client.json.JsonFactory getFactory() -> getFactory
    void writeBoolean(boolean) -> writeBoolean
    void writeEndArray() -> writeEndArray
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeNull() -> writeNull
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeStartArray() -> writeStartArray
    void writeStartObject() -> writeStartObject
    void writeString(java.lang.String) -> writeString
com.google.api.client.json.gson.GsonGenerator$StringNumber -> com.google.api.client.json.gson.GsonGenerator$StringNumber:
    long serialVersionUID -> serialVersionUID
    java.lang.String encodedValue -> encodedValue
    double doubleValue() -> doubleValue
    float floatValue() -> floatValue
    int intValue() -> intValue
    long longValue() -> longValue
    java.lang.String toString() -> toString
com.google.api.client.json.gson.GsonParser -> com.google.api.client.json.gson.GsonParser:
    com.google.gson.stream.JsonReader reader -> reader
    com.google.api.client.json.gson.GsonFactory factory -> factory
    java.util.List currentNameStack -> currentNameStack
    com.google.api.client.json.JsonToken currentToken -> currentToken
    java.lang.String currentText -> currentText
    void close() -> close
    java.lang.String getCurrentName() -> getCurrentName
    com.google.api.client.json.JsonToken getCurrentToken() -> getCurrentToken
    com.google.api.client.json.JsonFactory getFactory() -> getFactory
    byte getByteValue() -> getByteValue
    short getShortValue() -> getShortValue
    int getIntValue() -> getIntValue
    float getFloatValue() -> getFloatValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    double getDoubleValue() -> getDoubleValue
    long getLongValue() -> getLongValue
    void checkNumber() -> checkNumber
    java.lang.String getText() -> getText
    com.google.api.client.json.JsonToken nextToken() -> nextToken
    com.google.api.client.json.JsonParser skipChildren() -> skipChildren
com.google.api.client.json.gson.GsonParser$1 -> com.google.api.client.json.gson.GsonParser$1:
    int[] $SwitchMap$com$google$api$client$json$JsonToken -> $SwitchMap$com$google$api$client$json$JsonToken
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> $SwitchMap$com$google$gson$stream$JsonToken
com.google.api.client.json.jackson.JacksonFactory -> com.google.api.client.json.jackson.JacksonFactory:
    org.codehaus.jackson.JsonFactory factory -> factory
    com.google.api.client.json.JsonGenerator createJsonGenerator(java.io.OutputStream,com.google.api.client.json.JsonEncoding) -> createJsonGenerator
    com.google.api.client.json.JsonGenerator createJsonGenerator(java.io.Writer) -> createJsonGenerator
    com.google.api.client.json.JsonParser createJsonParser(java.io.Reader) -> createJsonParser
    com.google.api.client.json.JsonParser createJsonParser(java.io.InputStream) -> createJsonParser
    com.google.api.client.json.JsonParser createJsonParser(java.lang.String) -> createJsonParser
    com.google.api.client.json.JsonToken convert(org.codehaus.jackson.JsonToken) -> convert
com.google.api.client.json.jackson.JacksonFactory$1 -> com.google.api.client.json.jackson.JacksonFactory$1:
    int[] $SwitchMap$org$codehaus$jackson$JsonToken -> $SwitchMap$org$codehaus$jackson$JsonToken
com.google.api.client.json.jackson.JacksonGenerator -> com.google.api.client.json.jackson.JacksonGenerator:
    org.codehaus.jackson.JsonGenerator generator -> generator
    com.google.api.client.json.jackson.JacksonFactory factory -> factory
    com.google.api.client.json.jackson.JacksonFactory getFactory() -> getFactory
    void flush() -> flush
    void close() -> close
    void writeBoolean(boolean) -> writeBoolean
    void writeEndArray() -> writeEndArray
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeNull() -> writeNull
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeStartArray() -> writeStartArray
    void writeStartObject() -> writeStartObject
    void writeString(java.lang.String) -> writeString
    com.google.api.client.json.JsonFactory getFactory() -> getFactory
com.google.api.client.json.jackson.JacksonParser -> com.google.api.client.json.jackson.JacksonParser:
    org.codehaus.jackson.JsonParser parser -> parser
    com.google.api.client.json.jackson.JacksonFactory factory -> factory
    com.google.api.client.json.jackson.JacksonFactory getFactory() -> getFactory
    void close() -> close
    com.google.api.client.json.JsonToken nextToken() -> nextToken
    java.lang.String getCurrentName() -> getCurrentName
    com.google.api.client.json.JsonToken getCurrentToken() -> getCurrentToken
    com.google.api.client.json.JsonParser skipChildren() -> skipChildren
    java.lang.String getText() -> getText
    byte getByteValue() -> getByteValue
    float getFloatValue() -> getFloatValue
    int getIntValue() -> getIntValue
    short getShortValue() -> getShortValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    double getDoubleValue() -> getDoubleValue
    long getLongValue() -> getLongValue
    com.google.api.client.json.JsonFactory getFactory() -> getFactory
com.google.api.client.json.rpc2.JsonRpcRequest -> com.google.api.client.json.rpc2.JsonRpcRequest:
    java.lang.String jsonrpc -> jsonrpc
    java.lang.Object id -> id
    java.lang.String method -> method
    java.lang.Object params -> params
    java.lang.String getVersion() -> getVersion
    java.lang.Object getId() -> getId
    void setId(java.lang.Object) -> setId
    java.lang.String getMethod() -> getMethod
    void setMethod(java.lang.String) -> setMethod
    java.lang.Object getParameters() -> getParameters
    void setParameters(java.lang.Object) -> setParameters
com.google.api.client.protobuf.ProtocolBuffers -> com.google.api.client.protobuf.ProtocolBuffers:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String ALT_CONTENT_TYPE -> ALT_CONTENT_TYPE
    com.google.protobuf.MessageLite parseAndClose(java.io.InputStream,java.lang.Class) -> parseAndClose
com.google.api.client.testing.http.MockHttpContent -> com.google.api.client.testing.http.MockHttpContent:
    java.lang.String encoding -> encoding
    long length -> length
    java.lang.String type -> type
    byte[] content -> content
    java.lang.String getEncoding() -> getEncoding
    long getLength() -> getLength
    java.lang.String getType() -> getType
    void writeTo(java.io.OutputStream) -> writeTo
    boolean retrySupported() -> retrySupported
    byte[] getContent() -> getContent
    com.google.api.client.testing.http.MockHttpContent setContent(byte[]) -> setContent
    com.google.api.client.testing.http.MockHttpContent setEncoding(java.lang.String) -> setEncoding
    com.google.api.client.testing.http.MockHttpContent setLength(long) -> setLength
    com.google.api.client.testing.http.MockHttpContent setType(java.lang.String) -> setType
com.google.api.client.testing.http.MockHttpTransport -> com.google.api.client.testing.http.MockHttpTransport:
    java.util.Set DEFAULT_SUPPORTED_OPTIONAL_METHODS -> DEFAULT_SUPPORTED_OPTIONAL_METHODS
    java.util.EnumSet supportedOptionalMethods -> supportedOptionalMethods
    java.util.Set getSupportedOptionalMethods() -> getSupportedOptionalMethods
    void setSupportedOptionalMethods(java.util.EnumSet) -> setSupportedOptionalMethods
    com.google.api.client.http.LowLevelHttpRequest buildDeleteRequest(java.lang.String) -> buildDeleteRequest
    com.google.api.client.http.LowLevelHttpRequest buildGetRequest(java.lang.String) -> buildGetRequest
    com.google.api.client.http.LowLevelHttpRequest buildHeadRequest(java.lang.String) -> buildHeadRequest
    com.google.api.client.http.LowLevelHttpRequest buildPatchRequest(java.lang.String) -> buildPatchRequest
    com.google.api.client.http.LowLevelHttpRequest buildPostRequest(java.lang.String) -> buildPostRequest
    com.google.api.client.http.LowLevelHttpRequest buildPutRequest(java.lang.String) -> buildPutRequest
    boolean supportsHead() -> supportsHead
    boolean supportsPatch() -> supportsPatch
    com.google.api.client.testing.http.MockHttpTransport$Builder builder() -> builder
com.google.api.client.testing.http.MockHttpTransport$Builder -> com.google.api.client.testing.http.MockHttpTransport$Builder:
    java.util.Set supportedOptionalMethods -> supportedOptionalMethods
    com.google.api.client.testing.http.MockHttpTransport build() -> build
    java.util.Set getSupportedOptionalMethods() -> getSupportedOptionalMethods
    com.google.api.client.testing.http.MockHttpTransport$Builder setSupportedOptionalMethods(java.util.Set) -> setSupportedOptionalMethods
com.google.api.client.testing.http.MockLowLevelHttpRequest -> com.google.api.client.testing.http.MockLowLevelHttpRequest:
    java.lang.String url -> url
    com.google.common.collect.ListMultimap headers -> headers
    com.google.api.client.http.HttpContent content -> content
    java.util.Map headersMap -> headersMap
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    com.google.api.client.http.LowLevelHttpResponse execute() -> execute
    void setContent(com.google.api.client.http.HttpContent) -> setContent
    java.lang.String getUrl() -> getUrl
    java.util.Map getHeaders() -> getHeaders
    com.google.api.client.testing.http.MockLowLevelHttpRequest setUrl(java.lang.String) -> setUrl
    com.google.api.client.http.HttpContent getContent() -> getContent
com.google.api.client.testing.http.MockLowLevelHttpResponse -> com.google.api.client.testing.http.MockLowLevelHttpResponse:
    java.io.InputStream content -> content
    java.lang.String contentType -> contentType
    int statusCode -> statusCode
    java.util.ArrayList headerNames -> headerNames
    java.util.ArrayList headerValues -> headerValues
    java.lang.String contentEncoding -> contentEncoding
    long contentLength -> contentLength
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    com.google.api.client.testing.http.MockLowLevelHttpResponse setContent(java.lang.String) -> setContent
    java.io.InputStream getContent() -> getContent
    java.lang.String getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    java.lang.String getContentType() -> getContentType
    int getHeaderCount() -> getHeaderCount
    java.lang.String getHeaderName(int) -> getHeaderName
    java.lang.String getHeaderValue(int) -> getHeaderValue
    java.lang.String getReasonPhrase() -> getReasonPhrase
    int getStatusCode() -> getStatusCode
    java.lang.String getStatusLine() -> getStatusLine
    java.util.List getHeaderNames() -> getHeaderNames
    com.google.api.client.testing.http.MockLowLevelHttpResponse setHeaderNames(java.util.ArrayList) -> setHeaderNames
    java.util.List getHeaderValues() -> getHeaderValues
    com.google.api.client.testing.http.MockLowLevelHttpResponse setHeaderValues(java.util.ArrayList) -> setHeaderValues
    com.google.api.client.testing.http.MockLowLevelHttpResponse setContent(java.io.InputStream) -> setContent
    com.google.api.client.testing.http.MockLowLevelHttpResponse setContentType(java.lang.String) -> setContentType
    com.google.api.client.testing.http.MockLowLevelHttpResponse setContentEncoding(java.lang.String) -> setContentEncoding
    com.google.api.client.testing.http.MockLowLevelHttpResponse setContentLength(long) -> setContentLength
    com.google.api.client.testing.http.MockLowLevelHttpResponse setStatusCode(int) -> setStatusCode
com.google.api.client.testing.json.AbstractJsonGeneratorTest -> com.google.api.client.testing.json.AbstractJsonGeneratorTest:
    java.lang.String JSON_ENTRY -> JSON_ENTRY
    java.lang.String JSON_FEED -> JSON_FEED
    com.google.api.client.json.JsonFactory newFactory() -> newFactory
    void testGenerateEntry() -> testGenerateEntry
    void testGenerateFeed() -> testGenerateFeed
com.google.api.client.testing.json.AbstractJsonGeneratorTest$Entry -> com.google.api.client.testing.json.AbstractJsonGeneratorTest$Entry:
    java.lang.String title -> title
com.google.api.client.testing.json.AbstractJsonGeneratorTest$Feed -> com.google.api.client.testing.json.AbstractJsonGeneratorTest$Feed:
    java.util.Collection entries -> entries
com.google.api.client.testing.json.AbstractJsonParserTest -> com.google.api.client.testing.json.AbstractJsonParserTest:
    java.lang.String EMPTY -> EMPTY
    java.lang.String EMPTY_OBJECT -> EMPTY_OBJECT
    java.lang.String JSON_ENTRY -> JSON_ENTRY
    java.lang.String JSON_FEED -> JSON_FEED
    java.lang.String CONTAINED_MAP -> CONTAINED_MAP
    java.lang.String NUMBER_TYPES -> NUMBER_TYPES
    java.lang.String NUMBER_TYPES_AS_STRING -> NUMBER_TYPES_AS_STRING
    java.lang.String ANY_TYPE -> ANY_TYPE
    java.lang.String ARRAY_TYPE -> ARRAY_TYPE
    java.lang.String COLLECTION_TYPE -> COLLECTION_TYPE
    java.lang.String MAP_TYPE -> MAP_TYPE
    java.lang.String WILDCARD_TYPE -> WILDCARD_TYPE
    java.lang.String INTEGER_TYPE_VARIABLE_TYPE -> INTEGER_TYPE_VARIABLE_TYPE
    java.lang.String INT_ARRAY_TYPE_VARIABLE_TYPE -> INT_ARRAY_TYPE_VARIABLE_TYPE
    java.lang.String DOUBLE_LIST_TYPE_VARIABLE_TYPE -> DOUBLE_LIST_TYPE_VARIABLE_TYPE
    java.lang.String FLOAT_MAP_TYPE_VARIABLE_TYPE -> FLOAT_MAP_TYPE_VARIABLE_TYPE
    java.lang.String NULL_VALUE -> NULL_VALUE
    java.lang.String ENUM_VALUE -> ENUM_VALUE
    java.lang.String TYPE_VARS -> TYPE_VARS
    java.lang.String STRING_ARRAY -> STRING_ARRAY
    java.lang.String INT_ARRAY -> INT_ARRAY
    java.lang.String EMPTY_ARRAY -> EMPTY_ARRAY
    java.lang.String NUMBER_TOP_VALUE -> NUMBER_TOP_VALUE
    java.lang.String STRING_TOP_VALUE -> STRING_TOP_VALUE
    java.lang.String NULL_TOP_VALUE -> NULL_TOP_VALUE
    java.lang.String BOOL_TOP_VALUE -> BOOL_TOP_VALUE
    com.google.api.client.json.JsonFactory newFactory() -> newFactory
    void testParse_empty() -> testParse_empty
    void testParse_emptyMap() -> testParse_emptyMap
    void testParse_emptyGenericJson() -> testParse_emptyGenericJson
    void testParser_partialEmpty() -> testParser_partialEmpty
    void testParseEntry() -> testParseEntry
    void testParser_partialEntry() -> testParser_partialEntry
    void testParseFeed() -> testParseFeed
    void testParseEntryAsMap() -> testParseEntryAsMap
    void testSkipToKey_missingEmpty() -> testSkipToKey_missingEmpty
    void testSkipToKey_missing() -> testSkipToKey_missing
    void testSkipToKey_found() -> testSkipToKey_found
    void testSkipToKey_startWithFieldName() -> testSkipToKey_startWithFieldName
    void testSkipChildren_string() -> testSkipChildren_string
    void testSkipChildren_object() -> testSkipChildren_object
    void testSkipChildren_array() -> testSkipChildren_array
    void testNextToken() -> testNextToken
    void testCurrentToken() -> testCurrentToken
    void testParse() -> testParse
    void testParser_numberTypes() -> testParser_numberTypes
    void testToFromString() -> testToFromString
    void testParser_anyType() -> testParser_anyType
    void testParser_arrayType() -> testParser_arrayType
    void testParser_collectionType() -> testParser_collectionType
    void testParser_mapType() -> testParser_mapType
    void testParser_hashmapForMapType() -> testParser_hashmapForMapType
    void testParser_wildCardType() -> testParser_wildCardType
    void testParser_integerTypeVariableType() -> testParser_integerTypeVariableType
    void testParser_intArrayTypeVariableType() -> testParser_intArrayTypeVariableType
    void testParser_doubleListTypeVariableType() -> testParser_doubleListTypeVariableType
    void testParser_floatMapTypeVariableType() -> testParser_floatMapTypeVariableType
    void testParser_treemapForTypeVariableType() -> testParser_treemapForTypeVariableType
    void testParser_nullValue() -> testParser_nullValue
    void testParser_enumValue() -> testParser_enumValue
    void testParser_typeVariablesPassAround() -> testParser_typeVariablesPassAround
    void testParser_stringArray() -> testParser_stringArray
    void testParser_intArray() -> testParser_intArray
    void testParser_emptyArray() -> testParser_emptyArray
    void testParser_partialEmptyArray() -> testParser_partialEmptyArray
    void testParser_num() -> testParser_num
    void testParser_string() -> testParser_string
    void testParser_null() -> testParser_null
    void testParser_bool() -> testParser_bool
com.google.api.client.testing.json.AbstractJsonParserTest$A -> com.google.api.client.testing.json.AbstractJsonParserTest$A:
    java.util.Map map -> map
com.google.api.client.testing.json.AbstractJsonParserTest$AnyType -> com.google.api.client.testing.json.AbstractJsonParserTest$AnyType:
    java.lang.Object arr -> arr
    java.lang.Object bool -> bool
    java.lang.Object num -> num
    java.lang.Object obj -> obj
    java.lang.Object str -> str
    java.lang.Object nul -> nul
com.google.api.client.testing.json.AbstractJsonParserTest$ArrayType -> com.google.api.client.testing.json.AbstractJsonParserTest$ArrayType:
    int[] arr -> arr
    int[][] arr2 -> arr2
    java.lang.Integer[] integerArr -> integerArr
com.google.api.client.testing.json.AbstractJsonParserTest$CollectionOfCollectionType -> com.google.api.client.testing.json.AbstractJsonParserTest$CollectionOfCollectionType:
    java.util.LinkedList arr -> arr
com.google.api.client.testing.json.AbstractJsonParserTest$DoubleListTypeVariableType -> com.google.api.client.testing.json.AbstractJsonParserTest$DoubleListTypeVariableType:
com.google.api.client.testing.json.AbstractJsonParserTest$E -> com.google.api.client.testing.json.AbstractJsonParserTest$E:
    com.google.api.client.testing.json.AbstractJsonParserTest$E VALUE -> VALUE
    com.google.api.client.testing.json.AbstractJsonParserTest$E OTHER_VALUE -> OTHER_VALUE
    com.google.api.client.testing.json.AbstractJsonParserTest$E NULL -> NULL
    com.google.api.client.testing.json.AbstractJsonParserTest$E IGNORED_VALUE -> IGNORED_VALUE
    com.google.api.client.testing.json.AbstractJsonParserTest$E[] $VALUES -> $VALUES
    com.google.api.client.testing.json.AbstractJsonParserTest$E[] values() -> values
    com.google.api.client.testing.json.AbstractJsonParserTest$E valueOf(java.lang.String) -> valueOf
com.google.api.client.testing.json.AbstractJsonParserTest$Entry -> com.google.api.client.testing.json.AbstractJsonParserTest$Entry:
    java.lang.String title -> title
com.google.api.client.testing.json.AbstractJsonParserTest$EnumValue -> com.google.api.client.testing.json.AbstractJsonParserTest$EnumValue:
    com.google.api.client.testing.json.AbstractJsonParserTest$E value -> value
    com.google.api.client.testing.json.AbstractJsonParserTest$E otherValue -> otherValue
    com.google.api.client.testing.json.AbstractJsonParserTest$E nullValue -> nullValue
com.google.api.client.testing.json.AbstractJsonParserTest$Feed -> com.google.api.client.testing.json.AbstractJsonParserTest$Feed:
    java.util.Collection entries -> entries
com.google.api.client.testing.json.AbstractJsonParserTest$FloatMapTypeVariableType -> com.google.api.client.testing.json.AbstractJsonParserTest$FloatMapTypeVariableType:
com.google.api.client.testing.json.AbstractJsonParserTest$IntArrayTypeVariableType -> com.google.api.client.testing.json.AbstractJsonParserTest$IntArrayTypeVariableType:
com.google.api.client.testing.json.AbstractJsonParserTest$IntegerTypeVariableType -> com.google.api.client.testing.json.AbstractJsonParserTest$IntegerTypeVariableType:
com.google.api.client.testing.json.AbstractJsonParserTest$MapOfMapType -> com.google.api.client.testing.json.AbstractJsonParserTest$MapOfMapType:
    java.util.Map[] value -> value
com.google.api.client.testing.json.AbstractJsonParserTest$NumberTypes -> com.google.api.client.testing.json.AbstractJsonParserTest$NumberTypes:
    byte byteValue -> byteValue
    java.lang.Byte byteObjValue -> byteObjValue
    short shortValue -> shortValue
    java.lang.Short shortObjValue -> shortObjValue
    int intValue -> intValue
    java.lang.Integer intObjValue -> intObjValue
    float floatValue -> floatValue
    java.lang.Float floatObjValue -> floatObjValue
    long longValue -> longValue
    java.lang.Long longObjValue -> longObjValue
    double doubleValue -> doubleValue
    java.lang.Double doubleObjValue -> doubleObjValue
    java.math.BigInteger bigIntegerValue -> bigIntegerValue
    java.math.BigDecimal bigDecimalValue -> bigDecimalValue
    java.math.BigDecimal anotherBigDecimalValue -> anotherBigDecimalValue
com.google.api.client.testing.json.AbstractJsonParserTest$NumberTypesAsString -> com.google.api.client.testing.json.AbstractJsonParserTest$NumberTypesAsString:
    byte byteValue -> byteValue
    java.lang.Byte byteObjValue -> byteObjValue
    short shortValue -> shortValue
    java.lang.Short shortObjValue -> shortObjValue
    int intValue -> intValue
    java.lang.Integer intObjValue -> intObjValue
    float floatValue -> floatValue
    java.lang.Float floatObjValue -> floatObjValue
    long longValue -> longValue
    java.lang.Long longObjValue -> longObjValue
    double doubleValue -> doubleValue
    java.lang.Double doubleObjValue -> doubleObjValue
    java.math.BigInteger bigIntegerValue -> bigIntegerValue
    java.math.BigDecimal bigDecimalValue -> bigDecimalValue
    java.math.BigDecimal anotherBigDecimalValue -> anotherBigDecimalValue
com.google.api.client.testing.json.AbstractJsonParserTest$StringNullValue -> com.google.api.client.testing.json.AbstractJsonParserTest$StringNullValue:
    java.lang.String[][] arr2 -> arr2
    java.lang.String[] arr -> arr
    java.lang.String value -> value
com.google.api.client.testing.json.AbstractJsonParserTest$TypeVariableType -> com.google.api.client.testing.json.AbstractJsonParserTest$TypeVariableType:
    java.lang.Object[][] arr -> arr
    java.util.LinkedList list -> list
    java.lang.Object nullValue -> nullValue
    java.lang.Object value -> value
com.google.api.client.testing.json.AbstractJsonParserTest$TypeVariablesPassedAround -> com.google.api.client.testing.json.AbstractJsonParserTest$TypeVariablesPassedAround:
com.google.api.client.testing.json.AbstractJsonParserTest$WildCardTypes -> com.google.api.client.testing.json.AbstractJsonParserTest$WildCardTypes:
    java.util.Collection[] lower -> lower
    java.util.Map map -> map
    java.util.Collection mapInWild -> mapInWild
    java.util.Map mapUpper -> mapUpper
    java.util.Collection[] simple -> simple
    java.util.Collection[] upper -> upper
com.google.api.client.testing.json.AbstractJsonParserTest$X -> com.google.api.client.testing.json.AbstractJsonParserTest$X:
    com.google.api.client.testing.json.AbstractJsonParserTest$Y y -> y
com.google.api.client.testing.json.AbstractJsonParserTest$Y -> com.google.api.client.testing.json.AbstractJsonParserTest$Y:
    com.google.api.client.testing.json.AbstractJsonParserTest$Z z -> z
com.google.api.client.testing.json.AbstractJsonParserTest$Z -> com.google.api.client.testing.json.AbstractJsonParserTest$Z:
    java.lang.Object f -> f
com.google.api.client.util.ArrayMap -> com.google.api.client.util.ArrayMap:
    int size -> size
    java.lang.Object[] data -> data
    com.google.api.client.util.ArrayMap create() -> create
    com.google.api.client.util.ArrayMap create(int) -> create
    com.google.api.client.util.ArrayMap of(java.lang.Object[]) -> of
    int size() -> size
    java.lang.Object getKey(int) -> getKey
    java.lang.Object getValue(int) -> getValue
    java.lang.Object set(int,java.lang.Object,java.lang.Object) -> set
    java.lang.Object set(int,java.lang.Object) -> set
    void add(java.lang.Object,java.lang.Object) -> add
    java.lang.Object remove(int) -> remove
    boolean containsKey(java.lang.Object) -> containsKey
    int getIndexOfKey(java.lang.Object) -> getIndexOfKey
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    void trim() -> trim
    void ensureCapacity(int) -> ensureCapacity
    void setDataCapacity(int) -> setDataCapacity
    void setData(int,java.lang.Object,java.lang.Object) -> setData
    java.lang.Object valueAtDataIndex(int) -> valueAtDataIndex
    int getDataIndexOfKey(java.lang.Object) -> getDataIndexOfKey
    java.lang.Object removeFromDataIndexOfKey(int) -> removeFromDataIndexOfKey
    void clear() -> clear
    boolean containsValue(java.lang.Object) -> containsValue
    java.util.Set entrySet() -> entrySet
    com.google.api.client.util.ArrayMap clone() -> clone
    java.lang.Object clone() -> clone
com.google.api.client.util.ArrayMap$Entry -> com.google.api.client.util.ArrayMap$Entry:
    int index -> index
    com.google.api.client.util.ArrayMap this$0 -> this$0
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.api.client.util.ArrayMap$EntryIterator -> com.google.api.client.util.ArrayMap$EntryIterator:
    boolean removed -> removed
    int nextIndex -> nextIndex
    com.google.api.client.util.ArrayMap this$0 -> this$0
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.google.api.client.util.ArrayMap$EntrySet -> com.google.api.client.util.ArrayMap$EntrySet:
    com.google.api.client.util.ArrayMap this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
com.google.api.client.util.ArrayValueMap -> com.google.api.client.util.ArrayValueMap:
    java.util.Map keyMap -> keyMap
    java.util.Map fieldMap -> fieldMap
    java.lang.Object destination -> destination
    void setValues() -> setValues
    void put(java.lang.reflect.Field,java.lang.Class,java.lang.Object) -> put
    void put(java.lang.String,java.lang.Class,java.lang.Object) -> put
com.google.api.client.util.ArrayValueMap$ArrayValue -> com.google.api.client.util.ArrayValueMap$ArrayValue:
    java.lang.Class componentType -> componentType
    java.util.ArrayList values -> values
    java.lang.Object toArray() -> toArray
    void addValue(java.lang.Class,java.lang.Object) -> addValue
com.google.api.client.util.Base64 -> com.google.api.client.util.Base64:
    byte EQUALS_SIGN -> EQUALS_SIGN
    byte WHITE_SPACE_ENC -> WHITE_SPACE_ENC
    byte EQUALS_SIGN_ENC -> EQUALS_SIGN_ENC
    byte[] ALPHABET -> ALPHABET
    byte[] DECODABET -> DECODABET
    byte[] encode3to4(byte[],int,int,byte[],int) -> encode3to4
    byte[] encode(byte[]) -> encode
    byte[] encode(byte[],int,int) -> encode
    int decode4to3(byte[],int,byte[],int) -> decode4to3
    byte[] decode(byte[]) -> decode
    byte[] decode(byte[],int,int) -> decode
com.google.api.client.util.ClassInfo -> com.google.api.client.util.ClassInfo:
    java.util.Map CACHE -> CACHE
    java.lang.Class clazz -> clazz
    java.util.IdentityHashMap nameToFieldInfoMap -> nameToFieldInfoMap
    java.util.List names -> names
    com.google.api.client.util.ClassInfo of(java.lang.Class) -> of
    java.lang.Class getUnderlyingClass() -> getUnderlyingClass
    com.google.api.client.util.FieldInfo getFieldInfo(java.lang.String) -> getFieldInfo
    java.lang.reflect.Field getField(java.lang.String) -> getField
    boolean isEnum() -> isEnum
    java.util.Collection getNames() -> getNames
com.google.api.client.util.ClassInfo$1 -> com.google.api.client.util.ClassInfo$1:
    com.google.api.client.util.ClassInfo this$0 -> this$0
    int compare(java.lang.String,java.lang.String) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.api.client.util.Data -> com.google.api.client.util.Data:
    java.lang.Boolean NULL_BOOLEAN -> NULL_BOOLEAN
    java.lang.String NULL_STRING -> NULL_STRING
    java.lang.Character NULL_CHARACTER -> NULL_CHARACTER
    java.lang.Byte NULL_BYTE -> NULL_BYTE
    java.lang.Short NULL_SHORT -> NULL_SHORT
    java.lang.Integer NULL_INTEGER -> NULL_INTEGER
    java.lang.Float NULL_FLOAT -> NULL_FLOAT
    java.lang.Long NULL_LONG -> NULL_LONG
    java.lang.Double NULL_DOUBLE -> NULL_DOUBLE
    java.math.BigInteger NULL_BIG_INTEGER -> NULL_BIG_INTEGER
    java.math.BigDecimal NULL_BIG_DECIMAL -> NULL_BIG_DECIMAL
    com.google.api.client.util.DateTime NULL_DATE_TIME -> NULL_DATE_TIME
    java.util.concurrent.ConcurrentHashMap NULL_CACHE -> NULL_CACHE
    java.lang.Object nullOf(java.lang.Class) -> nullOf
    boolean isNull(java.lang.Object) -> isNull
    java.util.Map mapOf(java.lang.Object) -> mapOf
    java.lang.Object clone(java.lang.Object) -> clone
    void deepCopy(java.lang.Object,java.lang.Object) -> deepCopy
    boolean isPrimitive(java.lang.reflect.Type) -> isPrimitive
    boolean isValueOfPrimitiveType(java.lang.Object) -> isValueOfPrimitiveType
    java.lang.Object parsePrimitiveValue(java.lang.reflect.Type,java.lang.String) -> parsePrimitiveValue
    java.util.Collection newCollectionInstance(java.lang.reflect.Type) -> newCollectionInstance
    java.util.Map newMapInstance(java.lang.Class) -> newMapInstance
    java.lang.reflect.Type resolveWildcardTypeOrTypeVariable(java.util.List,java.lang.reflect.Type) -> resolveWildcardTypeOrTypeVariable
com.google.api.client.util.DataMap -> com.google.api.client.util.DataMap:
    java.lang.Object object -> object
    com.google.api.client.util.ClassInfo classInfo -> classInfo
    com.google.api.client.util.DataMap$EntrySet entrySet() -> entrySet
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.String,java.lang.Object) -> put
    java.util.Set entrySet() -> entrySet
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.google.api.client.util.DataMap$Entry -> com.google.api.client.util.DataMap$Entry:
    java.lang.Object fieldValue -> fieldValue
    com.google.api.client.util.FieldInfo fieldInfo -> fieldInfo
    com.google.api.client.util.DataMap this$0 -> this$0
    java.lang.String getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object getKey() -> getKey
com.google.api.client.util.DataMap$EntryIterator -> com.google.api.client.util.DataMap$EntryIterator:
    int nextKeyIndex -> nextKeyIndex
    com.google.api.client.util.FieldInfo nextFieldInfo -> nextFieldInfo
    java.lang.Object nextFieldValue -> nextFieldValue
    boolean isRemoved -> isRemoved
    boolean isComputed -> isComputed
    com.google.api.client.util.FieldInfo currentFieldInfo -> currentFieldInfo
    com.google.api.client.util.DataMap this$0 -> this$0
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.google.api.client.util.DataMap$EntrySet -> com.google.api.client.util.DataMap$EntrySet:
    com.google.api.client.util.DataMap this$0 -> this$0
    com.google.api.client.util.DataMap$EntryIterator iterator() -> iterator
    int size() -> size
    void clear() -> clear
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
com.google.api.client.util.DateTime -> com.google.api.client.util.DateTime:
    long serialVersionUID -> serialVersionUID
    java.util.TimeZone GMT -> GMT
    long value -> value
    boolean dateOnly -> dateOnly
    java.lang.Integer tzShift -> tzShift
    long getValue() -> getValue
    boolean isDateOnly() -> isDateOnly
    java.lang.Integer getTimeZoneShift() -> getTimeZoneShift
    java.lang.String toStringRfc3339() -> toStringRfc3339
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    com.google.api.client.util.DateTime parseRfc3339(java.lang.String) -> parseRfc3339
    void appendInt(java.lang.StringBuilder,int,int) -> appendInt
com.google.api.client.util.FieldInfo -> com.google.api.client.util.FieldInfo:
    java.util.Map CACHE -> CACHE
    boolean isPrimitive -> isPrimitive
    java.lang.reflect.Field field -> field
    java.lang.String name -> name
    com.google.api.client.util.FieldInfo of(java.lang.Enum) -> of
    com.google.api.client.util.FieldInfo of(java.lang.reflect.Field) -> of
    java.lang.reflect.Field getField() -> getField
    java.lang.String getName() -> getName
    java.lang.Class getType() -> getType
    java.lang.reflect.Type getGenericType() -> getGenericType
    boolean isFinal() -> isFinal
    boolean isPrimitive() -> isPrimitive
    java.lang.Object getValue(java.lang.Object) -> getValue
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    com.google.api.client.util.ClassInfo getClassInfo() -> getClassInfo
    java.lang.Enum enumValue() -> enumValue
    java.lang.Object getFieldValue(java.lang.reflect.Field,java.lang.Object) -> getFieldValue
    void setFieldValue(java.lang.reflect.Field,java.lang.Object,java.lang.Object) -> setFieldValue
com.google.api.client.util.GenericData -> com.google.api.client.util.GenericData:
    com.google.api.client.util.ArrayMap unknownFields -> unknownFields
    com.google.api.client.util.ClassInfo classInfo -> classInfo
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.String,java.lang.Object) -> put
    void set(java.lang.String,java.lang.Object) -> set
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.util.Set entrySet() -> entrySet
    com.google.api.client.util.GenericData clone() -> clone
    java.util.Map getUnknownKeys() -> getUnknownKeys
    void setUnknownKeys(com.google.api.client.util.ArrayMap) -> setUnknownKeys
    java.lang.Object clone() -> clone
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.google.api.client.util.GenericData$EntryIterator -> com.google.api.client.util.GenericData$EntryIterator:
    boolean startedUnknown -> startedUnknown
    java.util.Iterator fieldIterator -> fieldIterator
    java.util.Iterator unknownIterator -> unknownIterator
    com.google.api.client.util.GenericData this$0 -> this$0
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.google.api.client.util.GenericData$EntrySet -> com.google.api.client.util.GenericData$EntrySet:
    com.google.api.client.util.DataMap$EntrySet dataEntrySet -> dataEntrySet
    com.google.api.client.util.GenericData this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
    void clear() -> clear
com.google.api.client.util.Key -> com.google.api.client.util.Key:
    java.lang.String value() -> value
com.google.api.client.util.NullValue -> com.google.api.client.util.NullValue:
com.google.api.client.util.Strings -> com.google.api.client.util.Strings:
    java.lang.String VERSION -> VERSION
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    byte[] toBytesUtf8(java.lang.String) -> toBytesUtf8
    java.lang.String fromBytesUtf8(byte[]) -> fromBytesUtf8
com.google.api.client.util.Types -> com.google.api.client.util.Types:
    java.lang.reflect.ParameterizedType getSuperParameterizedType(java.lang.reflect.Type,java.lang.Class) -> getSuperParameterizedType
    boolean isAssignableToOrFrom(java.lang.Class,java.lang.Class) -> isAssignableToOrFrom
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    java.lang.IllegalArgumentException handleExceptionForNewInstance(java.lang.Exception,java.lang.Class) -> handleExceptionForNewInstance
    boolean isArray(java.lang.reflect.Type) -> isArray
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
    java.lang.Class getRawClass(java.lang.reflect.ParameterizedType) -> getRawClass
    java.lang.reflect.Type getBound(java.lang.reflect.WildcardType) -> getBound
    java.lang.reflect.Type resolveTypeVariable(java.util.List,java.lang.reflect.TypeVariable) -> resolveTypeVariable
    java.lang.Class getRawArrayComponentType(java.util.List,java.lang.reflect.Type) -> getRawArrayComponentType
    java.lang.reflect.Type getIterableParameter(java.lang.reflect.Type) -> getIterableParameter
    java.lang.reflect.Type getMapValueParameter(java.lang.reflect.Type) -> getMapValueParameter
    java.lang.reflect.Type getActualParameterAtPosition(java.lang.reflect.Type,java.lang.Class,int) -> getActualParameterAtPosition
    java.lang.Iterable iterableOf(java.lang.Object) -> iterableOf
    java.lang.Object toArray(java.util.Collection,java.lang.Class) -> toArray
com.google.api.client.util.Types$1 -> com.google.api.client.util.Types$1:
    java.lang.Object val$value -> val$value
    java.util.Iterator iterator() -> iterator
com.google.api.client.util.Types$1$1 -> com.google.api.client.util.Types$1$1:
    int length -> length
    int index -> index
    com.google.api.client.util.Types$1 this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.api.client.util.Value -> com.google.api.client.util.Value:
    java.lang.String value() -> value
com.google.api.client.util.escape.CharEscapers -> com.google.api.client.util.escape.CharEscapers:
    com.google.api.client.util.escape.Escaper URI_ESCAPER -> URI_ESCAPER
    com.google.api.client.util.escape.Escaper URI_PATH_ESCAPER -> URI_PATH_ESCAPER
    com.google.api.client.util.escape.Escaper URI_QUERY_STRING_ESCAPER -> URI_QUERY_STRING_ESCAPER
    java.lang.String escapeUri(java.lang.String) -> escapeUri
    java.lang.String decodeUri(java.lang.String) -> decodeUri
    java.lang.String escapeUriPath(java.lang.String) -> escapeUriPath
    java.lang.String escapeUriQuery(java.lang.String) -> escapeUriQuery
com.google.api.client.util.escape.Escaper -> com.google.api.client.util.escape.Escaper:
    java.lang.String escape(java.lang.String) -> escape
com.google.api.client.util.escape.PercentEscaper -> com.google.api.client.util.escape.PercentEscaper:
    java.lang.String SAFECHARS_URLENCODER -> SAFECHARS_URLENCODER
    java.lang.String SAFEPATHCHARS_URLENCODER -> SAFEPATHCHARS_URLENCODER
    java.lang.String SAFEQUERYSTRINGCHARS_URLENCODER -> SAFEQUERYSTRINGCHARS_URLENCODER
    char[] URI_ESCAPED_SPACE -> URI_ESCAPED_SPACE
    char[] UPPER_HEX_DIGITS -> UPPER_HEX_DIGITS
    boolean plusForSpace -> plusForSpace
    boolean[] safeOctets -> safeOctets
    boolean[] createSafeOctets(java.lang.String) -> createSafeOctets
    int nextEscapeIndex(java.lang.CharSequence,int,int) -> nextEscapeIndex
    java.lang.String escape(java.lang.String) -> escape
    char[] escape(int) -> escape
com.google.api.client.util.escape.Platform -> com.google.api.client.util.escape.Platform:
    java.lang.ThreadLocal DEST_TL -> DEST_TL
    char[] charBufferFromThreadLocal() -> charBufferFromThreadLocal
com.google.api.client.util.escape.Platform$1 -> com.google.api.client.util.escape.Platform$1:
    char[] initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.google.api.client.util.escape.UnicodeEscaper -> com.google.api.client.util.escape.UnicodeEscaper:
    int DEST_PAD -> DEST_PAD
    char[] escape(int) -> escape
    int nextEscapeIndex(java.lang.CharSequence,int,int) -> nextEscapeIndex
    java.lang.String escape(java.lang.String) -> escape
    java.lang.String escapeSlow(java.lang.String,int) -> escapeSlow
    int codePointAt(java.lang.CharSequence,int,int) -> codePointAt
    char[] growBuffer(char[],int,int) -> growBuffer
com.google.api.client.xml.GenericXml -> com.google.api.client.xml.GenericXml:
    java.lang.String name -> name
    com.google.api.client.xml.XmlNamespaceDictionary namespaceDictionary -> namespaceDictionary
    com.google.api.client.xml.GenericXml clone() -> clone
    java.lang.String toString() -> toString
    com.google.api.client.util.GenericData clone() -> clone
    java.lang.Object clone() -> clone
com.google.api.client.xml.Xml -> com.google.api.client.xml.Xml:
    java.lang.String TEXT_CONTENT -> TEXT_CONTENT
    org.xmlpull.v1.XmlPullParserFactory factory -> factory
    org.xmlpull.v1.XmlPullParserFactory getParserFactory() -> getParserFactory
    org.xmlpull.v1.XmlSerializer createSerializer() -> createSerializer
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
    java.lang.String toStringOf(java.lang.Object) -> toStringOf
    void parseAttributeOrTextContent(java.lang.String,java.lang.reflect.Field,java.lang.reflect.Type,java.util.List,java.lang.Object,com.google.api.client.xml.GenericXml,java.util.Map,java.lang.String) -> parseAttributeOrTextContent
    void setValue(java.lang.Object,java.lang.reflect.Field,java.lang.Object,com.google.api.client.xml.GenericXml,java.util.Map,java.lang.String) -> setValue
    void parseElement(org.xmlpull.v1.XmlPullParser,java.lang.Object,com.google.api.client.xml.XmlNamespaceDictionary,com.google.api.client.xml.Xml$CustomizeParser) -> parseElement
    boolean parseElementInternal(org.xmlpull.v1.XmlPullParser,java.util.ArrayList,java.lang.Object,java.lang.reflect.Type,com.google.api.client.xml.XmlNamespaceDictionary,com.google.api.client.xml.Xml$CustomizeParser) -> parseElementInternal
    java.lang.String getFieldName(boolean,java.lang.String,java.lang.String,java.lang.String) -> getFieldName
    java.lang.Object parseTextContentForElement(org.xmlpull.v1.XmlPullParser,java.util.List,boolean,java.lang.reflect.Type) -> parseTextContentForElement
    java.lang.Object parseValue(java.lang.reflect.Type,java.util.List,java.lang.String) -> parseValue
com.google.api.client.xml.Xml$CustomizeParser -> com.google.api.client.xml.Xml$CustomizeParser:
    boolean stopBeforeStartTag(java.lang.String,java.lang.String) -> stopBeforeStartTag
    boolean stopAfterEndTag(java.lang.String,java.lang.String) -> stopAfterEndTag
com.google.api.client.xml.XmlNamespaceDictionary -> com.google.api.client.xml.XmlNamespaceDictionary:
    java.util.HashMap namespaceAliasToUriMap -> namespaceAliasToUriMap
    java.util.HashMap namespaceUriToAliasMap -> namespaceUriToAliasMap
    java.lang.String getAliasForUri(java.lang.String) -> getAliasForUri
    java.lang.String getUriForAlias(java.lang.String) -> getUriForAlias
    java.util.Map getAliasToUriMap() -> getAliasToUriMap
    java.util.Map getUriToAliasMap() -> getUriToAliasMap
    com.google.api.client.xml.XmlNamespaceDictionary set(java.lang.String,java.lang.String) -> set
    java.lang.String toStringOf(java.lang.String,java.lang.Object) -> toStringOf
    void serialize(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.lang.Object) -> serialize
    void serialize(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.Object) -> serialize
    void serialize(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.lang.Object,boolean) -> serialize
    void serialize(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.Object,boolean) -> serialize
    com.google.api.client.xml.XmlNamespaceDictionary$ElementSerializer startDoc(org.xmlpull.v1.XmlSerializer,java.lang.Object,boolean,java.lang.String) -> startDoc
    void computeAliases(java.lang.Object,java.util.SortedSet) -> computeAliases
    java.lang.String getNamespaceUriForAliasHandlingUnknown(boolean,java.lang.String) -> getNamespaceUriForAliasHandlingUnknown
    java.lang.String toSerializedValue(java.lang.Object) -> toSerializedValue
com.google.api.client.xml.XmlNamespaceDictionary$ElementSerializer -> com.google.api.client.xml.XmlNamespaceDictionary$ElementSerializer:
    boolean errorOnUnknown -> errorOnUnknown
    java.lang.Object textValue -> textValue
    java.util.List attributeNames -> attributeNames
    java.util.List attributeValues -> attributeValues
    java.util.List subElementNames -> subElementNames
    java.util.List subElementValues -> subElementValues
    com.google.api.client.xml.XmlNamespaceDictionary this$0 -> this$0
    void serialize(org.xmlpull.v1.XmlSerializer,java.lang.String) -> serialize
    void serialize(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String) -> serialize
com.google.api.client.xml.atom.AbstractAtomFeedParser -> com.google.api.client.xml.atom.AbstractAtomFeedParser:
    boolean feedParsed -> feedParsed
    org.xmlpull.v1.XmlPullParser parser -> parser
    java.io.InputStream inputStream -> inputStream
    java.lang.Class feedClass -> feedClass
    com.google.api.client.xml.XmlNamespaceDictionary namespaceDictionary -> namespaceDictionary
    org.xmlpull.v1.XmlPullParser getParser() -> getParser
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.Class getFeedClass() -> getFeedClass
    com.google.api.client.xml.XmlNamespaceDictionary getNamespaceDictionary() -> getNamespaceDictionary
    java.lang.Object parseFeed() -> parseFeed
    java.lang.Object parseNextEntry() -> parseNextEntry
    void close() -> close
    java.lang.Object parseEntryInternal() -> parseEntryInternal
com.google.api.client.xml.atom.Atom -> com.google.api.client.xml.atom.Atom:
    java.lang.String ATOM_NAMESPACE -> ATOM_NAMESPACE
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    void checkContentType(java.lang.String) -> checkContentType
com.google.api.client.xml.atom.Atom$StopAtAtomEntry -> com.google.api.client.xml.atom.Atom$StopAtAtomEntry:
    com.google.api.client.xml.atom.Atom$StopAtAtomEntry INSTANCE -> INSTANCE
    boolean stopBeforeStartTag(java.lang.String,java.lang.String) -> stopBeforeStartTag
com.google.common.annotations.Beta -> com.google.common.annotations.Beta:
com.google.common.annotations.GwtCompatible -> com.google.common.annotations.GwtCompatible:
    boolean serializable() -> serializable
    boolean emulated() -> emulated
com.google.common.annotations.GwtIncompatible -> com.google.common.annotations.GwtIncompatible:
    java.lang.String value() -> value
com.google.common.annotations.VisibleForTesting -> com.google.common.annotations.VisibleForTesting:
com.google.common.base.Ascii -> com.google.common.base.Ascii:
    byte NUL -> NUL
    byte SOH -> SOH
    byte STX -> STX
    byte ETX -> ETX
    byte EOT -> EOT
    byte ENQ -> ENQ
    byte ACK -> ACK
    byte BEL -> BEL
    byte BS -> BS
    byte HT -> HT
    byte LF -> LF
    byte NL -> NL
    byte VT -> VT
    byte FF -> FF
    byte CR -> CR
    byte SO -> SO
    byte SI -> SI
    byte DLE -> DLE
    byte DC1 -> DC1
    byte XON -> XON
    byte DC2 -> DC2
    byte DC3 -> DC3
    byte XOFF -> XOFF
    byte DC4 -> DC4
    byte NAK -> NAK
    byte SYN -> SYN
    byte ETB -> ETB
    byte CAN -> CAN
    byte EM -> EM
    byte SUB -> SUB
    byte ESC -> ESC
    byte FS -> FS
    byte GS -> GS
    byte RS -> RS
    byte US -> US
    byte SP -> SP
    byte SPACE -> SPACE
    byte DEL -> DEL
    int MIN -> MIN
    int MAX -> MAX
    java.lang.String toLowerCase(java.lang.String) -> toLowerCase
    char toLowerCase(char) -> toLowerCase
    java.lang.String toUpperCase(java.lang.String) -> toUpperCase
    char toUpperCase(char) -> toUpperCase
    boolean isLowerCase(char) -> isLowerCase
    boolean isUpperCase(char) -> isUpperCase
com.google.common.base.CaseFormat -> com.google.common.base.CaseFormat:
    com.google.common.base.CaseFormat LOWER_HYPHEN -> LOWER_HYPHEN
    com.google.common.base.CaseFormat LOWER_UNDERSCORE -> LOWER_UNDERSCORE
    com.google.common.base.CaseFormat LOWER_CAMEL -> LOWER_CAMEL
    com.google.common.base.CaseFormat UPPER_CAMEL -> UPPER_CAMEL
    com.google.common.base.CaseFormat UPPER_UNDERSCORE -> UPPER_UNDERSCORE
    com.google.common.base.CharMatcher wordBoundary -> wordBoundary
    java.lang.String wordSeparator -> wordSeparator
    com.google.common.base.CaseFormat[] $VALUES -> $VALUES
    com.google.common.base.CaseFormat[] values() -> values
    com.google.common.base.CaseFormat valueOf(java.lang.String) -> valueOf
    java.lang.String to(com.google.common.base.CaseFormat,java.lang.String) -> to
    java.lang.String normalizeFirstWord(java.lang.String) -> normalizeFirstWord
    java.lang.String normalizeWord(java.lang.String) -> normalizeWord
    java.lang.String firstCharOnlyToUpper(java.lang.String) -> firstCharOnlyToUpper
com.google.common.base.CaseFormat$1 -> com.google.common.base.CaseFormat$1:
    int[] $SwitchMap$com$google$common$base$CaseFormat -> $SwitchMap$com$google$common$base$CaseFormat
com.google.common.base.CharMatcher -> com.google.common.base.CharMatcher:
    java.lang.String BREAKING_WHITESPACE_CHARS -> BREAKING_WHITESPACE_CHARS
    java.lang.String NON_BREAKING_WHITESPACE_CHARS -> NON_BREAKING_WHITESPACE_CHARS
    com.google.common.base.CharMatcher WHITESPACE -> WHITESPACE
    com.google.common.base.CharMatcher BREAKING_WHITESPACE -> BREAKING_WHITESPACE
    com.google.common.base.CharMatcher ASCII -> ASCII
    com.google.common.base.CharMatcher DIGIT -> DIGIT
    com.google.common.base.CharMatcher JAVA_WHITESPACE -> JAVA_WHITESPACE
    com.google.common.base.CharMatcher JAVA_DIGIT -> JAVA_DIGIT
    com.google.common.base.CharMatcher JAVA_LETTER -> JAVA_LETTER
    com.google.common.base.CharMatcher JAVA_LETTER_OR_DIGIT -> JAVA_LETTER_OR_DIGIT
    com.google.common.base.CharMatcher JAVA_UPPER_CASE -> JAVA_UPPER_CASE
    com.google.common.base.CharMatcher JAVA_LOWER_CASE -> JAVA_LOWER_CASE
    com.google.common.base.CharMatcher JAVA_ISO_CONTROL -> JAVA_ISO_CONTROL
    com.google.common.base.CharMatcher INVISIBLE -> INVISIBLE
    com.google.common.base.CharMatcher SINGLE_WIDTH -> SINGLE_WIDTH
    com.google.common.base.CharMatcher ANY -> ANY
    com.google.common.base.CharMatcher NONE -> NONE
    com.google.common.base.CharMatcher is(char) -> is
    com.google.common.base.CharMatcher isNot(char) -> isNot
    com.google.common.base.CharMatcher anyOf(java.lang.CharSequence) -> anyOf
    com.google.common.base.CharMatcher noneOf(java.lang.CharSequence) -> noneOf
    com.google.common.base.CharMatcher inRange(char,char) -> inRange
    com.google.common.base.CharMatcher forPredicate(com.google.common.base.Predicate) -> forPredicate
    boolean matches(char) -> matches
    com.google.common.base.CharMatcher negate() -> negate
    com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher) -> and
    com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher) -> or
    com.google.common.base.CharMatcher precomputed() -> precomputed
    com.google.common.base.CharMatcher precomputedInternal() -> precomputedInternal
    void setBits(com.google.common.base.CharMatcher$LookupTable) -> setBits
    boolean matchesAnyOf(java.lang.CharSequence) -> matchesAnyOf
    boolean matchesAllOf(java.lang.CharSequence) -> matchesAllOf
    boolean matchesNoneOf(java.lang.CharSequence) -> matchesNoneOf
    int indexIn(java.lang.CharSequence) -> indexIn
    int indexIn(java.lang.CharSequence,int) -> indexIn
    int lastIndexIn(java.lang.CharSequence) -> lastIndexIn
    int countIn(java.lang.CharSequence) -> countIn
    java.lang.String removeFrom(java.lang.CharSequence) -> removeFrom
    java.lang.String retainFrom(java.lang.CharSequence) -> retainFrom
    java.lang.String replaceFrom(java.lang.CharSequence,char) -> replaceFrom
    java.lang.String replaceFrom(java.lang.CharSequence,java.lang.CharSequence) -> replaceFrom
    java.lang.String trimFrom(java.lang.CharSequence) -> trimFrom
    java.lang.String trimLeadingFrom(java.lang.CharSequence) -> trimLeadingFrom
    java.lang.String trimTrailingFrom(java.lang.CharSequence) -> trimTrailingFrom
    java.lang.String collapseFrom(java.lang.CharSequence,char) -> collapseFrom
    java.lang.String trimAndCollapseFrom(java.lang.CharSequence,char) -> trimAndCollapseFrom
    boolean apply(java.lang.Character) -> apply
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$1 -> com.google.common.base.CharMatcher$1:
    boolean matches(char) -> matches
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$10 -> com.google.common.base.CharMatcher$10:
    char val$match1 -> val$match1
    char val$match2 -> val$match2
    boolean matches(char) -> matches
    void setBits(com.google.common.base.CharMatcher$LookupTable) -> setBits
    com.google.common.base.CharMatcher precomputed() -> precomputed
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$11 -> com.google.common.base.CharMatcher$11:
    char[] val$chars -> val$chars
    boolean matches(char) -> matches
    void setBits(com.google.common.base.CharMatcher$LookupTable) -> setBits
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$12 -> com.google.common.base.CharMatcher$12:
    char val$startInclusive -> val$startInclusive
    char val$endInclusive -> val$endInclusive
    boolean matches(char) -> matches
    void setBits(com.google.common.base.CharMatcher$LookupTable) -> setBits
    com.google.common.base.CharMatcher precomputed() -> precomputed
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$13 -> com.google.common.base.CharMatcher$13:
    com.google.common.base.Predicate val$predicate -> val$predicate
    boolean matches(char) -> matches
    boolean apply(java.lang.Character) -> apply
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$14 -> com.google.common.base.CharMatcher$14:
    com.google.common.base.CharMatcher val$original -> val$original
    com.google.common.base.CharMatcher this$0 -> this$0
    boolean matches(char) -> matches
    boolean matchesAllOf(java.lang.CharSequence) -> matchesAllOf
    boolean matchesNoneOf(java.lang.CharSequence) -> matchesNoneOf
    int countIn(java.lang.CharSequence) -> countIn
    com.google.common.base.CharMatcher negate() -> negate
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$15 -> com.google.common.base.CharMatcher$15:
    com.google.common.base.CharMatcher$LookupTable val$table -> val$table
    com.google.common.base.CharMatcher this$0 -> this$0
    boolean matches(char) -> matches
    com.google.common.base.CharMatcher precomputed() -> precomputed
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$2 -> com.google.common.base.CharMatcher$2:
    boolean matches(char) -> matches
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$3 -> com.google.common.base.CharMatcher$3:
    boolean matches(char) -> matches
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$4 -> com.google.common.base.CharMatcher$4:
    boolean matches(char) -> matches
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$5 -> com.google.common.base.CharMatcher$5:
    boolean matches(char) -> matches
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$6 -> com.google.common.base.CharMatcher$6:
    boolean matches(char) -> matches
    int indexIn(java.lang.CharSequence) -> indexIn
    int indexIn(java.lang.CharSequence,int) -> indexIn
    int lastIndexIn(java.lang.CharSequence) -> lastIndexIn
    boolean matchesAllOf(java.lang.CharSequence) -> matchesAllOf
    boolean matchesNoneOf(java.lang.CharSequence) -> matchesNoneOf
    java.lang.String removeFrom(java.lang.CharSequence) -> removeFrom
    java.lang.String replaceFrom(java.lang.CharSequence,char) -> replaceFrom
    java.lang.String replaceFrom(java.lang.CharSequence,java.lang.CharSequence) -> replaceFrom
    java.lang.String collapseFrom(java.lang.CharSequence,char) -> collapseFrom
    java.lang.String trimFrom(java.lang.CharSequence) -> trimFrom
    int countIn(java.lang.CharSequence) -> countIn
    com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher) -> and
    com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher) -> or
    com.google.common.base.CharMatcher negate() -> negate
    com.google.common.base.CharMatcher precomputed() -> precomputed
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$7 -> com.google.common.base.CharMatcher$7:
    boolean matches(char) -> matches
    int indexIn(java.lang.CharSequence) -> indexIn
    int indexIn(java.lang.CharSequence,int) -> indexIn
    int lastIndexIn(java.lang.CharSequence) -> lastIndexIn
    boolean matchesAllOf(java.lang.CharSequence) -> matchesAllOf
    boolean matchesNoneOf(java.lang.CharSequence) -> matchesNoneOf
    java.lang.String removeFrom(java.lang.CharSequence) -> removeFrom
    java.lang.String replaceFrom(java.lang.CharSequence,char) -> replaceFrom
    java.lang.String replaceFrom(java.lang.CharSequence,java.lang.CharSequence) -> replaceFrom
    java.lang.String collapseFrom(java.lang.CharSequence,char) -> collapseFrom
    java.lang.String trimFrom(java.lang.CharSequence) -> trimFrom
    int countIn(java.lang.CharSequence) -> countIn
    com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher) -> and
    com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher) -> or
    com.google.common.base.CharMatcher negate() -> negate
    void setBits(com.google.common.base.CharMatcher$LookupTable) -> setBits
    com.google.common.base.CharMatcher precomputed() -> precomputed
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$8 -> com.google.common.base.CharMatcher$8:
    char val$match -> val$match
    boolean matches(char) -> matches
    java.lang.String replaceFrom(java.lang.CharSequence,char) -> replaceFrom
    com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher) -> and
    com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher) -> or
    com.google.common.base.CharMatcher negate() -> negate
    void setBits(com.google.common.base.CharMatcher$LookupTable) -> setBits
    com.google.common.base.CharMatcher precomputed() -> precomputed
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$9 -> com.google.common.base.CharMatcher$9:
    char val$match -> val$match
    boolean matches(char) -> matches
    com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher) -> and
    com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher) -> or
    com.google.common.base.CharMatcher negate() -> negate
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$And -> com.google.common.base.CharMatcher$And:
    java.util.List components -> components
    boolean matches(char) -> matches
    com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher) -> and
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$LookupTable -> com.google.common.base.CharMatcher$LookupTable:
    int[] data -> data
    void set(char) -> set
    boolean get(char) -> get
com.google.common.base.CharMatcher$Or -> com.google.common.base.CharMatcher$Or:
    java.util.List components -> components
    boolean matches(char) -> matches
    com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher) -> or
    void setBits(com.google.common.base.CharMatcher$LookupTable) -> setBits
    boolean apply(java.lang.Object) -> apply
com.google.common.base.Charsets -> com.google.common.base.Charsets:
    java.nio.charset.Charset US_ASCII -> US_ASCII
    java.nio.charset.Charset ISO_8859_1 -> ISO_8859_1
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.nio.charset.Charset UTF_16BE -> UTF_16BE
    java.nio.charset.Charset UTF_16LE -> UTF_16LE
    java.nio.charset.Charset UTF_16 -> UTF_16
com.google.common.base.Defaults -> com.google.common.base.Defaults:
    java.util.Map DEFAULTS -> DEFAULTS
    void put(java.util.Map,java.lang.Class,java.lang.Object) -> put
    java.lang.Object defaultValue(java.lang.Class) -> defaultValue
com.google.common.base.Enums -> com.google.common.base.Enums:
    com.google.common.base.Function valueOfFunction(java.lang.Class) -> valueOfFunction
com.google.common.base.Enums$1 -> com.google.common.base.Enums$1:
com.google.common.base.Enums$ValueOfFunction -> com.google.common.base.Enums$ValueOfFunction:
    java.lang.Class enumClass -> enumClass
    java.lang.Enum apply(java.lang.String) -> apply
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.base.Equivalence -> com.google.common.base.Equivalence:
    boolean equivalent(java.lang.Object,java.lang.Object) -> equivalent
    int hash(java.lang.Object) -> hash
com.google.common.base.Equivalences -> com.google.common.base.Equivalences:
    com.google.common.base.Equivalence equals() -> equals
    com.google.common.base.Equivalence identity() -> identity
    com.google.common.base.Equivalence pairwise(com.google.common.base.Equivalence) -> pairwise
com.google.common.base.Equivalences$1 -> com.google.common.base.Equivalences$1:
com.google.common.base.Equivalences$Impl -> com.google.common.base.Equivalences$Impl:
    com.google.common.base.Equivalences$Impl EQUALS -> EQUALS
    com.google.common.base.Equivalences$Impl IDENTITY -> IDENTITY
    com.google.common.base.Equivalences$Impl[] $VALUES -> $VALUES
    com.google.common.base.Equivalences$Impl[] values() -> values
    com.google.common.base.Equivalences$Impl valueOf(java.lang.String) -> valueOf
com.google.common.base.Equivalences$Impl$1 -> com.google.common.base.Equivalences$Impl$1:
    boolean equivalent(java.lang.Object,java.lang.Object) -> equivalent
    int hash(java.lang.Object) -> hash
com.google.common.base.Equivalences$Impl$2 -> com.google.common.base.Equivalences$Impl$2:
    boolean equivalent(java.lang.Object,java.lang.Object) -> equivalent
    int hash(java.lang.Object) -> hash
com.google.common.base.FinalizablePhantomReference -> com.google.common.base.FinalizablePhantomReference:
com.google.common.base.FinalizableReference -> com.google.common.base.FinalizableReference:
    void finalizeReferent() -> finalizeReferent
com.google.common.base.FinalizableReferenceQueue -> com.google.common.base.FinalizableReferenceQueue:
    java.util.logging.Logger logger -> logger
    java.lang.String FINALIZER_CLASS_NAME -> FINALIZER_CLASS_NAME
    java.lang.reflect.Method startFinalizer -> startFinalizer
    java.lang.ref.ReferenceQueue queue -> queue
    boolean threadStarted -> threadStarted
    void cleanUp() -> cleanUp
    java.lang.Class loadFinalizer(com.google.common.base.FinalizableReferenceQueue$FinalizerLoader[]) -> loadFinalizer
    java.lang.reflect.Method getStartFinalizer(java.lang.Class) -> getStartFinalizer
    java.util.logging.Logger access$000() -> access$000
com.google.common.base.FinalizableReferenceQueue$DecoupledLoader -> com.google.common.base.FinalizableReferenceQueue$DecoupledLoader:
    java.lang.String LOADING_ERROR -> LOADING_ERROR
    java.lang.Class loadFinalizer() -> loadFinalizer
    java.net.URL getBaseUrl() -> getBaseUrl
    java.net.URLClassLoader newLoader(java.net.URL) -> newLoader
com.google.common.base.FinalizableReferenceQueue$DirectLoader -> com.google.common.base.FinalizableReferenceQueue$DirectLoader:
    java.lang.Class loadFinalizer() -> loadFinalizer
com.google.common.base.FinalizableReferenceQueue$FinalizerLoader -> com.google.common.base.FinalizableReferenceQueue$FinalizerLoader:
    java.lang.Class loadFinalizer() -> loadFinalizer
com.google.common.base.FinalizableReferenceQueue$SystemLoader -> com.google.common.base.FinalizableReferenceQueue$SystemLoader:
    java.lang.Class loadFinalizer() -> loadFinalizer
com.google.common.base.FinalizableSoftReference -> com.google.common.base.FinalizableSoftReference:
com.google.common.base.FinalizableWeakReference -> com.google.common.base.FinalizableWeakReference:
com.google.common.base.Function -> com.google.common.base.Function:
    java.lang.Object apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
com.google.common.base.Functions -> com.google.common.base.Functions:
    com.google.common.base.Function toStringFunction() -> toStringFunction
    com.google.common.base.Function identity() -> identity
    com.google.common.base.Function forMap(java.util.Map) -> forMap
    com.google.common.base.Function forMap(java.util.Map,java.lang.Object) -> forMap
    com.google.common.base.Function compose(com.google.common.base.Function,com.google.common.base.Function) -> compose
    com.google.common.base.Function forPredicate(com.google.common.base.Predicate) -> forPredicate
    com.google.common.base.Function constant(java.lang.Object) -> constant
com.google.common.base.Functions$1 -> com.google.common.base.Functions$1:
com.google.common.base.Functions$ConstantFunction -> com.google.common.base.Functions$ConstantFunction:
    java.lang.Object value -> value
    long serialVersionUID -> serialVersionUID
    java.lang.Object apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Functions$ForMapWithDefault -> com.google.common.base.Functions$ForMapWithDefault:
    java.util.Map map -> map
    java.lang.Object defaultValue -> defaultValue
    long serialVersionUID -> serialVersionUID
    java.lang.Object apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Functions$FunctionComposition -> com.google.common.base.Functions$FunctionComposition:
    com.google.common.base.Function g -> g
    com.google.common.base.Function f -> f
    long serialVersionUID -> serialVersionUID
    java.lang.Object apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Functions$FunctionForMapNoDefault -> com.google.common.base.Functions$FunctionForMapNoDefault:
    java.util.Map map -> map
    long serialVersionUID -> serialVersionUID
    java.lang.Object apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Functions$IdentityFunction -> com.google.common.base.Functions$IdentityFunction:
    com.google.common.base.Functions$IdentityFunction INSTANCE -> INSTANCE
    com.google.common.base.Functions$IdentityFunction[] $VALUES -> $VALUES
    com.google.common.base.Functions$IdentityFunction[] values() -> values
    com.google.common.base.Functions$IdentityFunction valueOf(java.lang.String) -> valueOf
    java.lang.Object apply(java.lang.Object) -> apply
    java.lang.String toString() -> toString
com.google.common.base.Functions$PredicateFunction -> com.google.common.base.Functions$PredicateFunction:
    com.google.common.base.Predicate predicate -> predicate
    long serialVersionUID -> serialVersionUID
    java.lang.Boolean apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.base.Functions$ToStringFunction -> com.google.common.base.Functions$ToStringFunction:
    com.google.common.base.Functions$ToStringFunction INSTANCE -> INSTANCE
    com.google.common.base.Functions$ToStringFunction[] $VALUES -> $VALUES
    com.google.common.base.Functions$ToStringFunction[] values() -> values
    com.google.common.base.Functions$ToStringFunction valueOf(java.lang.String) -> valueOf
    java.lang.String apply(java.lang.Object) -> apply
    java.lang.String toString() -> toString
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.base.Joiner -> com.google.common.base.Joiner:
    java.lang.String separator -> separator
    com.google.common.base.Joiner on(java.lang.String) -> on
    com.google.common.base.Joiner on(char) -> on
    java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Iterable) -> appendTo
    java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Object[]) -> appendTo
    java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Object,java.lang.Object,java.lang.Object[]) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Iterable) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Object[]) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Object,java.lang.Object,java.lang.Object[]) -> appendTo
    java.lang.String join(java.lang.Iterable) -> join
    java.lang.String join(java.lang.Object[]) -> join
    java.lang.String join(java.lang.Object,java.lang.Object,java.lang.Object[]) -> join
    com.google.common.base.Joiner useForNull(java.lang.String) -> useForNull
    com.google.common.base.Joiner skipNulls() -> skipNulls
    com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String) -> withKeyValueSeparator
    java.lang.CharSequence toString(java.lang.Object) -> toString
    java.lang.Iterable iterable(java.lang.Object,java.lang.Object,java.lang.Object[]) -> iterable
    java.lang.String access$100(com.google.common.base.Joiner) -> access$100
com.google.common.base.Joiner$1 -> com.google.common.base.Joiner$1:
    java.lang.String val$nullText -> val$nullText
    com.google.common.base.Joiner this$0 -> this$0
    java.lang.CharSequence toString(java.lang.Object) -> toString
    com.google.common.base.Joiner useForNull(java.lang.String) -> useForNull
    com.google.common.base.Joiner skipNulls() -> skipNulls
com.google.common.base.Joiner$2 -> com.google.common.base.Joiner$2:
    com.google.common.base.Joiner this$0 -> this$0
    java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Iterable) -> appendTo
    com.google.common.base.Joiner useForNull(java.lang.String) -> useForNull
    com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String) -> withKeyValueSeparator
com.google.common.base.Joiner$3 -> com.google.common.base.Joiner$3:
    java.lang.Object[] val$rest -> val$rest
    java.lang.Object val$first -> val$first
    java.lang.Object val$second -> val$second
    int size() -> size
    java.lang.Object get(int) -> get
com.google.common.base.Joiner$MapJoiner -> com.google.common.base.Joiner$MapJoiner:
    com.google.common.base.Joiner joiner -> joiner
    java.lang.String keyValueSeparator -> keyValueSeparator
    java.lang.Appendable appendTo(java.lang.Appendable,java.util.Map) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Map) -> appendTo
    java.lang.String join(java.util.Map) -> join
    com.google.common.base.Joiner$MapJoiner useForNull(java.lang.String) -> useForNull
com.google.common.base.Objects -> com.google.common.base.Objects:
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int hashCode(java.lang.Object[]) -> hashCode
    com.google.common.base.Objects$ToStringHelper toStringHelper(java.lang.Object) -> toStringHelper
    com.google.common.base.Objects$ToStringHelper toStringHelper(java.lang.Class) -> toStringHelper
    com.google.common.base.Objects$ToStringHelper toStringHelper(java.lang.String) -> toStringHelper
    java.lang.String simpleName(java.lang.Class) -> simpleName
    java.lang.Object firstNonNull(java.lang.Object,java.lang.Object) -> firstNonNull
com.google.common.base.Objects$1 -> com.google.common.base.Objects$1:
com.google.common.base.Objects$ToStringHelper -> com.google.common.base.Objects$ToStringHelper:
    java.lang.StringBuilder builder -> builder
    java.lang.String separator -> separator
    com.google.common.base.Objects$ToStringHelper add(java.lang.String,java.lang.Object) -> add
    com.google.common.base.Objects$ToStringHelper addValue(java.lang.Object) -> addValue
    java.lang.String toString() -> toString
com.google.common.base.PairwiseEquivalence -> com.google.common.base.PairwiseEquivalence:
    com.google.common.base.Equivalence elementEquivalence -> elementEquivalence
    long serialVersionUID -> serialVersionUID
    boolean equivalent(java.lang.Iterable,java.lang.Iterable) -> equivalent
    int hash(java.lang.Iterable) -> hash
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int hash(java.lang.Object) -> hash
    boolean equivalent(java.lang.Object,java.lang.Object) -> equivalent
com.google.common.base.Platform -> com.google.common.base.Platform:
    java.lang.ThreadLocal DEST_TL -> DEST_TL
    boolean isInstance(java.lang.Class,java.lang.Object) -> isInstance
    char[] charBufferFromThreadLocal() -> charBufferFromThreadLocal
    long systemNanoTime() -> systemNanoTime
    com.google.common.base.CharMatcher precomputeCharMatcher(com.google.common.base.CharMatcher) -> precomputeCharMatcher
com.google.common.base.Platform$1 -> com.google.common.base.Platform$1:
    char[] initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.google.common.base.Preconditions -> com.google.common.base.Preconditions:
    void checkArgument(boolean) -> checkArgument
    void checkArgument(boolean,java.lang.Object) -> checkArgument
    void checkArgument(boolean,java.lang.String,java.lang.Object[]) -> checkArgument
    void checkState(boolean) -> checkState
    void checkState(boolean,java.lang.Object) -> checkState
    void checkState(boolean,java.lang.String,java.lang.Object[]) -> checkState
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[]) -> checkNotNull
    int checkElementIndex(int,int) -> checkElementIndex
    int checkElementIndex(int,int,java.lang.String) -> checkElementIndex
    java.lang.String badElementIndex(int,int,java.lang.String) -> badElementIndex
    int checkPositionIndex(int,int) -> checkPositionIndex
    int checkPositionIndex(int,int,java.lang.String) -> checkPositionIndex
    java.lang.String badPositionIndex(int,int,java.lang.String) -> badPositionIndex
    void checkPositionIndexes(int,int,int) -> checkPositionIndexes
    java.lang.String badPositionIndexes(int,int,int) -> badPositionIndexes
    java.lang.String format(java.lang.String,java.lang.Object[]) -> format
com.google.common.base.Predicate -> com.google.common.base.Predicate:
    boolean apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
com.google.common.base.Predicates -> com.google.common.base.Predicates:
    com.google.common.base.Joiner COMMA_JOINER -> COMMA_JOINER
    com.google.common.base.Predicate alwaysTrue() -> alwaysTrue
    com.google.common.base.Predicate alwaysFalse() -> alwaysFalse
    com.google.common.base.Predicate isNull() -> isNull
    com.google.common.base.Predicate notNull() -> notNull
    com.google.common.base.Predicate not(com.google.common.base.Predicate) -> not
    com.google.common.base.Predicate and(java.lang.Iterable) -> and
    com.google.common.base.Predicate and(com.google.common.base.Predicate[]) -> and
    com.google.common.base.Predicate and(com.google.common.base.Predicate,com.google.common.base.Predicate) -> and
    com.google.common.base.Predicate or(java.lang.Iterable) -> or
    com.google.common.base.Predicate or(com.google.common.base.Predicate[]) -> or
    com.google.common.base.Predicate or(com.google.common.base.Predicate,com.google.common.base.Predicate) -> or
    com.google.common.base.Predicate equalTo(java.lang.Object) -> equalTo
    com.google.common.base.Predicate instanceOf(java.lang.Class) -> instanceOf
    com.google.common.base.Predicate in(java.util.Collection) -> in
    com.google.common.base.Predicate compose(com.google.common.base.Predicate,com.google.common.base.Function) -> compose
    com.google.common.base.Predicate containsPattern(java.lang.String) -> containsPattern
    com.google.common.base.Predicate contains(java.util.regex.Pattern) -> contains
    java.util.List asList(com.google.common.base.Predicate,com.google.common.base.Predicate) -> asList
    java.util.List defensiveCopy(java.lang.Object[]) -> defensiveCopy
    java.util.List defensiveCopy(java.lang.Iterable) -> defensiveCopy
    com.google.common.base.Joiner access$700() -> access$700
com.google.common.base.Predicates$1 -> com.google.common.base.Predicates$1:
com.google.common.base.Predicates$AndPredicate -> com.google.common.base.Predicates$AndPredicate:
    java.util.List components -> components
    long serialVersionUID -> serialVersionUID
    boolean apply(java.lang.Object) -> apply
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.common.base.Predicates$CompositionPredicate -> com.google.common.base.Predicates$CompositionPredicate:
    com.google.common.base.Predicate p -> p
    com.google.common.base.Function f -> f
    long serialVersionUID -> serialVersionUID
    boolean apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Predicates$ContainsPatternPredicate -> com.google.common.base.Predicates$ContainsPatternPredicate:
    java.util.regex.Pattern pattern -> pattern
    long serialVersionUID -> serialVersionUID
    boolean apply(java.lang.CharSequence) -> apply
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    boolean apply(java.lang.Object) -> apply
com.google.common.base.Predicates$InPredicate -> com.google.common.base.Predicates$InPredicate:
    java.util.Collection target -> target
    long serialVersionUID -> serialVersionUID
    boolean apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Predicates$InstanceOfPredicate -> com.google.common.base.Predicates$InstanceOfPredicate:
    java.lang.Class clazz -> clazz
    long serialVersionUID -> serialVersionUID
    boolean apply(java.lang.Object) -> apply
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.common.base.Predicates$IsEqualToPredicate -> com.google.common.base.Predicates$IsEqualToPredicate:
    java.lang.Object target -> target
    long serialVersionUID -> serialVersionUID
    boolean apply(java.lang.Object) -> apply
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.common.base.Predicates$NotPredicate -> com.google.common.base.Predicates$NotPredicate:
    com.google.common.base.Predicate predicate -> predicate
    long serialVersionUID -> serialVersionUID
    boolean apply(java.lang.Object) -> apply
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.common.base.Predicates$ObjectPredicate -> com.google.common.base.Predicates$ObjectPredicate:
    com.google.common.base.Predicates$ObjectPredicate ALWAYS_TRUE -> ALWAYS_TRUE
    com.google.common.base.Predicates$ObjectPredicate ALWAYS_FALSE -> ALWAYS_FALSE
    com.google.common.base.Predicates$ObjectPredicate IS_NULL -> IS_NULL
    com.google.common.base.Predicates$ObjectPredicate NOT_NULL -> NOT_NULL
    com.google.common.base.Predicates$ObjectPredicate[] $VALUES -> $VALUES
    com.google.common.base.Predicates$ObjectPredicate[] values() -> values
    com.google.common.base.Predicates$ObjectPredicate valueOf(java.lang.String) -> valueOf
    com.google.common.base.Predicate withNarrowedType() -> withNarrowedType
com.google.common.base.Predicates$ObjectPredicate$1 -> com.google.common.base.Predicates$ObjectPredicate$1:
    boolean apply(java.lang.Object) -> apply
com.google.common.base.Predicates$ObjectPredicate$2 -> com.google.common.base.Predicates$ObjectPredicate$2:
    boolean apply(java.lang.Object) -> apply
com.google.common.base.Predicates$ObjectPredicate$3 -> com.google.common.base.Predicates$ObjectPredicate$3:
    boolean apply(java.lang.Object) -> apply
com.google.common.base.Predicates$ObjectPredicate$4 -> com.google.common.base.Predicates$ObjectPredicate$4:
    boolean apply(java.lang.Object) -> apply
com.google.common.base.Predicates$OrPredicate -> com.google.common.base.Predicates$OrPredicate:
    java.util.List components -> components
    long serialVersionUID -> serialVersionUID
    boolean apply(java.lang.Object) -> apply
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.common.base.Splitter -> com.google.common.base.Splitter:
    com.google.common.base.CharMatcher trimmer -> trimmer
    boolean omitEmptyStrings -> omitEmptyStrings
    com.google.common.base.Splitter$Strategy strategy -> strategy
    int limit -> limit
    com.google.common.base.Splitter on(char) -> on
    com.google.common.base.Splitter on(com.google.common.base.CharMatcher) -> on
    com.google.common.base.Splitter on(java.lang.String) -> on
    com.google.common.base.Splitter on(java.util.regex.Pattern) -> on
    com.google.common.base.Splitter onPattern(java.lang.String) -> onPattern
    com.google.common.base.Splitter fixedLength(int) -> fixedLength
    com.google.common.base.Splitter omitEmptyStrings() -> omitEmptyStrings
    com.google.common.base.Splitter limit(int) -> limit
    com.google.common.base.Splitter trimResults() -> trimResults
    com.google.common.base.Splitter trimResults(com.google.common.base.CharMatcher) -> trimResults
    java.lang.Iterable split(java.lang.CharSequence) -> split
    com.google.common.base.Splitter$Strategy access$000(com.google.common.base.Splitter) -> access$000
    com.google.common.base.CharMatcher access$200(com.google.common.base.Splitter) -> access$200
    boolean access$300(com.google.common.base.Splitter) -> access$300
    int access$400(com.google.common.base.Splitter) -> access$400
com.google.common.base.Splitter$1 -> com.google.common.base.Splitter$1:
    com.google.common.base.CharMatcher val$separatorMatcher -> val$separatorMatcher
    com.google.common.base.Splitter$SplittingIterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
    java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
com.google.common.base.Splitter$1$1 -> com.google.common.base.Splitter$1$1:
    com.google.common.base.Splitter$1 this$0 -> this$0
    int separatorStart(int) -> separatorStart
    int separatorEnd(int) -> separatorEnd
com.google.common.base.Splitter$2 -> com.google.common.base.Splitter$2:
    java.lang.String val$separator -> val$separator
    com.google.common.base.Splitter$SplittingIterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
    java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
com.google.common.base.Splitter$2$1 -> com.google.common.base.Splitter$2$1:
    com.google.common.base.Splitter$2 this$0 -> this$0
    int separatorStart(int) -> separatorStart
    int separatorEnd(int) -> separatorEnd
com.google.common.base.Splitter$3 -> com.google.common.base.Splitter$3:
    java.util.regex.Pattern val$separatorPattern -> val$separatorPattern
    com.google.common.base.Splitter$SplittingIterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
    java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
com.google.common.base.Splitter$3$1 -> com.google.common.base.Splitter$3$1:
    java.util.regex.Matcher val$matcher -> val$matcher
    com.google.common.base.Splitter$3 this$0 -> this$0
    int separatorStart(int) -> separatorStart
    int separatorEnd(int) -> separatorEnd
com.google.common.base.Splitter$4 -> com.google.common.base.Splitter$4:
    int val$length -> val$length
    com.google.common.base.Splitter$SplittingIterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
    java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
com.google.common.base.Splitter$4$1 -> com.google.common.base.Splitter$4$1:
    com.google.common.base.Splitter$4 this$0 -> this$0
    int separatorStart(int) -> separatorStart
    int separatorEnd(int) -> separatorEnd
com.google.common.base.Splitter$5 -> com.google.common.base.Splitter$5:
    java.lang.CharSequence val$sequence -> val$sequence
    com.google.common.base.Splitter this$0 -> this$0
    java.util.Iterator iterator() -> iterator
com.google.common.base.Splitter$6 -> com.google.common.base.Splitter$6:
    int[] $SwitchMap$com$google$common$base$Splitter$AbstractIterator$State -> $SwitchMap$com$google$common$base$Splitter$AbstractIterator$State
com.google.common.base.Splitter$AbstractIterator -> com.google.common.base.Splitter$AbstractIterator:
    com.google.common.base.Splitter$AbstractIterator$State state -> state
    java.lang.Object next -> next
    java.lang.Object computeNext() -> computeNext
    java.lang.Object endOfData() -> endOfData
    boolean hasNext() -> hasNext
    boolean tryToComputeNext() -> tryToComputeNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.base.Splitter$AbstractIterator$State -> com.google.common.base.Splitter$AbstractIterator$State:
    com.google.common.base.Splitter$AbstractIterator$State READY -> READY
    com.google.common.base.Splitter$AbstractIterator$State NOT_READY -> NOT_READY
    com.google.common.base.Splitter$AbstractIterator$State DONE -> DONE
    com.google.common.base.Splitter$AbstractIterator$State FAILED -> FAILED
    com.google.common.base.Splitter$AbstractIterator$State[] $VALUES -> $VALUES
    com.google.common.base.Splitter$AbstractIterator$State[] values() -> values
    com.google.common.base.Splitter$AbstractIterator$State valueOf(java.lang.String) -> valueOf
com.google.common.base.Splitter$SplittingIterator -> com.google.common.base.Splitter$SplittingIterator:
    java.lang.CharSequence toSplit -> toSplit
    com.google.common.base.CharMatcher trimmer -> trimmer
    boolean omitEmptyStrings -> omitEmptyStrings
    int offset -> offset
    int limit -> limit
    int separatorStart(int) -> separatorStart
    int separatorEnd(int) -> separatorEnd
    java.lang.String computeNext() -> computeNext
    java.lang.Object computeNext() -> computeNext
com.google.common.base.Splitter$Strategy -> com.google.common.base.Splitter$Strategy:
    java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> iterator
com.google.common.base.Strings -> com.google.common.base.Strings:
    java.lang.String nullToEmpty(java.lang.String) -> nullToEmpty
    java.lang.String emptyToNull(java.lang.String) -> emptyToNull
    boolean isNullOrEmpty(java.lang.String) -> isNullOrEmpty
    java.lang.String padStart(java.lang.String,int,char) -> padStart
    java.lang.String padEnd(java.lang.String,int,char) -> padEnd
    java.lang.String repeat(java.lang.String,int) -> repeat
com.google.common.base.Supplier -> com.google.common.base.Supplier:
    java.lang.Object get() -> get
com.google.common.base.Suppliers -> com.google.common.base.Suppliers:
    com.google.common.base.Supplier compose(com.google.common.base.Function,com.google.common.base.Supplier) -> compose
    com.google.common.base.Supplier memoize(com.google.common.base.Supplier) -> memoize
    com.google.common.base.Supplier memoizeWithExpiration(com.google.common.base.Supplier,long,java.util.concurrent.TimeUnit) -> memoizeWithExpiration
    com.google.common.base.Supplier ofInstance(java.lang.Object) -> ofInstance
    com.google.common.base.Supplier synchronizedSupplier(com.google.common.base.Supplier) -> synchronizedSupplier
    com.google.common.base.Function supplierFunction() -> supplierFunction
com.google.common.base.Suppliers$ExpiringMemoizingSupplier -> com.google.common.base.Suppliers$ExpiringMemoizingSupplier:
    com.google.common.base.Supplier delegate -> delegate
    long durationNanos -> durationNanos
    java.lang.Object value -> value
    long expirationNanos -> expirationNanos
    long serialVersionUID -> serialVersionUID
    java.lang.Object get() -> get
com.google.common.base.Suppliers$MemoizingSupplier -> com.google.common.base.Suppliers$MemoizingSupplier:
    com.google.common.base.Supplier delegate -> delegate
    boolean initialized -> initialized
    java.lang.Object value -> value
    long serialVersionUID -> serialVersionUID
    java.lang.Object get() -> get
com.google.common.base.Suppliers$SupplierComposition -> com.google.common.base.Suppliers$SupplierComposition:
    com.google.common.base.Function function -> function
    com.google.common.base.Supplier supplier -> supplier
    long serialVersionUID -> serialVersionUID
    java.lang.Object get() -> get
com.google.common.base.Suppliers$SupplierFunction -> com.google.common.base.Suppliers$SupplierFunction:
    com.google.common.base.Suppliers$SupplierFunction INSTANCE -> INSTANCE
    com.google.common.base.Suppliers$SupplierFunction[] $VALUES -> $VALUES
    com.google.common.base.Suppliers$SupplierFunction[] values() -> values
    com.google.common.base.Suppliers$SupplierFunction valueOf(java.lang.String) -> valueOf
    java.lang.Object apply(com.google.common.base.Supplier) -> apply
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.base.Suppliers$SupplierOfInstance -> com.google.common.base.Suppliers$SupplierOfInstance:
    java.lang.Object instance -> instance
    long serialVersionUID -> serialVersionUID
    java.lang.Object get() -> get
com.google.common.base.Suppliers$ThreadSafeSupplier -> com.google.common.base.Suppliers$ThreadSafeSupplier:
    com.google.common.base.Supplier delegate -> delegate
    long serialVersionUID -> serialVersionUID
    java.lang.Object get() -> get
com.google.common.base.Throwables -> com.google.common.base.Throwables:
    void propagateIfInstanceOf(java.lang.Throwable,java.lang.Class) -> propagateIfInstanceOf
    void propagateIfPossible(java.lang.Throwable) -> propagateIfPossible
    void propagateIfPossible(java.lang.Throwable,java.lang.Class) -> propagateIfPossible
    void propagateIfPossible(java.lang.Throwable,java.lang.Class,java.lang.Class) -> propagateIfPossible
    java.lang.RuntimeException propagate(java.lang.Throwable) -> propagate
    java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
    java.util.List getCausalChain(java.lang.Throwable) -> getCausalChain
    java.lang.String getStackTraceAsString(java.lang.Throwable) -> getStackTraceAsString
    java.lang.Exception throwCause(java.lang.Exception,boolean) -> throwCause
com.google.common.base.Ticker -> com.google.common.base.Ticker:
    long read() -> read
com.google.common.base.internal.Finalizer -> com.google.common.base.internal.Finalizer:
    java.util.logging.Logger logger -> logger
    java.lang.String FINALIZABLE_REFERENCE -> FINALIZABLE_REFERENCE
    java.lang.ref.WeakReference finalizableReferenceClassReference -> finalizableReferenceClassReference
    java.lang.ref.PhantomReference frqReference -> frqReference
    java.lang.ref.ReferenceQueue queue -> queue
    java.lang.reflect.Field inheritableThreadLocals -> inheritableThreadLocals
    java.lang.ref.ReferenceQueue startFinalizer(java.lang.Class,java.lang.Object) -> startFinalizer
    void run() -> run
    void cleanUp(java.lang.ref.Reference) -> cleanUp
    java.lang.reflect.Method getFinalizeReferentMethod() -> getFinalizeReferentMethod
    java.lang.reflect.Field getInheritableThreadLocalsField() -> getInheritableThreadLocalsField
com.google.common.base.internal.Finalizer$1 -> com.google.common.base.internal.Finalizer$1:
com.google.common.base.internal.Finalizer$ShutDown -> com.google.common.base.internal.Finalizer$ShutDown:
com.google.common.base.package-info -> com.google.common.base.package-info:
com.google.common.collect.AbstractBiMap -> com.google.common.collect.AbstractBiMap:
    java.util.Map delegate -> delegate
    com.google.common.collect.AbstractBiMap inverse -> inverse
    java.util.Set keySet -> keySet
    java.util.Set valueSet -> valueSet
    java.util.Set entrySet -> entrySet
    long serialVersionUID -> serialVersionUID
    java.util.Map delegate() -> delegate
    void setDelegates(java.util.Map,java.util.Map) -> setDelegates
    void setInverse(com.google.common.collect.AbstractBiMap) -> setInverse
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    java.lang.Object putInBothMaps(java.lang.Object,java.lang.Object,boolean) -> putInBothMaps
    void updateInverseMap(java.lang.Object,boolean,java.lang.Object,java.lang.Object) -> updateInverseMap
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeFromBothMaps(java.lang.Object) -> removeFromBothMaps
    void removeFromInverseMap(java.lang.Object) -> removeFromInverseMap
    void putAll(java.util.Map) -> putAll
    void clear() -> clear
    com.google.common.collect.BiMap inverse() -> inverse
    java.util.Set keySet() -> keySet
    java.util.Set values() -> values
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    java.lang.Object delegate() -> delegate
    java.util.Map access$200(com.google.common.collect.AbstractBiMap) -> access$200
    java.lang.Object access$300(com.google.common.collect.AbstractBiMap,java.lang.Object) -> access$300
    void access$400(com.google.common.collect.AbstractBiMap,java.lang.Object) -> access$400
    com.google.common.collect.AbstractBiMap access$600(com.google.common.collect.AbstractBiMap) -> access$600
    void access$800(com.google.common.collect.AbstractBiMap,java.lang.Object,boolean,java.lang.Object,java.lang.Object) -> access$800
com.google.common.collect.AbstractBiMap$1 -> com.google.common.collect.AbstractBiMap$1:
com.google.common.collect.AbstractBiMap$EntrySet -> com.google.common.collect.AbstractBiMap$EntrySet:
    java.util.Set esDelegate -> esDelegate
    com.google.common.collect.AbstractBiMap this$0 -> this$0
    java.util.Set delegate() -> delegate
    void clear() -> clear
    boolean remove(java.lang.Object) -> remove
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.AbstractBiMap$EntrySet$1 -> com.google.common.collect.AbstractBiMap$EntrySet$1:
    java.util.Map$Entry entry -> entry
    java.util.Iterator val$iterator -> val$iterator
    com.google.common.collect.AbstractBiMap$EntrySet this$1 -> this$1
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.AbstractBiMap$EntrySet$1$1 -> com.google.common.collect.AbstractBiMap$EntrySet$1$1:
    java.util.Map$Entry val$finalEntry -> val$finalEntry
    com.google.common.collect.AbstractBiMap$EntrySet$1 this$2 -> this$2
    java.util.Map$Entry delegate() -> delegate
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object delegate() -> delegate
com.google.common.collect.AbstractBiMap$Inverse -> com.google.common.collect.AbstractBiMap$Inverse:
    long serialVersionUID -> serialVersionUID
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object readResolve() -> readResolve
    java.util.Collection values() -> values
    java.lang.Object delegate() -> delegate
com.google.common.collect.AbstractBiMap$KeySet -> com.google.common.collect.AbstractBiMap$KeySet:
    com.google.common.collect.AbstractBiMap this$0 -> this$0
    java.util.Set delegate() -> delegate
    void clear() -> clear
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Iterator iterator() -> iterator
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.AbstractBiMap$KeySet$1 -> com.google.common.collect.AbstractBiMap$KeySet$1:
    java.util.Map$Entry entry -> entry
    java.util.Iterator val$iterator -> val$iterator
    com.google.common.collect.AbstractBiMap$KeySet this$1 -> this$1
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.AbstractBiMap$ValueSet -> com.google.common.collect.AbstractBiMap$ValueSet:
    java.util.Set valuesDelegate -> valuesDelegate
    com.google.common.collect.AbstractBiMap this$0 -> this$0
    java.util.Set delegate() -> delegate
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.AbstractBiMap$ValueSet$1 -> com.google.common.collect.AbstractBiMap$ValueSet$1:
    java.lang.Object valueToRemove -> valueToRemove
    java.util.Iterator val$iterator -> val$iterator
    com.google.common.collect.AbstractBiMap$ValueSet this$1 -> this$1
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.AbstractIndexedListIterator -> com.google.common.collect.AbstractIndexedListIterator:
    int size -> size
    int position -> position
    java.lang.Object get(int) -> get
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    int nextIndex() -> nextIndex
    boolean hasPrevious() -> hasPrevious
    java.lang.Object previous() -> previous
    int previousIndex() -> previousIndex
com.google.common.collect.AbstractIterator -> com.google.common.collect.AbstractIterator:
    com.google.common.collect.AbstractIterator$State state -> state
    java.lang.Object next -> next
    java.lang.Object computeNext() -> computeNext
    java.lang.Object endOfData() -> endOfData
    boolean hasNext() -> hasNext
    boolean tryToComputeNext() -> tryToComputeNext
    java.lang.Object next() -> next
    java.lang.Object peek() -> peek
com.google.common.collect.AbstractIterator$1 -> com.google.common.collect.AbstractIterator$1:
    int[] $SwitchMap$com$google$common$collect$AbstractIterator$State -> $SwitchMap$com$google$common$collect$AbstractIterator$State
com.google.common.collect.AbstractIterator$State -> com.google.common.collect.AbstractIterator$State:
    com.google.common.collect.AbstractIterator$State READY -> READY
    com.google.common.collect.AbstractIterator$State NOT_READY -> NOT_READY
    com.google.common.collect.AbstractIterator$State DONE -> DONE
    com.google.common.collect.AbstractIterator$State FAILED -> FAILED
    com.google.common.collect.AbstractIterator$State[] $VALUES -> $VALUES
    com.google.common.collect.AbstractIterator$State[] values() -> values
    com.google.common.collect.AbstractIterator$State valueOf(java.lang.String) -> valueOf
com.google.common.collect.AbstractLinkedIterator -> com.google.common.collect.AbstractLinkedIterator:
    java.lang.Object nextOrNull -> nextOrNull
    java.lang.Object computeNext(java.lang.Object) -> computeNext
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.AbstractListMultimap -> com.google.common.collect.AbstractListMultimap:
    long serialVersionUID -> serialVersionUID
    java.util.List createCollection() -> createCollection
    java.util.List get(java.lang.Object) -> get
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.util.Map asMap() -> asMap
    boolean equals(java.lang.Object) -> equals
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection createCollection() -> createCollection
com.google.common.collect.AbstractMapBasedMultiset -> com.google.common.collect.AbstractMapBasedMultiset:
    java.util.Map backingMap -> backingMap
    long size -> size
    com.google.common.collect.AbstractMapBasedMultiset$EntrySet entrySet -> entrySet
    long serialVersionUID -> serialVersionUID
    java.util.Map backingMap() -> backingMap
    void setBackingMap(java.util.Map) -> setBackingMap
    java.util.Set entrySet() -> entrySet
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    int count(java.lang.Object) -> count
    int add(java.lang.Object,int) -> add
    int remove(java.lang.Object,int) -> remove
    int setCount(java.lang.Object,int) -> setCount
    int getAndSet(java.util.concurrent.atomic.AtomicInteger,int) -> getAndSet
    int removeAllOccurrences(java.lang.Object,java.util.Map) -> removeAllOccurrences
    java.util.Set createElementSet() -> createElementSet
    void readObjectNoData() -> readObjectNoData
    java.util.Map access$100(com.google.common.collect.AbstractMapBasedMultiset) -> access$100
    long access$222(com.google.common.collect.AbstractMapBasedMultiset,long) -> access$222
    long access$202(com.google.common.collect.AbstractMapBasedMultiset,long) -> access$202
    long access$210(com.google.common.collect.AbstractMapBasedMultiset) -> access$210
    int access$300(com.google.common.collect.AbstractMapBasedMultiset,java.lang.Object,java.util.Map) -> access$300
com.google.common.collect.AbstractMapBasedMultiset$1 -> com.google.common.collect.AbstractMapBasedMultiset$1:
com.google.common.collect.AbstractMapBasedMultiset$EntrySet -> com.google.common.collect.AbstractMapBasedMultiset$EntrySet:
    com.google.common.collect.AbstractMapBasedMultiset this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.AbstractMapBasedMultiset$EntrySet$1 -> com.google.common.collect.AbstractMapBasedMultiset$EntrySet$1:
    java.util.Map$Entry toRemove -> toRemove
    java.util.Iterator val$backingEntries -> val$backingEntries
    com.google.common.collect.AbstractMapBasedMultiset$EntrySet this$1 -> this$1
    boolean hasNext() -> hasNext
    com.google.common.collect.Multiset$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.AbstractMapBasedMultiset$EntrySet$1$1 -> com.google.common.collect.AbstractMapBasedMultiset$EntrySet$1$1:
    java.util.Map$Entry val$mapEntry -> val$mapEntry
    com.google.common.collect.AbstractMapBasedMultiset$EntrySet$1 this$2 -> this$2
    java.lang.Object getElement() -> getElement
    int getCount() -> getCount
com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet -> com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet:
    java.util.Map map -> map
    java.util.Set delegate -> delegate
    com.google.common.collect.AbstractMapBasedMultiset this$0 -> this$0
    java.util.Set delegate() -> delegate
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    java.util.Map getMap() -> getMap
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet$1 -> com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet$1:
    java.util.Map$Entry toRemove -> toRemove
    java.util.Iterator val$entries -> val$entries
    com.google.common.collect.AbstractMapBasedMultiset$MapBasedElementSet this$1 -> this$1
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator -> com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator:
    java.util.Iterator entryIterator -> entryIterator
    java.util.Map$Entry currentEntry -> currentEntry
    int occurrencesLeft -> occurrencesLeft
    boolean canRemove -> canRemove
    com.google.common.collect.AbstractMapBasedMultiset this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.AbstractMapEntry -> com.google.common.collect.AbstractMapEntry:
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.AbstractMultimap -> com.google.common.collect.AbstractMultimap:
    java.util.Map map -> map
    int totalSize -> totalSize
    java.util.Set keySet -> keySet
    com.google.common.collect.Multiset multiset -> multiset
    java.util.Collection valuesCollection -> valuesCollection
    java.util.Collection entries -> entries
    java.util.Map asMap -> asMap
    long serialVersionUID -> serialVersionUID
    void setMap(java.util.Map) -> setMap
    java.util.Collection createCollection() -> createCollection
    java.util.Collection createCollection(java.lang.Object) -> createCollection
    java.util.Map backingMap() -> backingMap
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.util.Collection getOrCreateCollection(java.lang.Object) -> getOrCreateCollection
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection unmodifiableCollectionSubclass(java.util.Collection) -> unmodifiableCollectionSubclass
    void clear() -> clear
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection wrapCollection(java.lang.Object,java.util.Collection) -> wrapCollection
    java.util.List wrapList(java.lang.Object,java.util.List,com.google.common.collect.AbstractMultimap$WrappedCollection) -> wrapList
    java.util.Iterator iteratorOrListIterator(java.util.Collection) -> iteratorOrListIterator
    java.util.Set keySet() -> keySet
    java.util.Set createKeySet() -> createKeySet
    com.google.common.collect.Multiset keys() -> keys
    int removeValuesForKey(java.lang.Object) -> removeValuesForKey
    java.util.Collection values() -> values
    java.util.Collection entries() -> entries
    java.util.Collection createEntries() -> createEntries
    java.util.Iterator createEntryIterator() -> createEntryIterator
    java.util.Map asMap() -> asMap
    java.util.Map createAsMap() -> createAsMap
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.util.Map access$000(com.google.common.collect.AbstractMultimap) -> access$000
    java.util.Iterator access$100(com.google.common.collect.AbstractMultimap,java.util.Collection) -> access$100
    int access$210(com.google.common.collect.AbstractMultimap) -> access$210
    int access$208(com.google.common.collect.AbstractMultimap) -> access$208
    int access$212(com.google.common.collect.AbstractMultimap,int) -> access$212
    int access$220(com.google.common.collect.AbstractMultimap,int) -> access$220
    java.util.List access$300(com.google.common.collect.AbstractMultimap,java.lang.Object,java.util.List,com.google.common.collect.AbstractMultimap$WrappedCollection) -> access$300
    int access$500(com.google.common.collect.AbstractMultimap,java.lang.Object) -> access$500
    int access$200(com.google.common.collect.AbstractMultimap) -> access$200
    java.util.Collection access$1300(com.google.common.collect.AbstractMultimap,java.lang.Object,java.util.Collection) -> access$1300
com.google.common.collect.AbstractMultimap$1 -> com.google.common.collect.AbstractMultimap$1:
com.google.common.collect.AbstractMultimap$AsMap -> com.google.common.collect.AbstractMultimap$AsMap:
    java.util.Map submap -> submap
    java.util.Set entrySet -> entrySet
    com.google.common.collect.AbstractMultimap this$0 -> this$0
    java.util.Set entrySet() -> entrySet
    boolean containsKey(java.lang.Object) -> containsKey
    java.util.Collection get(java.lang.Object) -> get
    java.util.Set keySet() -> keySet
    java.util.Collection remove(java.lang.Object) -> remove
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
com.google.common.collect.AbstractMultimap$AsMap$AsMapEntries -> com.google.common.collect.AbstractMultimap$AsMap$AsMapEntries:
    com.google.common.collect.AbstractMultimap$AsMap this$1 -> this$1
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator -> com.google.common.collect.AbstractMultimap$AsMap$AsMapIterator:
    java.util.Iterator delegateIterator -> delegateIterator
    java.util.Collection collection -> collection
    com.google.common.collect.AbstractMultimap$AsMap this$1 -> this$1
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.AbstractMultimap$Entries -> com.google.common.collect.AbstractMultimap$Entries:
    com.google.common.collect.AbstractMultimap this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    void clear() -> clear
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.AbstractMultimap$EntryIterator -> com.google.common.collect.AbstractMultimap$EntryIterator:
    java.util.Iterator keyIterator -> keyIterator
    java.lang.Object key -> key
    java.util.Collection collection -> collection
    java.util.Iterator valueIterator -> valueIterator
    com.google.common.collect.AbstractMultimap this$0 -> this$0
    void findValueIteratorAndKey() -> findValueIteratorAndKey
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.AbstractMultimap$EntrySet -> com.google.common.collect.AbstractMultimap$EntrySet:
    com.google.common.collect.AbstractMultimap this$0 -> this$0
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.AbstractMultimap$KeySet -> com.google.common.collect.AbstractMultimap$KeySet:
    java.util.Map subMap -> subMap
    com.google.common.collect.AbstractMultimap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean containsAll(java.util.Collection) -> containsAll
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.AbstractMultimap$KeySet$1 -> com.google.common.collect.AbstractMultimap$KeySet$1:
    java.util.Iterator entryIterator -> entryIterator
    java.util.Map$Entry entry -> entry
    com.google.common.collect.AbstractMultimap$KeySet this$1 -> this$1
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.AbstractMultimap$MultisetEntry -> com.google.common.collect.AbstractMultimap$MultisetEntry:
    java.util.Map$Entry entry -> entry
    com.google.common.collect.AbstractMultimap this$0 -> this$0
    java.lang.Object getElement() -> getElement
    int getCount() -> getCount
com.google.common.collect.AbstractMultimap$MultisetEntryIterator -> com.google.common.collect.AbstractMultimap$MultisetEntryIterator:
    java.util.Iterator asMapIterator -> asMapIterator
    com.google.common.collect.AbstractMultimap this$0 -> this$0
    boolean hasNext() -> hasNext
    com.google.common.collect.Multiset$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.AbstractMultimap$MultisetKeyIterator -> com.google.common.collect.AbstractMultimap$MultisetKeyIterator:
    java.util.Iterator entryIterator -> entryIterator
    com.google.common.collect.AbstractMultimap this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.AbstractMultimap$MultisetView -> com.google.common.collect.AbstractMultimap$MultisetView:
    java.util.Set entrySet -> entrySet
    com.google.common.collect.AbstractMultimap this$0 -> this$0
    int remove(java.lang.Object,int) -> remove
    java.util.Set elementSet() -> elementSet
    java.util.Set entrySet() -> entrySet
    java.util.Iterator iterator() -> iterator
    int count(java.lang.Object) -> count
    int size() -> size
    void clear() -> clear
com.google.common.collect.AbstractMultimap$MultisetView$EntrySet -> com.google.common.collect.AbstractMultimap$MultisetView$EntrySet:
    com.google.common.collect.AbstractMultimap$MultisetView this$1 -> this$1
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    void clear() -> clear
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.AbstractMultimap$RandomAccessWrappedList -> com.google.common.collect.AbstractMultimap$RandomAccessWrappedList:
    com.google.common.collect.AbstractMultimap this$0 -> this$0
com.google.common.collect.AbstractMultimap$SortedAsMap -> com.google.common.collect.AbstractMultimap$SortedAsMap:
    java.util.SortedSet sortedKeySet -> sortedKeySet
    com.google.common.collect.AbstractMultimap this$0 -> this$0
    java.util.SortedMap sortedMap() -> sortedMap
    java.util.Comparator comparator() -> comparator
    java.lang.Object firstKey() -> firstKey
    java.lang.Object lastKey() -> lastKey
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.SortedSet keySet() -> keySet
    java.util.Set keySet() -> keySet
com.google.common.collect.AbstractMultimap$SortedKeySet -> com.google.common.collect.AbstractMultimap$SortedKeySet:
    com.google.common.collect.AbstractMultimap this$0 -> this$0
    java.util.SortedMap sortedMap() -> sortedMap
    java.util.Comparator comparator() -> comparator
    java.lang.Object first() -> first
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.lang.Object last() -> last
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.AbstractMultimap$ValueIterator -> com.google.common.collect.AbstractMultimap$ValueIterator:
    java.util.Iterator entryIterator -> entryIterator
    com.google.common.collect.AbstractMultimap this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.AbstractMultimap$Values -> com.google.common.collect.AbstractMultimap$Values:
    com.google.common.collect.AbstractMultimap this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
com.google.common.collect.AbstractMultimap$WrappedCollection -> com.google.common.collect.AbstractMultimap$WrappedCollection:
    java.lang.Object key -> key
    java.util.Collection delegate -> delegate
    com.google.common.collect.AbstractMultimap$WrappedCollection ancestor -> ancestor
    java.util.Collection ancestorDelegate -> ancestorDelegate
    com.google.common.collect.AbstractMultimap this$0 -> this$0
    void refreshIfEmpty() -> refreshIfEmpty
    void removeIfEmpty() -> removeIfEmpty
    java.lang.Object getKey() -> getKey
    void addToMap() -> addToMap
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.util.Collection getDelegate() -> getDelegate
    java.util.Iterator iterator() -> iterator
    boolean add(java.lang.Object) -> add
    com.google.common.collect.AbstractMultimap$WrappedCollection getAncestor() -> getAncestor
    boolean addAll(java.util.Collection) -> addAll
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    void clear() -> clear
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.AbstractMultimap$WrappedCollection$WrappedIterator -> com.google.common.collect.AbstractMultimap$WrappedCollection$WrappedIterator:
    java.util.Iterator delegateIterator -> delegateIterator
    java.util.Collection originalDelegate -> originalDelegate
    com.google.common.collect.AbstractMultimap$WrappedCollection this$1 -> this$1
    void validateIterator() -> validateIterator
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    java.util.Iterator getDelegateIterator() -> getDelegateIterator
com.google.common.collect.AbstractMultimap$WrappedList -> com.google.common.collect.AbstractMultimap$WrappedList:
    com.google.common.collect.AbstractMultimap this$0 -> this$0
    java.util.List getListDelegate() -> getListDelegate
    boolean addAll(int,java.util.Collection) -> addAll
    java.lang.Object get(int) -> get
    java.lang.Object set(int,java.lang.Object) -> set
    void add(int,java.lang.Object) -> add
    java.lang.Object remove(int) -> remove
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.List subList(int,int) -> subList
com.google.common.collect.AbstractMultimap$WrappedList$WrappedListIterator -> com.google.common.collect.AbstractMultimap$WrappedList$WrappedListIterator:
    com.google.common.collect.AbstractMultimap$WrappedList this$1 -> this$1
    java.util.ListIterator getDelegateListIterator() -> getDelegateListIterator
    boolean hasPrevious() -> hasPrevious
    java.lang.Object previous() -> previous
    int nextIndex() -> nextIndex
    int previousIndex() -> previousIndex
    void set(java.lang.Object) -> set
    void add(java.lang.Object) -> add
com.google.common.collect.AbstractMultimap$WrappedSet -> com.google.common.collect.AbstractMultimap$WrappedSet:
    com.google.common.collect.AbstractMultimap this$0 -> this$0
com.google.common.collect.AbstractMultimap$WrappedSortedSet -> com.google.common.collect.AbstractMultimap$WrappedSortedSet:
    com.google.common.collect.AbstractMultimap this$0 -> this$0
    java.util.SortedSet getSortedSetDelegate() -> getSortedSetDelegate
    java.util.Comparator comparator() -> comparator
    java.lang.Object first() -> first
    java.lang.Object last() -> last
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.AbstractMultiset -> com.google.common.collect.AbstractMultiset:
    java.util.Set elementSet -> elementSet
    java.util.Set entrySet() -> entrySet
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
    int count(java.lang.Object) -> count
    boolean add(java.lang.Object) -> add
    int add(java.lang.Object,int) -> add
    boolean remove(java.lang.Object) -> remove
    int remove(java.lang.Object,int) -> remove
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    boolean addAll(java.util.Collection) -> addAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    java.util.Set elementSet() -> elementSet
    java.util.Set createElementSet() -> createElementSet
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.AbstractSetMultimap -> com.google.common.collect.AbstractSetMultimap:
    long serialVersionUID -> serialVersionUID
    java.util.Set createCollection() -> createCollection
    java.util.Set get(java.lang.Object) -> get
    java.util.Set entries() -> entries
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Map asMap() -> asMap
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean equals(java.lang.Object) -> equals
    java.util.Collection entries() -> entries
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection createCollection() -> createCollection
com.google.common.collect.AbstractSortedSetMultimap -> com.google.common.collect.AbstractSortedSetMultimap:
    long serialVersionUID -> serialVersionUID
    java.util.SortedSet createCollection() -> createCollection
    java.util.SortedSet get(java.lang.Object) -> get
    java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Map asMap() -> asMap
    java.util.Collection values() -> values
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set get(java.lang.Object) -> get
    java.util.Set createCollection() -> createCollection
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection createCollection() -> createCollection
com.google.common.collect.ArrayListMultimap -> com.google.common.collect.ArrayListMultimap:
    int DEFAULT_VALUES_PER_KEY -> DEFAULT_VALUES_PER_KEY
    int expectedValuesPerKey -> expectedValuesPerKey
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ArrayListMultimap create() -> create
    com.google.common.collect.ArrayListMultimap create(int,int) -> create
    com.google.common.collect.ArrayListMultimap create(com.google.common.collect.Multimap) -> create
    java.util.List createCollection() -> createCollection
    void trimToSize() -> trimToSize
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    boolean equals(java.lang.Object) -> equals
    java.util.Map asMap() -> asMap
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List get(java.lang.Object) -> get
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    java.util.Collection entries() -> entries
    java.util.Collection values() -> values
    com.google.common.collect.Multiset keys() -> keys
    java.util.Set keySet() -> keySet
    void clear() -> clear
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean containsValue(java.lang.Object) -> containsValue
    boolean containsKey(java.lang.Object) -> containsKey
    boolean isEmpty() -> isEmpty
    int size() -> size
    java.util.Collection createCollection() -> createCollection
com.google.common.collect.AsynchronousComputationException -> com.google.common.collect.AsynchronousComputationException:
    long serialVersionUID -> serialVersionUID
com.google.common.collect.BiMap -> com.google.common.collect.BiMap:
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    void putAll(java.util.Map) -> putAll
    java.util.Set values() -> values
    com.google.common.collect.BiMap inverse() -> inverse
com.google.common.collect.ByFunctionOrdering -> com.google.common.collect.ByFunctionOrdering:
    com.google.common.base.Function function -> function
    com.google.common.collect.Ordering ordering -> ordering
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Object,java.lang.Object) -> compare
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.ClassToInstanceMap -> com.google.common.collect.ClassToInstanceMap:
    java.lang.Object getInstance(java.lang.Class) -> getInstance
    java.lang.Object putInstance(java.lang.Class,java.lang.Object) -> putInstance
com.google.common.collect.Collections2 -> com.google.common.collect.Collections2:
    com.google.common.base.Joiner STANDARD_JOINER -> STANDARD_JOINER
    java.util.Collection filter(java.util.Collection,com.google.common.base.Predicate) -> filter
    boolean safeContains(java.util.Collection,java.lang.Object) -> safeContains
    java.util.Collection transform(java.util.Collection,com.google.common.base.Function) -> transform
    boolean containsAllImpl(java.util.Collection,java.util.Collection) -> containsAllImpl
    java.lang.String toStringImpl(java.util.Collection) -> toStringImpl
    java.lang.StringBuilder newStringBuilderForCollection(int) -> newStringBuilderForCollection
    java.util.Collection cast(java.lang.Iterable) -> cast
com.google.common.collect.Collections2$1 -> com.google.common.collect.Collections2$1:
    java.util.Collection val$collection -> val$collection
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Collections2$FilteredCollection -> com.google.common.collect.Collections2$FilteredCollection:
    java.util.Collection unfiltered -> unfiltered
    com.google.common.base.Predicate predicate -> predicate
    com.google.common.collect.Collections2$FilteredCollection createCombined(com.google.common.base.Predicate) -> createCombined
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
com.google.common.collect.Collections2$FilteredCollection$1 -> com.google.common.collect.Collections2$FilteredCollection$1:
    java.util.Collection val$collection -> val$collection
    com.google.common.collect.Collections2$FilteredCollection this$0 -> this$0
    boolean apply(java.lang.Object) -> apply
com.google.common.collect.Collections2$FilteredCollection$2 -> com.google.common.collect.Collections2$FilteredCollection$2:
    java.util.Collection val$collection -> val$collection
    com.google.common.collect.Collections2$FilteredCollection this$0 -> this$0
    boolean apply(java.lang.Object) -> apply
com.google.common.collect.Collections2$TransformedCollection -> com.google.common.collect.Collections2$TransformedCollection:
    java.util.Collection fromCollection -> fromCollection
    com.google.common.base.Function function -> function
    void clear() -> clear
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    int size() -> size
com.google.common.collect.ComparatorOrdering -> com.google.common.collect.ComparatorOrdering:
    java.util.Comparator comparator -> comparator
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Object,java.lang.Object) -> compare
    int binarySearch(java.util.List,java.lang.Object) -> binarySearch
    java.util.List sortedCopy(java.lang.Iterable) -> sortedCopy
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.ComparisonChain -> com.google.common.collect.ComparisonChain:
    com.google.common.collect.ComparisonChain ACTIVE -> ACTIVE
    com.google.common.collect.ComparisonChain LESS -> LESS
    com.google.common.collect.ComparisonChain GREATER -> GREATER
    com.google.common.collect.ComparisonChain start() -> start
    com.google.common.collect.ComparisonChain compare(java.lang.Comparable,java.lang.Comparable) -> compare
    com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator) -> compare
    com.google.common.collect.ComparisonChain compare(int,int) -> compare
    com.google.common.collect.ComparisonChain compare(long,long) -> compare
    com.google.common.collect.ComparisonChain compare(float,float) -> compare
    com.google.common.collect.ComparisonChain compare(double,double) -> compare
    com.google.common.collect.ComparisonChain compare(boolean,boolean) -> compare
    int result() -> result
    com.google.common.collect.ComparisonChain access$100() -> access$100
    com.google.common.collect.ComparisonChain access$200() -> access$200
    com.google.common.collect.ComparisonChain access$300() -> access$300
com.google.common.collect.ComparisonChain$1 -> com.google.common.collect.ComparisonChain$1:
    com.google.common.collect.ComparisonChain compare(java.lang.Comparable,java.lang.Comparable) -> compare
    com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator) -> compare
    com.google.common.collect.ComparisonChain compare(int,int) -> compare
    com.google.common.collect.ComparisonChain compare(long,long) -> compare
    com.google.common.collect.ComparisonChain compare(float,float) -> compare
    com.google.common.collect.ComparisonChain compare(double,double) -> compare
    com.google.common.collect.ComparisonChain compare(boolean,boolean) -> compare
    com.google.common.collect.ComparisonChain classify(int) -> classify
    int result() -> result
com.google.common.collect.ComparisonChain$InactiveComparisonChain -> com.google.common.collect.ComparisonChain$InactiveComparisonChain:
    int result -> result
    com.google.common.collect.ComparisonChain compare(java.lang.Comparable,java.lang.Comparable) -> compare
    com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator) -> compare
    com.google.common.collect.ComparisonChain compare(int,int) -> compare
    com.google.common.collect.ComparisonChain compare(long,long) -> compare
    com.google.common.collect.ComparisonChain compare(float,float) -> compare
    com.google.common.collect.ComparisonChain compare(double,double) -> compare
    com.google.common.collect.ComparisonChain compare(boolean,boolean) -> compare
    int result() -> result
com.google.common.collect.CompoundOrdering -> com.google.common.collect.CompoundOrdering:
    com.google.common.collect.ImmutableList comparators -> comparators
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Object,java.lang.Object) -> compare
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.ComputationException -> com.google.common.collect.ComputationException:
    long serialVersionUID -> serialVersionUID
com.google.common.collect.ComputingConcurrentHashMap -> com.google.common.collect.ComputingConcurrentHashMap:
    com.google.common.base.Function computingFunction -> computingFunction
    long serialVersionUID -> serialVersionUID
    java.util.concurrent.ConcurrentMap asMap() -> asMap
    com.google.common.collect.CustomConcurrentHashMap$Segment createSegment(int,int) -> createSegment
    com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment segmentFor(int) -> segmentFor
    java.lang.Object apply(java.lang.Object) -> apply
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.collect.CustomConcurrentHashMap$Segment segmentFor(int) -> segmentFor
com.google.common.collect.ComputingConcurrentHashMap$1 -> com.google.common.collect.ComputingConcurrentHashMap$1:
com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference -> com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference:
    java.lang.Throwable t -> t
    java.lang.Object get() -> get
    com.google.common.collect.CustomConcurrentHashMap$ValueReference copyFor(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> copyFor
    boolean isComputingReference() -> isComputingReference
    java.lang.Object waitForValue() -> waitForValue
    void notifyValueReclaimed() -> notifyValueReclaimed
    void clear() -> clear
com.google.common.collect.ComputingConcurrentHashMap$ComputedReference -> com.google.common.collect.ComputingConcurrentHashMap$ComputedReference:
    java.lang.Object value -> value
    java.lang.Object get() -> get
    com.google.common.collect.CustomConcurrentHashMap$ValueReference copyFor(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> copyFor
    boolean isComputingReference() -> isComputingReference
    java.lang.Object waitForValue() -> waitForValue
    void notifyValueReclaimed() -> notifyValueReclaimed
    void clear() -> clear
com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment -> com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment:
    com.google.common.collect.ComputingConcurrentHashMap this$0 -> this$0
    java.lang.Object compute(java.lang.Object,int) -> compute
com.google.common.collect.ComputingConcurrentHashMap$ComputingSerializationProxy -> com.google.common.collect.ComputingConcurrentHashMap$ComputingSerializationProxy:
    com.google.common.base.Function computingFunction -> computingFunction
    com.google.common.collect.MapMaker$Cache cache -> cache
    long serialVersionUID -> serialVersionUID
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object readResolve() -> readResolve
    java.util.concurrent.ConcurrentMap asMap() -> asMap
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference -> com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference:
    com.google.common.collect.CustomConcurrentHashMap$ValueReference computedReference -> computedReference
    com.google.common.collect.ComputingConcurrentHashMap this$0 -> this$0
    java.lang.Object get() -> get
    com.google.common.collect.CustomConcurrentHashMap$ValueReference copyFor(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> copyFor
    boolean isComputingReference() -> isComputingReference
    java.lang.Object waitForValue() -> waitForValue
    void clear() -> clear
    void notifyValueReclaimed() -> notifyValueReclaimed
    java.lang.Object compute(java.lang.Object,int) -> compute
    void setValueReference(com.google.common.collect.CustomConcurrentHashMap$ValueReference) -> setValueReference
com.google.common.collect.ComputingConcurrentHashMap$NullPointerExceptionReference -> com.google.common.collect.ComputingConcurrentHashMap$NullPointerExceptionReference:
    java.lang.String message -> message
    java.lang.Object get() -> get
    com.google.common.collect.CustomConcurrentHashMap$ValueReference copyFor(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> copyFor
    boolean isComputingReference() -> isComputingReference
    java.lang.Object waitForValue() -> waitForValue
    void notifyValueReclaimed() -> notifyValueReclaimed
    void clear() -> clear
com.google.common.collect.ConcurrentHashMultiset -> com.google.common.collect.ConcurrentHashMultiset:
    java.util.concurrent.ConcurrentMap countMap -> countMap
    com.google.common.collect.ConcurrentHashMultiset$EntrySet entrySet -> entrySet
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ConcurrentHashMultiset create() -> create
    com.google.common.collect.ConcurrentHashMultiset create(java.lang.Iterable) -> create
    com.google.common.collect.ConcurrentHashMultiset create(com.google.common.collect.GenericMapMaker) -> create
    int count(java.lang.Object) -> count
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.util.List snapshot() -> snapshot
    int add(java.lang.Object,int) -> add
    int remove(java.lang.Object,int) -> remove
    int removeAllOccurrences(java.lang.Object) -> removeAllOccurrences
    boolean removeExactly(java.lang.Object,int) -> removeExactly
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    java.util.Set createElementSet() -> createElementSet
    java.util.Set entrySet() -> entrySet
    int unbox(java.lang.Integer) -> unbox
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.util.Set elementSet() -> elementSet
    void clear() -> clear
    boolean retainAll(java.util.Collection) -> retainAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    boolean add(java.lang.Object) -> add
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
    java.util.concurrent.ConcurrentMap access$100(com.google.common.collect.ConcurrentHashMultiset) -> access$100
com.google.common.collect.ConcurrentHashMultiset$1 -> com.google.common.collect.ConcurrentHashMultiset$1:
    java.util.Set val$delegate -> val$delegate
    com.google.common.collect.ConcurrentHashMultiset this$0 -> this$0
    java.util.Set delegate() -> delegate
    boolean remove(java.lang.Object) -> remove
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ConcurrentHashMultiset$EntrySet -> com.google.common.collect.ConcurrentHashMultiset$EntrySet:
    com.google.common.collect.ConcurrentHashMultiset this$0 -> this$0
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.util.List snapshot() -> snapshot
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
    int hashCode() -> hashCode
com.google.common.collect.ConcurrentHashMultiset$EntrySet$1 -> com.google.common.collect.ConcurrentHashMultiset$EntrySet$1:
    java.util.Iterator val$backingIterator -> val$backingIterator
    com.google.common.collect.ConcurrentHashMultiset$EntrySet this$1 -> this$1
    boolean hasNext() -> hasNext
    com.google.common.collect.Multiset$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.ConcurrentHashMultiset$FieldSettersHolder -> com.google.common.collect.ConcurrentHashMultiset$FieldSettersHolder:
    com.google.common.collect.Serialization$FieldSetter COUNT_MAP_FIELD_SETTER -> COUNT_MAP_FIELD_SETTER
com.google.common.collect.Constraint -> com.google.common.collect.Constraint:
    java.lang.Object checkElement(java.lang.Object) -> checkElement
    java.lang.String toString() -> toString
com.google.common.collect.Constraints -> com.google.common.collect.Constraints:
    com.google.common.collect.Constraint notNull() -> notNull
    java.util.Collection constrainedCollection(java.util.Collection,com.google.common.collect.Constraint) -> constrainedCollection
    java.util.Set constrainedSet(java.util.Set,com.google.common.collect.Constraint) -> constrainedSet
    java.util.SortedSet constrainedSortedSet(java.util.SortedSet,com.google.common.collect.Constraint) -> constrainedSortedSet
    java.util.List constrainedList(java.util.List,com.google.common.collect.Constraint) -> constrainedList
    java.util.ListIterator constrainedListIterator(java.util.ListIterator,com.google.common.collect.Constraint) -> constrainedListIterator
    java.util.Collection constrainedTypePreservingCollection(java.util.Collection,com.google.common.collect.Constraint) -> constrainedTypePreservingCollection
    com.google.common.collect.Multiset constrainedMultiset(com.google.common.collect.Multiset,com.google.common.collect.Constraint) -> constrainedMultiset
    java.util.Collection checkElements(java.util.Collection,com.google.common.collect.Constraint) -> checkElements
    java.util.Collection access$000(java.util.Collection,com.google.common.collect.Constraint) -> access$000
    java.util.ListIterator access$100(java.util.ListIterator,com.google.common.collect.Constraint) -> access$100
com.google.common.collect.Constraints$ConstrainedCollection -> com.google.common.collect.Constraints$ConstrainedCollection:
    java.util.Collection delegate -> delegate
    com.google.common.collect.Constraint constraint -> constraint
    java.util.Collection delegate() -> delegate
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    java.lang.Object delegate() -> delegate
com.google.common.collect.Constraints$ConstrainedList -> com.google.common.collect.Constraints$ConstrainedList:
    java.util.List delegate -> delegate
    com.google.common.collect.Constraint constraint -> constraint
    java.util.List delegate() -> delegate
    boolean add(java.lang.Object) -> add
    void add(int,java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    java.lang.Object set(int,java.lang.Object) -> set
    java.util.List subList(int,int) -> subList
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Constraints$ConstrainedListIterator -> com.google.common.collect.Constraints$ConstrainedListIterator:
    java.util.ListIterator delegate -> delegate
    com.google.common.collect.Constraint constraint -> constraint
    java.util.ListIterator delegate() -> delegate
    void add(java.lang.Object) -> add
    void set(java.lang.Object) -> set
    java.util.Iterator delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Constraints$ConstrainedMultiset -> com.google.common.collect.Constraints$ConstrainedMultiset:
    com.google.common.collect.Multiset delegate -> delegate
    com.google.common.collect.Constraint constraint -> constraint
    com.google.common.collect.Multiset delegate() -> delegate
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    int add(java.lang.Object,int) -> add
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Constraints$ConstrainedRandomAccessList -> com.google.common.collect.Constraints$ConstrainedRandomAccessList:
com.google.common.collect.Constraints$ConstrainedSet -> com.google.common.collect.Constraints$ConstrainedSet:
    java.util.Set delegate -> delegate
    com.google.common.collect.Constraint constraint -> constraint
    java.util.Set delegate() -> delegate
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Constraints$ConstrainedSortedSet -> com.google.common.collect.Constraints$ConstrainedSortedSet:
    java.util.SortedSet delegate -> delegate
    com.google.common.collect.Constraint constraint -> constraint
    java.util.SortedSet delegate() -> delegate
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    java.util.Set delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Constraints$NotNullConstraint -> com.google.common.collect.Constraints$NotNullConstraint:
    com.google.common.collect.Constraints$NotNullConstraint INSTANCE -> INSTANCE
    com.google.common.collect.Constraints$NotNullConstraint[] $VALUES -> $VALUES
    com.google.common.collect.Constraints$NotNullConstraint[] values() -> values
    com.google.common.collect.Constraints$NotNullConstraint valueOf(java.lang.String) -> valueOf
    java.lang.Object checkElement(java.lang.Object) -> checkElement
    java.lang.String toString() -> toString
com.google.common.collect.CustomConcurrentHashMap -> com.google.common.collect.CustomConcurrentHashMap:
    int MAXIMUM_CAPACITY -> MAXIMUM_CAPACITY
    int MAX_SEGMENTS -> MAX_SEGMENTS
    int DRAIN_THRESHOLD -> DRAIN_THRESHOLD
    int CLEANUP_MAX -> CLEANUP_MAX
    int segmentMask -> segmentMask
    int segmentShift -> segmentShift
    com.google.common.collect.CustomConcurrentHashMap$Segment[] segments -> segments
    int concurrencyLevel -> concurrencyLevel
    com.google.common.base.Equivalence keyEquivalence -> keyEquivalence
    com.google.common.base.Equivalence valueEquivalence -> valueEquivalence
    com.google.common.collect.CustomConcurrentHashMap$Strength keyStrength -> keyStrength
    com.google.common.collect.CustomConcurrentHashMap$Strength valueStrength -> valueStrength
    int maximumSize -> maximumSize
    long expireAfterAccessNanos -> expireAfterAccessNanos
    long expireAfterWriteNanos -> expireAfterWriteNanos
    java.util.Queue evictionNotificationQueue -> evictionNotificationQueue
    com.google.common.collect.MapEvictionListener evictionListener -> evictionListener
    com.google.common.collect.CustomConcurrentHashMap$EntryFactory entryFactory -> entryFactory
    java.util.concurrent.Executor cleanupExecutor -> cleanupExecutor
    com.google.common.base.Ticker ticker -> ticker
    com.google.common.collect.CustomConcurrentHashMap$ValueReference UNSET -> UNSET
    java.util.Queue DISCARDING_QUEUE -> DISCARDING_QUEUE
    java.util.Set keySet -> keySet
    java.util.Collection values -> values
    java.util.Set entrySet -> entrySet
    long serialVersionUID -> serialVersionUID
    boolean evictsBySize() -> evictsBySize
    boolean expires() -> expires
    boolean expiresAfterWrite() -> expiresAfterWrite
    boolean expiresAfterAccess() -> expiresAfterAccess
    boolean isInlineCleanup() -> isInlineCleanup
    com.google.common.collect.CustomConcurrentHashMap$ValueReference unset() -> unset
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nullEntry() -> nullEntry
    java.util.Queue discardingQueue() -> discardingQueue
    int rehash(int) -> rehash
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry newEntry(java.lang.Object,int,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> newEntry
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry copyEntry(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> copyEntry
    com.google.common.collect.CustomConcurrentHashMap$ValueReference newValueReference(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,java.lang.Object) -> newValueReference
    int hash(java.lang.Object) -> hash
    void reclaimValue(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,com.google.common.collect.CustomConcurrentHashMap$ValueReference) -> reclaimValue
    void reclaimKey(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> reclaimKey
    boolean isLive(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> isLive
    boolean isExpired(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> isExpired
    boolean isExpired(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,long) -> isExpired
    boolean isCollected(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> isCollected
    boolean isUnset(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> isUnset
    boolean isUnset(com.google.common.collect.CustomConcurrentHashMap$ValueReference) -> isUnset
    void connectExpirables(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> connectExpirables
    void nullifyExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> nullifyExpirable
    void enqueueNotification(java.lang.Object,int,com.google.common.collect.CustomConcurrentHashMap$ValueReference) -> enqueueNotification
    void processPendingNotifications() -> processPendingNotifications
    void connectEvictables(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> connectEvictables
    void nullifyEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> nullifyEvictable
    com.google.common.collect.CustomConcurrentHashMap$Segment[] newSegmentArray(int) -> newSegmentArray
    com.google.common.collect.CustomConcurrentHashMap$Segment segmentFor(int) -> segmentFor
    com.google.common.collect.CustomConcurrentHashMap$Segment createSegment(int,int) -> createSegment
    boolean isEmpty() -> isEmpty
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getEntry(java.lang.Object) -> getEntry
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    void clear() -> clear
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.CustomConcurrentHashMap$1 -> com.google.common.collect.CustomConcurrentHashMap$1:
    java.lang.Object get() -> get
    com.google.common.collect.CustomConcurrentHashMap$ValueReference copyFor(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> copyFor
    boolean isComputingReference() -> isComputingReference
    java.lang.Object waitForValue() -> waitForValue
    void notifyValueReclaimed() -> notifyValueReclaimed
    void clear() -> clear
com.google.common.collect.CustomConcurrentHashMap$2 -> com.google.common.collect.CustomConcurrentHashMap$2:
    boolean offer(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> offer
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry peek() -> peek
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry poll() -> poll
    int size() -> size
    java.util.Iterator iterator() -> iterator
    java.lang.Object peek() -> peek
    java.lang.Object poll() -> poll
    boolean offer(java.lang.Object) -> offer
com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy -> com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.CustomConcurrentHashMap$Strength keyStrength -> keyStrength
    com.google.common.collect.CustomConcurrentHashMap$Strength valueStrength -> valueStrength
    com.google.common.base.Equivalence keyEquivalence -> keyEquivalence
    com.google.common.base.Equivalence valueEquivalence -> valueEquivalence
    long expireAfterWriteNanos -> expireAfterWriteNanos
    long expireAfterAccessNanos -> expireAfterAccessNanos
    int maximumSize -> maximumSize
    int concurrencyLevel -> concurrencyLevel
    com.google.common.collect.MapEvictionListener evictionListener -> evictionListener
    java.util.concurrent.ConcurrentMap delegate -> delegate
    java.util.concurrent.ConcurrentMap delegate() -> delegate
    void writeMapTo(java.io.ObjectOutputStream) -> writeMapTo
    com.google.common.collect.MapMaker readMapMaker(java.io.ObjectInputStream) -> readMapMaker
    void readEntries(java.io.ObjectInputStream) -> readEntries
    java.util.Map delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.CustomConcurrentHashMap$EntryFactory -> com.google.common.collect.CustomConcurrentHashMap$EntryFactory:
    com.google.common.collect.CustomConcurrentHashMap$EntryFactory STRONG -> STRONG
    com.google.common.collect.CustomConcurrentHashMap$EntryFactory STRONG_EXPIRABLE -> STRONG_EXPIRABLE
    com.google.common.collect.CustomConcurrentHashMap$EntryFactory STRONG_EVICTABLE -> STRONG_EVICTABLE
    com.google.common.collect.CustomConcurrentHashMap$EntryFactory STRONG_EXPIRABLE_EVICTABLE -> STRONG_EXPIRABLE_EVICTABLE
    com.google.common.collect.CustomConcurrentHashMap$EntryFactory SOFT -> SOFT
    com.google.common.collect.CustomConcurrentHashMap$EntryFactory SOFT_EXPIRABLE -> SOFT_EXPIRABLE
    com.google.common.collect.CustomConcurrentHashMap$EntryFactory SOFT_EVICTABLE -> SOFT_EVICTABLE
    com.google.common.collect.CustomConcurrentHashMap$EntryFactory SOFT_EXPIRABLE_EVICTABLE -> SOFT_EXPIRABLE_EVICTABLE
    com.google.common.collect.CustomConcurrentHashMap$EntryFactory WEAK -> WEAK
    com.google.common.collect.CustomConcurrentHashMap$EntryFactory WEAK_EXPIRABLE -> WEAK_EXPIRABLE
    com.google.common.collect.CustomConcurrentHashMap$EntryFactory WEAK_EVICTABLE -> WEAK_EVICTABLE
    com.google.common.collect.CustomConcurrentHashMap$EntryFactory WEAK_EXPIRABLE_EVICTABLE -> WEAK_EXPIRABLE_EVICTABLE
    int EXPIRABLE_MASK -> EXPIRABLE_MASK
    int EVICTABLE_MASK -> EVICTABLE_MASK
    com.google.common.collect.CustomConcurrentHashMap$EntryFactory[][] factories -> factories
    com.google.common.collect.CustomConcurrentHashMap$EntryFactory[] $VALUES -> $VALUES
    com.google.common.collect.CustomConcurrentHashMap$EntryFactory[] values() -> values
    com.google.common.collect.CustomConcurrentHashMap$EntryFactory valueOf(java.lang.String) -> valueOf
    com.google.common.collect.CustomConcurrentHashMap$EntryFactory getFactory(com.google.common.collect.CustomConcurrentHashMap$Strength,boolean,boolean) -> getFactory
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry newEntry(com.google.common.collect.CustomConcurrentHashMap,java.lang.Object,int,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> newEntry
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry copyEntry(com.google.common.collect.CustomConcurrentHashMap,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> copyEntry
    void copyExpirableEntry(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> copyExpirableEntry
    void copyEvictableEntry(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> copyEvictableEntry
com.google.common.collect.CustomConcurrentHashMap$EntryFactory$1 -> com.google.common.collect.CustomConcurrentHashMap$EntryFactory$1:
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry newEntry(com.google.common.collect.CustomConcurrentHashMap,java.lang.Object,int,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> newEntry
com.google.common.collect.CustomConcurrentHashMap$EntryFactory$10 -> com.google.common.collect.CustomConcurrentHashMap$EntryFactory$10:
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry newEntry(com.google.common.collect.CustomConcurrentHashMap,java.lang.Object,int,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> newEntry
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry copyEntry(com.google.common.collect.CustomConcurrentHashMap,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> copyEntry
com.google.common.collect.CustomConcurrentHashMap$EntryFactory$11 -> com.google.common.collect.CustomConcurrentHashMap$EntryFactory$11:
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry newEntry(com.google.common.collect.CustomConcurrentHashMap,java.lang.Object,int,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> newEntry
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry copyEntry(com.google.common.collect.CustomConcurrentHashMap,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> copyEntry
com.google.common.collect.CustomConcurrentHashMap$EntryFactory$12 -> com.google.common.collect.CustomConcurrentHashMap$EntryFactory$12:
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry newEntry(com.google.common.collect.CustomConcurrentHashMap,java.lang.Object,int,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> newEntry
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry copyEntry(com.google.common.collect.CustomConcurrentHashMap,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> copyEntry
com.google.common.collect.CustomConcurrentHashMap$EntryFactory$2 -> com.google.common.collect.CustomConcurrentHashMap$EntryFactory$2:
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry newEntry(com.google.common.collect.CustomConcurrentHashMap,java.lang.Object,int,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> newEntry
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry copyEntry(com.google.common.collect.CustomConcurrentHashMap,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> copyEntry
com.google.common.collect.CustomConcurrentHashMap$EntryFactory$3 -> com.google.common.collect.CustomConcurrentHashMap$EntryFactory$3:
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry newEntry(com.google.common.collect.CustomConcurrentHashMap,java.lang.Object,int,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> newEntry
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry copyEntry(com.google.common.collect.CustomConcurrentHashMap,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> copyEntry
com.google.common.collect.CustomConcurrentHashMap$EntryFactory$4 -> com.google.common.collect.CustomConcurrentHashMap$EntryFactory$4:
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry newEntry(com.google.common.collect.CustomConcurrentHashMap,java.lang.Object,int,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> newEntry
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry copyEntry(com.google.common.collect.CustomConcurrentHashMap,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> copyEntry
com.google.common.collect.CustomConcurrentHashMap$EntryFactory$5 -> com.google.common.collect.CustomConcurrentHashMap$EntryFactory$5:
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry newEntry(com.google.common.collect.CustomConcurrentHashMap,java.lang.Object,int,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> newEntry
com.google.common.collect.CustomConcurrentHashMap$EntryFactory$6 -> com.google.common.collect.CustomConcurrentHashMap$EntryFactory$6:
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry newEntry(com.google.common.collect.CustomConcurrentHashMap,java.lang.Object,int,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> newEntry
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry copyEntry(com.google.common.collect.CustomConcurrentHashMap,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> copyEntry
com.google.common.collect.CustomConcurrentHashMap$EntryFactory$7 -> com.google.common.collect.CustomConcurrentHashMap$EntryFactory$7:
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry newEntry(com.google.common.collect.CustomConcurrentHashMap,java.lang.Object,int,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> newEntry
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry copyEntry(com.google.common.collect.CustomConcurrentHashMap,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> copyEntry
com.google.common.collect.CustomConcurrentHashMap$EntryFactory$8 -> com.google.common.collect.CustomConcurrentHashMap$EntryFactory$8:
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry newEntry(com.google.common.collect.CustomConcurrentHashMap,java.lang.Object,int,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> newEntry
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry copyEntry(com.google.common.collect.CustomConcurrentHashMap,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> copyEntry
com.google.common.collect.CustomConcurrentHashMap$EntryFactory$9 -> com.google.common.collect.CustomConcurrentHashMap$EntryFactory$9:
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry newEntry(com.google.common.collect.CustomConcurrentHashMap,java.lang.Object,int,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> newEntry
com.google.common.collect.CustomConcurrentHashMap$EntryIterator -> com.google.common.collect.CustomConcurrentHashMap$EntryIterator:
    com.google.common.collect.CustomConcurrentHashMap this$0 -> this$0
    java.util.Map$Entry next() -> next
    java.lang.Object next() -> next
com.google.common.collect.CustomConcurrentHashMap$EntrySet -> com.google.common.collect.CustomConcurrentHashMap$EntrySet:
    com.google.common.collect.CustomConcurrentHashMap this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    int size() -> size
    boolean isEmpty() -> isEmpty
    void clear() -> clear
com.google.common.collect.CustomConcurrentHashMap$HashIterator -> com.google.common.collect.CustomConcurrentHashMap$HashIterator:
    int nextSegmentIndex -> nextSegmentIndex
    int nextTableIndex -> nextTableIndex
    java.util.concurrent.atomic.AtomicReferenceArray currentTable -> currentTable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextEntry -> nextEntry
    com.google.common.collect.CustomConcurrentHashMap$WriteThroughEntry nextExternal -> nextExternal
    com.google.common.collect.CustomConcurrentHashMap$WriteThroughEntry lastReturned -> lastReturned
    com.google.common.collect.CustomConcurrentHashMap this$0 -> this$0
    void advance() -> advance
    boolean nextInChain() -> nextInChain
    boolean nextInTable() -> nextInTable
    boolean advanceTo(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> advanceTo
    boolean hasNext() -> hasNext
    com.google.common.collect.CustomConcurrentHashMap$WriteThroughEntry nextEntry() -> nextEntry
    void remove() -> remove
com.google.common.collect.CustomConcurrentHashMap$KeyIterator -> com.google.common.collect.CustomConcurrentHashMap$KeyIterator:
    com.google.common.collect.CustomConcurrentHashMap this$0 -> this$0
    java.lang.Object next() -> next
com.google.common.collect.CustomConcurrentHashMap$KeySet -> com.google.common.collect.CustomConcurrentHashMap$KeySet:
    com.google.common.collect.CustomConcurrentHashMap this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.common.collect.CustomConcurrentHashMap$NullEntry -> com.google.common.collect.CustomConcurrentHashMap$NullEntry:
    com.google.common.collect.CustomConcurrentHashMap$NullEntry INSTANCE -> INSTANCE
    com.google.common.collect.CustomConcurrentHashMap$NullEntry[] $VALUES -> $VALUES
    com.google.common.collect.CustomConcurrentHashMap$NullEntry[] values() -> values
    com.google.common.collect.CustomConcurrentHashMap$NullEntry valueOf(java.lang.String) -> valueOf
    com.google.common.collect.CustomConcurrentHashMap$ValueReference getValueReference() -> getValueReference
    void setValueReference(com.google.common.collect.CustomConcurrentHashMap$ValueReference) -> setValueReference
    void notifyKeyReclaimed() -> notifyKeyReclaimed
    void notifyValueReclaimed(com.google.common.collect.CustomConcurrentHashMap$ValueReference) -> notifyValueReclaimed
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNext() -> getNext
    int getHash() -> getHash
    java.lang.Object getKey() -> getKey
    long getExpirationTime() -> getExpirationTime
    void setExpirationTime(long) -> setExpirationTime
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    void setNextExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setNextExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    void setPreviousExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setPreviousExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    void setNextEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setNextEvictable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    void setPreviousEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setPreviousEvictable
com.google.common.collect.CustomConcurrentHashMap$QueueHolder -> com.google.common.collect.CustomConcurrentHashMap$QueueHolder:
    com.google.common.base.FinalizableReferenceQueue queue -> queue
com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry -> com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry:
    com.google.common.collect.CustomConcurrentHashMap$ValueReference getValueReference() -> getValueReference
    void setValueReference(com.google.common.collect.CustomConcurrentHashMap$ValueReference) -> setValueReference
    void notifyKeyReclaimed() -> notifyKeyReclaimed
    void notifyValueReclaimed(com.google.common.collect.CustomConcurrentHashMap$ValueReference) -> notifyValueReclaimed
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNext() -> getNext
    int getHash() -> getHash
    java.lang.Object getKey() -> getKey
    long getExpirationTime() -> getExpirationTime
    void setExpirationTime(long) -> setExpirationTime
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    void setNextExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setNextExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    void setPreviousExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setPreviousExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    void setNextEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setNextEvictable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    void setPreviousEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setPreviousEvictable
com.google.common.collect.CustomConcurrentHashMap$Segment -> com.google.common.collect.CustomConcurrentHashMap$Segment:
    int count -> count
    int modCount -> modCount
    int threshold -> threshold
    java.util.concurrent.atomic.AtomicReferenceArray table -> table
    int maxSegmentSize -> maxSegmentSize
    java.util.Queue cleanupQueue -> cleanupQueue
    java.util.Queue recencyQueue -> recencyQueue
    java.util.concurrent.atomic.AtomicInteger readCount -> readCount
    java.util.Queue evictionQueue -> evictionQueue
    java.util.Queue expirationQueue -> expirationQueue
    java.lang.Runnable cleanupRunnable -> cleanupRunnable
    com.google.common.collect.CustomConcurrentHashMap this$0 -> this$0
    java.util.concurrent.atomic.AtomicReferenceArray newEntryArray(int) -> newEntryArray
    void initTable(java.util.concurrent.atomic.AtomicReferenceArray) -> initTable
    void setValue(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,java.lang.Object) -> setValue
    void recordRead(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> recordRead
    void recordLockedRead(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> recordLockedRead
    void recordWrite(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> recordWrite
    void drainRecencyQueue() -> drainRecencyQueue
    void recordExpirationTime(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,long) -> recordExpirationTime
    void tryExpireEntries() -> tryExpireEntries
    void expireEntries() -> expireEntries
    boolean evictEntries() -> evictEntries
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getFirst(int) -> getFirst
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getEntry(java.lang.Object,int) -> getEntry
    java.lang.Object get(java.lang.Object,int) -> get
    boolean containsKey(java.lang.Object,int) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    boolean replace(java.lang.Object,int,java.lang.Object,java.lang.Object) -> replace
    java.lang.Object replace(java.lang.Object,int,java.lang.Object) -> replace
    java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean) -> put
    void expand() -> expand
    java.lang.Object remove(java.lang.Object,int) -> remove
    boolean remove(java.lang.Object,int,java.lang.Object) -> remove
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry removeFromChain(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> removeFromChain
    boolean unsetKey(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,int) -> unsetKey
    boolean unsetValue(java.lang.Object,int,com.google.common.collect.CustomConcurrentHashMap$ValueReference) -> unsetValue
    boolean clearValue(java.lang.Object,int,com.google.common.collect.CustomConcurrentHashMap$ValueReference) -> clearValue
    boolean unsetEntry(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,int) -> unsetEntry
    boolean unsetLiveEntry(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,int) -> unsetLiveEntry
    void enqueueCleanup(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> enqueueCleanup
    java.lang.Object getLiveValue(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> getLiveValue
    void processPendingCleanup() -> processPendingCleanup
    void postReadCleanup() -> postReadCleanup
    void preWriteCleanup() -> preWriteCleanup
    void postWriteCleanup() -> postWriteCleanup
    void runCleanup() -> runCleanup
    void runUnlockedCleanup() -> runUnlockedCleanup
    void runLockedCleanup() -> runLockedCleanup
    void clear() -> clear
com.google.common.collect.CustomConcurrentHashMap$Segment$1 -> com.google.common.collect.CustomConcurrentHashMap$Segment$1:
    com.google.common.collect.CustomConcurrentHashMap$Segment this$1 -> this$1
    void run() -> run
com.google.common.collect.CustomConcurrentHashMap$Segment$EvictionQueue -> com.google.common.collect.CustomConcurrentHashMap$Segment$EvictionQueue:
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry head -> head
    com.google.common.collect.CustomConcurrentHashMap$Segment this$1 -> this$1
    boolean offer(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> offer
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry peek() -> peek
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry poll() -> poll
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
    int size() -> size
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
    java.lang.Object peek() -> peek
    java.lang.Object poll() -> poll
    boolean offer(java.lang.Object) -> offer
com.google.common.collect.CustomConcurrentHashMap$Segment$EvictionQueue$1 -> com.google.common.collect.CustomConcurrentHashMap$Segment$EvictionQueue$1:
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextEvictable -> nextEvictable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry previousEvictable -> previousEvictable
    com.google.common.collect.CustomConcurrentHashMap$Segment$EvictionQueue this$2 -> this$2
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    void setNextEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setNextEvictable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    void setPreviousEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setPreviousEvictable
    com.google.common.collect.CustomConcurrentHashMap$ValueReference getValueReference() -> getValueReference
    void setValueReference(com.google.common.collect.CustomConcurrentHashMap$ValueReference) -> setValueReference
    void notifyKeyReclaimed() -> notifyKeyReclaimed
    void notifyValueReclaimed(com.google.common.collect.CustomConcurrentHashMap$ValueReference) -> notifyValueReclaimed
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNext() -> getNext
    int getHash() -> getHash
    java.lang.Object getKey() -> getKey
    long getExpirationTime() -> getExpirationTime
    void setExpirationTime(long) -> setExpirationTime
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    void setNextExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setNextExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    void setPreviousExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setPreviousExpirable
com.google.common.collect.CustomConcurrentHashMap$Segment$EvictionQueue$2 -> com.google.common.collect.CustomConcurrentHashMap$Segment$EvictionQueue$2:
    com.google.common.collect.CustomConcurrentHashMap$Segment$EvictionQueue this$2 -> this$2
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry computeNext(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> computeNext
    java.lang.Object computeNext(java.lang.Object) -> computeNext
com.google.common.collect.CustomConcurrentHashMap$Segment$ExpirationQueue -> com.google.common.collect.CustomConcurrentHashMap$Segment$ExpirationQueue:
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry head -> head
    com.google.common.collect.CustomConcurrentHashMap$Segment this$1 -> this$1
    boolean offer(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> offer
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry peek() -> peek
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry poll() -> poll
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
    int size() -> size
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
    java.lang.Object peek() -> peek
    java.lang.Object poll() -> poll
    boolean offer(java.lang.Object) -> offer
com.google.common.collect.CustomConcurrentHashMap$Segment$ExpirationQueue$1 -> com.google.common.collect.CustomConcurrentHashMap$Segment$ExpirationQueue$1:
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextExpirable -> nextExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry previousExpirable -> previousExpirable
    com.google.common.collect.CustomConcurrentHashMap$Segment$ExpirationQueue this$2 -> this$2
    long getExpirationTime() -> getExpirationTime
    void setExpirationTime(long) -> setExpirationTime
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    void setNextExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setNextExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    void setPreviousExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setPreviousExpirable
    com.google.common.collect.CustomConcurrentHashMap$ValueReference getValueReference() -> getValueReference
    void setValueReference(com.google.common.collect.CustomConcurrentHashMap$ValueReference) -> setValueReference
    void notifyKeyReclaimed() -> notifyKeyReclaimed
    void notifyValueReclaimed(com.google.common.collect.CustomConcurrentHashMap$ValueReference) -> notifyValueReclaimed
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNext() -> getNext
    int getHash() -> getHash
    java.lang.Object getKey() -> getKey
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    void setNextEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setNextEvictable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    void setPreviousEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setPreviousEvictable
com.google.common.collect.CustomConcurrentHashMap$Segment$ExpirationQueue$2 -> com.google.common.collect.CustomConcurrentHashMap$Segment$ExpirationQueue$2:
    com.google.common.collect.CustomConcurrentHashMap$Segment$ExpirationQueue this$2 -> this$2
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry computeNext(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> computeNext
    java.lang.Object computeNext(java.lang.Object) -> computeNext
com.google.common.collect.CustomConcurrentHashMap$SerializationProxy -> com.google.common.collect.CustomConcurrentHashMap$SerializationProxy:
    long serialVersionUID -> serialVersionUID
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.CustomConcurrentHashMap$SoftEntry -> com.google.common.collect.CustomConcurrentHashMap$SoftEntry:
    com.google.common.collect.CustomConcurrentHashMap map -> map
    int hash -> hash
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry next -> next
    com.google.common.collect.CustomConcurrentHashMap$ValueReference valueReference -> valueReference
    java.lang.Object getKey() -> getKey
    void finalizeReferent() -> finalizeReferent
    void notifyKeyReclaimed() -> notifyKeyReclaimed
    long getExpirationTime() -> getExpirationTime
    void setExpirationTime(long) -> setExpirationTime
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    void setNextExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setNextExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    void setPreviousExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setPreviousExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    void setNextEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setNextEvictable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    void setPreviousEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setPreviousEvictable
    com.google.common.collect.CustomConcurrentHashMap$ValueReference getValueReference() -> getValueReference
    void setValueReference(com.google.common.collect.CustomConcurrentHashMap$ValueReference) -> setValueReference
    void notifyValueReclaimed(com.google.common.collect.CustomConcurrentHashMap$ValueReference) -> notifyValueReclaimed
    int getHash() -> getHash
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNext() -> getNext
com.google.common.collect.CustomConcurrentHashMap$SoftEvictableEntry -> com.google.common.collect.CustomConcurrentHashMap$SoftEvictableEntry:
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextEvictable -> nextEvictable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry previousEvictable -> previousEvictable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    void setNextEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setNextEvictable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    void setPreviousEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setPreviousEvictable
com.google.common.collect.CustomConcurrentHashMap$SoftExpirableEntry -> com.google.common.collect.CustomConcurrentHashMap$SoftExpirableEntry:
    long time -> time
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextExpirable -> nextExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry previousExpirable -> previousExpirable
    long getExpirationTime() -> getExpirationTime
    void setExpirationTime(long) -> setExpirationTime
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    void setNextExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setNextExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    void setPreviousExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setPreviousExpirable
com.google.common.collect.CustomConcurrentHashMap$SoftExpirableEvictableEntry -> com.google.common.collect.CustomConcurrentHashMap$SoftExpirableEvictableEntry:
    long time -> time
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextExpirable -> nextExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry previousExpirable -> previousExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextEvictable -> nextEvictable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry previousEvictable -> previousEvictable
    long getExpirationTime() -> getExpirationTime
    void setExpirationTime(long) -> setExpirationTime
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    void setNextExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setNextExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    void setPreviousExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setPreviousExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    void setNextEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setNextEvictable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    void setPreviousEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setPreviousEvictable
com.google.common.collect.CustomConcurrentHashMap$SoftValueReference -> com.google.common.collect.CustomConcurrentHashMap$SoftValueReference:
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry entry -> entry
    void notifyValueReclaimed() -> notifyValueReclaimed
    void finalizeReferent() -> finalizeReferent
    com.google.common.collect.CustomConcurrentHashMap$ValueReference copyFor(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> copyFor
    boolean isComputingReference() -> isComputingReference
    java.lang.Object waitForValue() -> waitForValue
com.google.common.collect.CustomConcurrentHashMap$Strength -> com.google.common.collect.CustomConcurrentHashMap$Strength:
    com.google.common.collect.CustomConcurrentHashMap$Strength STRONG -> STRONG
    com.google.common.collect.CustomConcurrentHashMap$Strength SOFT -> SOFT
    com.google.common.collect.CustomConcurrentHashMap$Strength WEAK -> WEAK
    com.google.common.collect.CustomConcurrentHashMap$Strength[] $VALUES -> $VALUES
    com.google.common.collect.CustomConcurrentHashMap$Strength[] values() -> values
    com.google.common.collect.CustomConcurrentHashMap$Strength valueOf(java.lang.String) -> valueOf
    com.google.common.collect.CustomConcurrentHashMap$ValueReference referenceValue(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,java.lang.Object) -> referenceValue
    com.google.common.base.Equivalence defaultEquivalence() -> defaultEquivalence
com.google.common.collect.CustomConcurrentHashMap$Strength$1 -> com.google.common.collect.CustomConcurrentHashMap$Strength$1:
    com.google.common.collect.CustomConcurrentHashMap$ValueReference referenceValue(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,java.lang.Object) -> referenceValue
    com.google.common.base.Equivalence defaultEquivalence() -> defaultEquivalence
com.google.common.collect.CustomConcurrentHashMap$Strength$2 -> com.google.common.collect.CustomConcurrentHashMap$Strength$2:
    com.google.common.collect.CustomConcurrentHashMap$ValueReference referenceValue(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,java.lang.Object) -> referenceValue
    com.google.common.base.Equivalence defaultEquivalence() -> defaultEquivalence
com.google.common.collect.CustomConcurrentHashMap$Strength$3 -> com.google.common.collect.CustomConcurrentHashMap$Strength$3:
    com.google.common.collect.CustomConcurrentHashMap$ValueReference referenceValue(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry,java.lang.Object) -> referenceValue
    com.google.common.base.Equivalence defaultEquivalence() -> defaultEquivalence
com.google.common.collect.CustomConcurrentHashMap$StrongEntry -> com.google.common.collect.CustomConcurrentHashMap$StrongEntry:
    java.lang.Object key -> key
    com.google.common.collect.CustomConcurrentHashMap map -> map
    int hash -> hash
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry next -> next
    com.google.common.collect.CustomConcurrentHashMap$ValueReference valueReference -> valueReference
    java.lang.Object getKey() -> getKey
    void notifyKeyReclaimed() -> notifyKeyReclaimed
    long getExpirationTime() -> getExpirationTime
    void setExpirationTime(long) -> setExpirationTime
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    void setNextExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setNextExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    void setPreviousExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setPreviousExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    void setNextEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setNextEvictable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    void setPreviousEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setPreviousEvictable
    com.google.common.collect.CustomConcurrentHashMap$ValueReference getValueReference() -> getValueReference
    void setValueReference(com.google.common.collect.CustomConcurrentHashMap$ValueReference) -> setValueReference
    void notifyValueReclaimed(com.google.common.collect.CustomConcurrentHashMap$ValueReference) -> notifyValueReclaimed
    int getHash() -> getHash
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNext() -> getNext
com.google.common.collect.CustomConcurrentHashMap$StrongEvictableEntry -> com.google.common.collect.CustomConcurrentHashMap$StrongEvictableEntry:
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextEvictable -> nextEvictable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry previousEvictable -> previousEvictable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    void setNextEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setNextEvictable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    void setPreviousEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setPreviousEvictable
com.google.common.collect.CustomConcurrentHashMap$StrongExpirableEntry -> com.google.common.collect.CustomConcurrentHashMap$StrongExpirableEntry:
    long time -> time
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextExpirable -> nextExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry previousExpirable -> previousExpirable
    long getExpirationTime() -> getExpirationTime
    void setExpirationTime(long) -> setExpirationTime
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    void setNextExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setNextExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    void setPreviousExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setPreviousExpirable
com.google.common.collect.CustomConcurrentHashMap$StrongExpirableEvictableEntry -> com.google.common.collect.CustomConcurrentHashMap$StrongExpirableEvictableEntry:
    long time -> time
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextExpirable -> nextExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry previousExpirable -> previousExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextEvictable -> nextEvictable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry previousEvictable -> previousEvictable
    long getExpirationTime() -> getExpirationTime
    void setExpirationTime(long) -> setExpirationTime
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    void setNextExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setNextExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    void setPreviousExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setPreviousExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    void setNextEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setNextEvictable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    void setPreviousEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setPreviousEvictable
com.google.common.collect.CustomConcurrentHashMap$StrongValueReference -> com.google.common.collect.CustomConcurrentHashMap$StrongValueReference:
    java.lang.Object referent -> referent
    java.lang.Object get() -> get
    com.google.common.collect.CustomConcurrentHashMap$ValueReference copyFor(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> copyFor
    boolean isComputingReference() -> isComputingReference
    java.lang.Object waitForValue() -> waitForValue
    void notifyValueReclaimed() -> notifyValueReclaimed
    void clear() -> clear
com.google.common.collect.CustomConcurrentHashMap$ValueIterator -> com.google.common.collect.CustomConcurrentHashMap$ValueIterator:
    com.google.common.collect.CustomConcurrentHashMap this$0 -> this$0
    java.lang.Object next() -> next
com.google.common.collect.CustomConcurrentHashMap$ValueReference -> com.google.common.collect.CustomConcurrentHashMap$ValueReference:
    java.lang.Object get() -> get
    com.google.common.collect.CustomConcurrentHashMap$ValueReference copyFor(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> copyFor
    java.lang.Object waitForValue() -> waitForValue
    void clear() -> clear
    boolean isComputingReference() -> isComputingReference
    void notifyValueReclaimed() -> notifyValueReclaimed
com.google.common.collect.CustomConcurrentHashMap$Values -> com.google.common.collect.CustomConcurrentHashMap$Values:
    com.google.common.collect.CustomConcurrentHashMap this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    void clear() -> clear
com.google.common.collect.CustomConcurrentHashMap$WeakEntry -> com.google.common.collect.CustomConcurrentHashMap$WeakEntry:
    com.google.common.collect.CustomConcurrentHashMap map -> map
    int hash -> hash
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry next -> next
    com.google.common.collect.CustomConcurrentHashMap$ValueReference valueReference -> valueReference
    java.lang.Object getKey() -> getKey
    void finalizeReferent() -> finalizeReferent
    void notifyKeyReclaimed() -> notifyKeyReclaimed
    long getExpirationTime() -> getExpirationTime
    void setExpirationTime(long) -> setExpirationTime
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    void setNextExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setNextExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    void setPreviousExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setPreviousExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    void setNextEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setNextEvictable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    void setPreviousEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setPreviousEvictable
    com.google.common.collect.CustomConcurrentHashMap$ValueReference getValueReference() -> getValueReference
    void setValueReference(com.google.common.collect.CustomConcurrentHashMap$ValueReference) -> setValueReference
    void notifyValueReclaimed(com.google.common.collect.CustomConcurrentHashMap$ValueReference) -> notifyValueReclaimed
    int getHash() -> getHash
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNext() -> getNext
com.google.common.collect.CustomConcurrentHashMap$WeakEvictableEntry -> com.google.common.collect.CustomConcurrentHashMap$WeakEvictableEntry:
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextEvictable -> nextEvictable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry previousEvictable -> previousEvictable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    void setNextEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setNextEvictable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    void setPreviousEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setPreviousEvictable
com.google.common.collect.CustomConcurrentHashMap$WeakExpirableEntry -> com.google.common.collect.CustomConcurrentHashMap$WeakExpirableEntry:
    long time -> time
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextExpirable -> nextExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry previousExpirable -> previousExpirable
    long getExpirationTime() -> getExpirationTime
    void setExpirationTime(long) -> setExpirationTime
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    void setNextExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setNextExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    void setPreviousExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setPreviousExpirable
com.google.common.collect.CustomConcurrentHashMap$WeakExpirableEvictableEntry -> com.google.common.collect.CustomConcurrentHashMap$WeakExpirableEvictableEntry:
    long time -> time
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextExpirable -> nextExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry previousExpirable -> previousExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry nextEvictable -> nextEvictable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry previousEvictable -> previousEvictable
    long getExpirationTime() -> getExpirationTime
    void setExpirationTime(long) -> setExpirationTime
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextExpirable() -> getNextExpirable
    void setNextExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setNextExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousExpirable() -> getPreviousExpirable
    void setPreviousExpirable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setPreviousExpirable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getNextEvictable() -> getNextEvictable
    void setNextEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setNextEvictable
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry getPreviousEvictable() -> getPreviousEvictable
    void setPreviousEvictable(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> setPreviousEvictable
com.google.common.collect.CustomConcurrentHashMap$WeakValueReference -> com.google.common.collect.CustomConcurrentHashMap$WeakValueReference:
    com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry entry -> entry
    void notifyValueReclaimed() -> notifyValueReclaimed
    void finalizeReferent() -> finalizeReferent
    com.google.common.collect.CustomConcurrentHashMap$ValueReference copyFor(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry) -> copyFor
    boolean isComputingReference() -> isComputingReference
    java.lang.Object waitForValue() -> waitForValue
com.google.common.collect.CustomConcurrentHashMap$WriteThroughEntry -> com.google.common.collect.CustomConcurrentHashMap$WriteThroughEntry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    com.google.common.collect.CustomConcurrentHashMap this$0 -> this$0
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.EmptyImmutableList -> com.google.common.collect.EmptyImmutableList:
    com.google.common.collect.EmptyImmutableList INSTANCE -> INSTANCE
    com.google.common.collect.UnmodifiableListIterator ITERATOR -> ITERATOR
    java.lang.Object[] EMPTY_ARRAY -> EMPTY_ARRAY
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean isPartialView() -> isPartialView
    boolean contains(java.lang.Object) -> contains
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.Object get(int) -> get
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    com.google.common.collect.ImmutableList subList(int,int) -> subList
    com.google.common.collect.ImmutableList reverse() -> reverse
    com.google.common.collect.UnmodifiableListIterator listIterator() -> listIterator
    com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    boolean containsAll(java.util.Collection) -> containsAll
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object readResolve() -> readResolve
    java.util.List subList(int,int) -> subList
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.ListIterator listIterator() -> listIterator
    java.util.Iterator iterator() -> iterator
com.google.common.collect.EmptyImmutableList$1 -> com.google.common.collect.EmptyImmutableList$1:
    boolean hasNext() -> hasNext
    boolean hasPrevious() -> hasPrevious
    java.lang.Object next() -> next
    int nextIndex() -> nextIndex
    java.lang.Object previous() -> previous
    int previousIndex() -> previousIndex
com.google.common.collect.EmptyImmutableListMultimap -> com.google.common.collect.EmptyImmutableListMultimap:
    com.google.common.collect.EmptyImmutableListMultimap INSTANCE -> INSTANCE
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.EmptyImmutableMap -> com.google.common.collect.EmptyImmutableMap:
    com.google.common.collect.EmptyImmutableMap INSTANCE -> INSTANCE
    long serialVersionUID -> serialVersionUID
    java.lang.Object get(java.lang.Object) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    com.google.common.collect.ImmutableSet entrySet() -> entrySet
    com.google.common.collect.ImmutableSet keySet() -> keySet
    com.google.common.collect.ImmutableCollection values() -> values
    boolean equals(java.lang.Object) -> equals
    boolean isPartialView() -> isPartialView
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object readResolve() -> readResolve
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    java.util.Set keySet() -> keySet
com.google.common.collect.EmptyImmutableMultiset -> com.google.common.collect.EmptyImmutableMultiset:
    com.google.common.collect.EmptyImmutableMultiset INSTANCE -> INSTANCE
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.EmptyImmutableSet -> com.google.common.collect.EmptyImmutableSet:
    com.google.common.collect.EmptyImmutableSet INSTANCE -> INSTANCE
    java.lang.Object[] EMPTY_ARRAY -> EMPTY_ARRAY
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean isPartialView() -> isPartialView
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean containsAll(java.util.Collection) -> containsAll
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean isHashCodeFast() -> isHashCodeFast
    java.lang.String toString() -> toString
    java.lang.Object readResolve() -> readResolve
    java.util.Iterator iterator() -> iterator
com.google.common.collect.EmptyImmutableSetMultimap -> com.google.common.collect.EmptyImmutableSetMultimap:
    com.google.common.collect.EmptyImmutableSetMultimap INSTANCE -> INSTANCE
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.EmptyImmutableSortedSet -> com.google.common.collect.EmptyImmutableSortedSet:
    java.lang.Object[] EMPTY_ARRAY -> EMPTY_ARRAY
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean isPartialView() -> isPartialView
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean containsAll(java.util.Collection) -> containsAll
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object first() -> first
    java.lang.Object last() -> last
    com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object) -> headSetImpl
    com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,java.lang.Object) -> subSetImpl
    com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object) -> tailSetImpl
    int indexOf(java.lang.Object) -> indexOf
    java.util.Iterator iterator() -> iterator
com.google.common.collect.EnumBiMap -> com.google.common.collect.EnumBiMap:
    java.lang.Class keyType -> keyType
    java.lang.Class valueType -> valueType
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.EnumBiMap create(java.lang.Class,java.lang.Class) -> create
    com.google.common.collect.EnumBiMap create(java.util.Map) -> create
    java.lang.Class inferKeyType(java.util.Map) -> inferKeyType
    java.lang.Class inferValueType(java.util.Map) -> inferValueType
    java.lang.Class keyType() -> keyType
    java.lang.Class valueType() -> valueType
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.util.Set entrySet() -> entrySet
    java.util.Set values() -> values
    java.util.Set keySet() -> keySet
    com.google.common.collect.BiMap inverse() -> inverse
    void clear() -> clear
    void putAll(java.util.Map) -> putAll
    boolean containsValue(java.lang.Object) -> containsValue
com.google.common.collect.EnumHashBiMap -> com.google.common.collect.EnumHashBiMap:
    java.lang.Class keyType -> keyType
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.EnumHashBiMap create(java.lang.Class) -> create
    com.google.common.collect.EnumHashBiMap create(java.util.Map) -> create
    java.lang.Object put(java.lang.Enum,java.lang.Object) -> put
    java.lang.Object forcePut(java.lang.Enum,java.lang.Object) -> forcePut
    java.lang.Class keyType() -> keyType
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.util.Set entrySet() -> entrySet
    java.util.Set values() -> values
    java.util.Set keySet() -> keySet
    com.google.common.collect.BiMap inverse() -> inverse
    void clear() -> clear
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    boolean containsValue(java.lang.Object) -> containsValue
com.google.common.collect.EnumMultiset -> com.google.common.collect.EnumMultiset:
    java.lang.Class type -> type
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.EnumMultiset create(java.lang.Class) -> create
    com.google.common.collect.EnumMultiset create(java.lang.Iterable) -> create
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    int remove(java.lang.Object,int) -> remove
    int count(java.lang.Object) -> count
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
    int size() -> size
    java.util.Set entrySet() -> entrySet
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.util.Set elementSet() -> elementSet
    void clear() -> clear
    boolean retainAll(java.util.Collection) -> retainAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    boolean isEmpty() -> isEmpty
com.google.common.collect.EvictionListeners -> com.google.common.collect.EvictionListeners:
    com.google.common.collect.MapEvictionListener asynchronous(com.google.common.collect.MapEvictionListener,java.util.concurrent.Executor) -> asynchronous
com.google.common.collect.EvictionListeners$1 -> com.google.common.collect.EvictionListeners$1:
    java.util.concurrent.Executor val$executor -> val$executor
    com.google.common.collect.MapEvictionListener val$listener -> val$listener
    void onEviction(java.lang.Object,java.lang.Object) -> onEviction
com.google.common.collect.EvictionListeners$1$1 -> com.google.common.collect.EvictionListeners$1$1:
    java.lang.Object val$key -> val$key
    java.lang.Object val$value -> val$value
    com.google.common.collect.EvictionListeners$1 this$0 -> this$0
    void run() -> run
com.google.common.collect.ExplicitOrderedImmutableSortedSet -> com.google.common.collect.ExplicitOrderedImmutableSortedSet:
    java.lang.Object[] elements -> elements
    int fromIndex -> fromIndex
    int toIndex -> toIndex
    com.google.common.collect.ImmutableSortedSet create(java.util.List) -> create
    com.google.common.collect.ImmutableMap rankMap() -> rankMap
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean isEmpty() -> isEmpty
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean isPartialView() -> isPartialView
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    int hashCode() -> hashCode
    java.lang.Object first() -> first
    java.lang.Object last() -> last
    com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object) -> headSetImpl
    com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,java.lang.Object) -> subSetImpl
    com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object) -> tailSetImpl
    int findSubsetIndex(java.lang.Object) -> findSubsetIndex
    com.google.common.collect.ImmutableSortedSet createSubset(int,int) -> createSubset
    int indexOf(java.lang.Object) -> indexOf
    com.google.common.collect.ImmutableList createAsList() -> createAsList
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object writeReplace() -> writeReplace
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ExplicitOrderedImmutableSortedSet$SerializedForm -> com.google.common.collect.ExplicitOrderedImmutableSortedSet$SerializedForm:
    java.lang.Object[] elements -> elements
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ExplicitOrdering -> com.google.common.collect.ExplicitOrdering:
    com.google.common.collect.ImmutableMap rankMap -> rankMap
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Object,java.lang.Object) -> compare
    int rank(java.lang.Object) -> rank
    com.google.common.collect.ImmutableMap buildRankMap(java.util.List) -> buildRankMap
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.ForwardingCollection -> com.google.common.collect.ForwardingCollection:
    java.util.Collection delegate() -> delegate
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean removeAll(java.util.Collection) -> removeAll
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean add(java.lang.Object) -> add
    boolean remove(java.lang.Object) -> remove
    boolean containsAll(java.util.Collection) -> containsAll
    boolean addAll(java.util.Collection) -> addAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean standardContains(java.lang.Object) -> standardContains
    boolean standardContainsAll(java.util.Collection) -> standardContainsAll
    boolean standardAddAll(java.util.Collection) -> standardAddAll
    boolean standardRemove(java.lang.Object) -> standardRemove
    boolean standardRemoveAll(java.util.Collection) -> standardRemoveAll
    boolean standardRetainAll(java.util.Collection) -> standardRetainAll
    void standardClear() -> standardClear
    boolean standardIsEmpty() -> standardIsEmpty
    java.lang.String standardToString() -> standardToString
    java.lang.Object[] standardToArray() -> standardToArray
    java.lang.Object[] standardToArray(java.lang.Object[]) -> standardToArray
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingConcurrentMap -> com.google.common.collect.ForwardingConcurrentMap:
    java.util.concurrent.ConcurrentMap delegate() -> delegate
    java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    java.util.Map delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingIterator -> com.google.common.collect.ForwardingIterator:
    java.util.Iterator delegate() -> delegate
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingList -> com.google.common.collect.ForwardingList:
    java.util.List delegate() -> delegate
    void add(int,java.lang.Object) -> add
    boolean addAll(int,java.util.Collection) -> addAll
    java.lang.Object get(int) -> get
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    java.lang.Object remove(int) -> remove
    java.lang.Object set(int,java.lang.Object) -> set
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean standardAdd(java.lang.Object) -> standardAdd
    boolean standardAddAll(int,java.lang.Iterable) -> standardAddAll
    int standardIndexOf(java.lang.Object) -> standardIndexOf
    int standardLastIndexOf(java.lang.Object) -> standardLastIndexOf
    java.util.Iterator standardIterator() -> standardIterator
    java.util.ListIterator standardListIterator() -> standardListIterator
    java.util.ListIterator standardListIterator(int) -> standardListIterator
    java.util.List standardSubList(int,int) -> standardSubList
    boolean standardEquals(java.lang.Object) -> standardEquals
    int standardHashCode() -> standardHashCode
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingListIterator -> com.google.common.collect.ForwardingListIterator:
    java.util.ListIterator delegate() -> delegate
    void add(java.lang.Object) -> add
    boolean hasPrevious() -> hasPrevious
    int nextIndex() -> nextIndex
    java.lang.Object previous() -> previous
    int previousIndex() -> previousIndex
    void set(java.lang.Object) -> set
    java.util.Iterator delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingListMultimap -> com.google.common.collect.ForwardingListMultimap:
    com.google.common.collect.ListMultimap delegate() -> delegate
    java.util.List get(java.lang.Object) -> get
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection get(java.lang.Object) -> get
    com.google.common.collect.Multimap delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingMap -> com.google.common.collect.ForwardingMap:
    java.util.Map delegate() -> delegate
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void standardPutAll(java.util.Map) -> standardPutAll
    java.lang.Object standardRemove(java.lang.Object) -> standardRemove
    void standardClear() -> standardClear
    java.util.Set standardKeySet() -> standardKeySet
    boolean standardContainsKey(java.lang.Object) -> standardContainsKey
    java.util.Collection standardValues() -> standardValues
    boolean standardContainsValue(java.lang.Object) -> standardContainsValue
    java.util.Set standardEntrySet(com.google.common.base.Supplier) -> standardEntrySet
    boolean standardIsEmpty() -> standardIsEmpty
    boolean standardEquals(java.lang.Object) -> standardEquals
    int standardHashCode() -> standardHashCode
    java.lang.String standardToString() -> standardToString
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingMapEntry -> com.google.common.collect.ForwardingMapEntry:
    java.util.Map$Entry delegate() -> delegate
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean standardEquals(java.lang.Object) -> standardEquals
    int standardHashCode() -> standardHashCode
    java.lang.String standardToString() -> standardToString
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingMultimap -> com.google.common.collect.ForwardingMultimap:
    com.google.common.collect.Multimap delegate() -> delegate
    java.util.Map asMap() -> asMap
    void clear() -> clear
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.util.Collection entries() -> entries
    java.util.Collection get(java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    com.google.common.collect.Multiset keys() -> keys
    java.util.Set keySet() -> keySet
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    int size() -> size
    java.util.Collection values() -> values
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingMultiset -> com.google.common.collect.ForwardingMultiset:
    com.google.common.collect.Multiset delegate() -> delegate
    int count(java.lang.Object) -> count
    int add(java.lang.Object,int) -> add
    int remove(java.lang.Object,int) -> remove
    java.util.Set elementSet() -> elementSet
    java.util.Set entrySet() -> entrySet
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    boolean standardContains(java.lang.Object) -> standardContains
    void standardClear() -> standardClear
    int standardCount(java.lang.Object) -> standardCount
    boolean standardAdd(java.lang.Object) -> standardAdd
    boolean standardAddAll(java.util.Collection) -> standardAddAll
    boolean standardRemove(java.lang.Object) -> standardRemove
    boolean standardRemoveAll(java.util.Collection) -> standardRemoveAll
    boolean standardRetainAll(java.util.Collection) -> standardRetainAll
    int standardSetCount(java.lang.Object,int) -> standardSetCount
    boolean standardSetCount(java.lang.Object,int,int) -> standardSetCount
    java.util.Set standardElementSet() -> standardElementSet
    java.util.Iterator standardIterator() -> standardIterator
    int standardSize() -> standardSize
    boolean standardEquals(java.lang.Object) -> standardEquals
    int standardHashCode() -> standardHashCode
    java.lang.String standardToString() -> standardToString
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingObject -> com.google.common.collect.ForwardingObject:
    java.lang.Object delegate() -> delegate
    java.lang.String toString() -> toString
com.google.common.collect.ForwardingQueue -> com.google.common.collect.ForwardingQueue:
    java.util.Queue delegate() -> delegate
    boolean offer(java.lang.Object) -> offer
    java.lang.Object poll() -> poll
    java.lang.Object remove() -> remove
    java.lang.Object peek() -> peek
    java.lang.Object element() -> element
    boolean standardOffer(java.lang.Object) -> standardOffer
    java.lang.Object standardPeek() -> standardPeek
    java.lang.Object standardPoll() -> standardPoll
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingSet -> com.google.common.collect.ForwardingSet:
    java.util.Set delegate() -> delegate
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean standardEquals(java.lang.Object) -> standardEquals
    int standardHashCode() -> standardHashCode
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingSetMultimap -> com.google.common.collect.ForwardingSetMultimap:
    com.google.common.collect.SetMultimap delegate() -> delegate
    java.util.Set entries() -> entries
    java.util.Set get(java.lang.Object) -> get
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection entries() -> entries
    com.google.common.collect.Multimap delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingSortedMap -> com.google.common.collect.ForwardingSortedMap:
    java.util.SortedMap delegate() -> delegate
    java.util.Comparator comparator() -> comparator
    java.lang.Object firstKey() -> firstKey
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.lang.Object lastKey() -> lastKey
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    int unsafeCompare(java.lang.Object,java.lang.Object) -> unsafeCompare
    boolean standardContainsKey(java.lang.Object) -> standardContainsKey
    java.lang.Object standardRemove(java.lang.Object) -> standardRemove
    java.util.SortedMap standardSubMap(java.lang.Object,java.lang.Object) -> standardSubMap
    java.util.Map delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingSortedSet -> com.google.common.collect.ForwardingSortedSet:
    java.util.SortedSet delegate() -> delegate
    java.util.Comparator comparator() -> comparator
    java.lang.Object first() -> first
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.lang.Object last() -> last
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    int unsafeCompare(java.lang.Object,java.lang.Object) -> unsafeCompare
    boolean standardContains(java.lang.Object) -> standardContains
    boolean standardRemove(java.lang.Object) -> standardRemove
    java.util.SortedSet standardSubSet(java.lang.Object,java.lang.Object) -> standardSubSet
    java.util.Set delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingSortedSetMultimap -> com.google.common.collect.ForwardingSortedSetMultimap:
    com.google.common.collect.SortedSetMultimap delegate() -> delegate
    java.util.SortedSet get(java.lang.Object) -> get
    java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Comparator valueComparator() -> valueComparator
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set get(java.lang.Object) -> get
    com.google.common.collect.SetMultimap delegate() -> delegate
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    com.google.common.collect.Multimap delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingTable -> com.google.common.collect.ForwardingTable:
    com.google.common.collect.Table delegate() -> delegate
    java.util.Set cellSet() -> cellSet
    void clear() -> clear
    java.util.Map column(java.lang.Object) -> column
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Map columnMap() -> columnMap
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    boolean containsColumn(java.lang.Object) -> containsColumn
    boolean containsRow(java.lang.Object) -> containsRow
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    void putAll(com.google.common.collect.Table) -> putAll
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Map row(java.lang.Object) -> row
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Map rowMap() -> rowMap
    int size() -> size
    java.util.Collection values() -> values
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object delegate() -> delegate
com.google.common.collect.GenericMapMaker -> com.google.common.collect.GenericMapMaker:
    com.google.common.collect.MapEvictionListener evictionListener -> evictionListener
    com.google.common.collect.GenericMapMaker initialCapacity(int) -> initialCapacity
    com.google.common.collect.GenericMapMaker maximumSize(int) -> maximumSize
    com.google.common.collect.GenericMapMaker concurrencyLevel(int) -> concurrencyLevel
    com.google.common.collect.GenericMapMaker weakKeys() -> weakKeys
    com.google.common.collect.GenericMapMaker softKeys() -> softKeys
    com.google.common.collect.GenericMapMaker weakValues() -> weakValues
    com.google.common.collect.GenericMapMaker softValues() -> softValues
    com.google.common.collect.GenericMapMaker expiration(long,java.util.concurrent.TimeUnit) -> expiration
    com.google.common.collect.GenericMapMaker expireAfterWrite(long,java.util.concurrent.TimeUnit) -> expireAfterWrite
    com.google.common.collect.GenericMapMaker expireAfterAccess(long,java.util.concurrent.TimeUnit) -> expireAfterAccess
    java.util.concurrent.ConcurrentMap makeMap() -> makeMap
    java.util.concurrent.ConcurrentMap makeComputingMap(com.google.common.base.Function) -> makeComputingMap
com.google.common.collect.HashBasedTable -> com.google.common.collect.HashBasedTable:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.HashBasedTable create() -> create
    com.google.common.collect.HashBasedTable create(int,int) -> create
    com.google.common.collect.HashBasedTable create(com.google.common.collect.Table) -> create
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    boolean containsColumn(java.lang.Object) -> containsColumn
    boolean containsRow(java.lang.Object) -> containsRow
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    boolean equals(java.lang.Object) -> equals
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Map columnMap() -> columnMap
    java.util.Map rowMap() -> rowMap
    java.util.Collection values() -> values
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Map column(java.lang.Object) -> column
    java.util.Map row(java.lang.Object) -> row
    java.util.Set cellSet() -> cellSet
    void putAll(com.google.common.collect.Table) -> putAll
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    void clear() -> clear
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    int size() -> size
    boolean isEmpty() -> isEmpty
com.google.common.collect.HashBasedTable$Factory -> com.google.common.collect.HashBasedTable$Factory:
    int expectedSize -> expectedSize
    long serialVersionUID -> serialVersionUID
    java.util.Map get() -> get
    java.lang.Object get() -> get
com.google.common.collect.HashBiMap -> com.google.common.collect.HashBiMap:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.HashBiMap create() -> create
    com.google.common.collect.HashBiMap create(int) -> create
    com.google.common.collect.HashBiMap create(java.util.Map) -> create
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.util.Set entrySet() -> entrySet
    java.util.Set values() -> values
    java.util.Set keySet() -> keySet
    com.google.common.collect.BiMap inverse() -> inverse
    void clear() -> clear
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    boolean containsValue(java.lang.Object) -> containsValue
com.google.common.collect.HashMultimap -> com.google.common.collect.HashMultimap:
    int DEFAULT_VALUES_PER_KEY -> DEFAULT_VALUES_PER_KEY
    int expectedValuesPerKey -> expectedValuesPerKey
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.HashMultimap create() -> create
    com.google.common.collect.HashMultimap create(int,int) -> create
    com.google.common.collect.HashMultimap create(com.google.common.collect.Multimap) -> create
    java.util.Set createCollection() -> createCollection
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    boolean equals(java.lang.Object) -> equals
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.util.Map asMap() -> asMap
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set entries() -> entries
    java.util.Set get(java.lang.Object) -> get
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    java.util.Collection values() -> values
    com.google.common.collect.Multiset keys() -> keys
    java.util.Set keySet() -> keySet
    void clear() -> clear
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean containsValue(java.lang.Object) -> containsValue
    boolean containsKey(java.lang.Object) -> containsKey
    boolean isEmpty() -> isEmpty
    int size() -> size
    java.util.Collection createCollection() -> createCollection
com.google.common.collect.HashMultiset -> com.google.common.collect.HashMultiset:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.HashMultiset create() -> create
    com.google.common.collect.HashMultiset create(int) -> create
    com.google.common.collect.HashMultiset create(java.lang.Iterable) -> create
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    int setCount(java.lang.Object,int) -> setCount
    int remove(java.lang.Object,int) -> remove
    int add(java.lang.Object,int) -> add
    int count(java.lang.Object) -> count
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
    int size() -> size
    java.util.Set entrySet() -> entrySet
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.util.Set elementSet() -> elementSet
    void clear() -> clear
    boolean retainAll(java.util.Collection) -> retainAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean addAll(java.util.Collection) -> addAll
    boolean setCount(java.lang.Object,int,int) -> setCount
    boolean remove(java.lang.Object) -> remove
    boolean add(java.lang.Object) -> add
    boolean isEmpty() -> isEmpty
com.google.common.collect.Hashing -> com.google.common.collect.Hashing:
    int smear(int) -> smear
com.google.common.collect.ImmutableAsList -> com.google.common.collect.ImmutableAsList:
    com.google.common.collect.ImmutableCollection collection -> collection
    boolean contains(java.lang.Object) -> contains
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableAsList$SerializedForm -> com.google.common.collect.ImmutableAsList$SerializedForm:
    com.google.common.collect.ImmutableCollection collection -> collection
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableBiMap -> com.google.common.collect.ImmutableBiMap:
    com.google.common.collect.ImmutableBiMap EMPTY_IMMUTABLE_BIMAP -> EMPTY_IMMUTABLE_BIMAP
    com.google.common.collect.ImmutableBiMap of() -> of
    com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableBiMap$Builder builder() -> builder
    com.google.common.collect.ImmutableBiMap copyOf(java.util.Map) -> copyOf
    com.google.common.collect.ImmutableMap delegate() -> delegate
    com.google.common.collect.ImmutableBiMap inverse() -> inverse
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    com.google.common.collect.ImmutableSet entrySet() -> entrySet
    java.lang.Object get(java.lang.Object) -> get
    com.google.common.collect.ImmutableSet keySet() -> keySet
    com.google.common.collect.ImmutableSet values() -> values
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    boolean isEmpty() -> isEmpty
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.collect.ImmutableCollection values() -> values
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    java.util.Set keySet() -> keySet
    com.google.common.collect.BiMap inverse() -> inverse
    java.util.Set values() -> values
    com.google.common.collect.ImmutableBiMap access$000() -> access$000
com.google.common.collect.ImmutableBiMap$Builder -> com.google.common.collect.ImmutableBiMap$Builder:
    com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object) -> put
    com.google.common.collect.ImmutableBiMap$Builder putAll(java.util.Map) -> putAll
    com.google.common.collect.ImmutableBiMap build() -> build
    com.google.common.collect.ImmutableMap build() -> build
    com.google.common.collect.ImmutableMap$Builder putAll(java.util.Map) -> putAll
    com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object) -> put
com.google.common.collect.ImmutableBiMap$EmptyBiMap -> com.google.common.collect.ImmutableBiMap$EmptyBiMap:
    com.google.common.collect.ImmutableMap delegate() -> delegate
    com.google.common.collect.ImmutableBiMap inverse() -> inverse
    boolean isPartialView() -> isPartialView
    java.lang.Object readResolve() -> readResolve
    com.google.common.collect.BiMap inverse() -> inverse
    java.util.Set values() -> values
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    java.util.Set keySet() -> keySet
    com.google.common.collect.ImmutableCollection values() -> values
com.google.common.collect.ImmutableBiMap$SerializedForm -> com.google.common.collect.ImmutableBiMap$SerializedForm:
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableClassToInstanceMap -> com.google.common.collect.ImmutableClassToInstanceMap:
    com.google.common.collect.ImmutableMap delegate -> delegate
    com.google.common.collect.ImmutableClassToInstanceMap$Builder builder() -> builder
    com.google.common.collect.ImmutableClassToInstanceMap copyOf(java.util.Map) -> copyOf
    java.util.Map delegate() -> delegate
    java.lang.Object getInstance(java.lang.Class) -> getInstance
    java.lang.Object putInstance(java.lang.Class,java.lang.Object) -> putInstance
    java.lang.Object delegate() -> delegate
com.google.common.collect.ImmutableClassToInstanceMap$1 -> com.google.common.collect.ImmutableClassToInstanceMap$1:
com.google.common.collect.ImmutableClassToInstanceMap$Builder -> com.google.common.collect.ImmutableClassToInstanceMap$Builder:
    com.google.common.collect.ImmutableMap$Builder mapBuilder -> mapBuilder
    com.google.common.collect.ImmutableClassToInstanceMap$Builder put(java.lang.Class,java.lang.Object) -> put
    com.google.common.collect.ImmutableClassToInstanceMap$Builder putAll(java.util.Map) -> putAll
    java.lang.Object cast(java.lang.Class,java.lang.Object) -> cast
    com.google.common.collect.ImmutableClassToInstanceMap build() -> build
com.google.common.collect.ImmutableCollection -> com.google.common.collect.ImmutableCollection:
    com.google.common.collect.ImmutableCollection EMPTY_IMMUTABLE_COLLECTION -> EMPTY_IMMUTABLE_COLLECTION
    com.google.common.collect.ImmutableList asList -> asList
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.lang.String toString() -> toString
    boolean add(java.lang.Object) -> add
    boolean remove(java.lang.Object) -> remove
    boolean addAll(java.util.Collection) -> addAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    com.google.common.collect.ImmutableList asList() -> asList
    com.google.common.collect.ImmutableList createAsList() -> createAsList
    boolean isPartialView() -> isPartialView
    java.lang.Object writeReplace() -> writeReplace
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableCollection$1 -> com.google.common.collect.ImmutableCollection$1:
com.google.common.collect.ImmutableCollection$ArrayImmutableCollection -> com.google.common.collect.ImmutableCollection$ArrayImmutableCollection:
    java.lang.Object[] elements -> elements
    int size() -> size
    boolean isEmpty() -> isEmpty
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.ImmutableList createAsList() -> createAsList
    boolean isPartialView() -> isPartialView
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableCollection$Builder -> com.google.common.collect.ImmutableCollection$Builder:
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableCollection build() -> build
com.google.common.collect.ImmutableCollection$EmptyImmutableCollection -> com.google.common.collect.ImmutableCollection$EmptyImmutableCollection:
    java.lang.Object[] EMPTY_ARRAY -> EMPTY_ARRAY
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    com.google.common.collect.ImmutableList createAsList() -> createAsList
    boolean isPartialView() -> isPartialView
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableCollection$SerializedForm -> com.google.common.collect.ImmutableCollection$SerializedForm:
    java.lang.Object[] elements -> elements
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableEntry -> com.google.common.collect.ImmutableEntry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    long serialVersionUID -> serialVersionUID
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.ImmutableEnumSet -> com.google.common.collect.ImmutableEnumSet:
    java.util.EnumSet delegate -> delegate
    int hashCode -> hashCode
    boolean isPartialView() -> isPartialView
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableEnumSet$EnumSerializedForm -> com.google.common.collect.ImmutableEnumSet$EnumSerializedForm:
    java.util.EnumSet delegate -> delegate
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableList -> com.google.common.collect.ImmutableList:
    com.google.common.collect.ImmutableList of() -> of
    com.google.common.collect.ImmutableList of(java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object[]) -> of
    com.google.common.collect.ImmutableList copyOf(java.lang.Iterable) -> copyOf
    com.google.common.collect.ImmutableList copyOf(java.util.Collection) -> copyOf
    com.google.common.collect.ImmutableList copyOf(java.util.Iterator) -> copyOf
    com.google.common.collect.ImmutableList copyOf(java.lang.Object[]) -> copyOf
    com.google.common.collect.ImmutableList copyFromCollection(java.util.Collection) -> copyFromCollection
    com.google.common.collect.ImmutableList construct(java.lang.Object[]) -> construct
    java.lang.Object checkElementNotNull(java.lang.Object,int) -> checkElementNotNull
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.UnmodifiableListIterator listIterator() -> listIterator
    com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    com.google.common.collect.ImmutableList subList(int,int) -> subList
    boolean addAll(int,java.util.Collection) -> addAll
    java.lang.Object set(int,java.lang.Object) -> set
    void add(int,java.lang.Object) -> add
    java.lang.Object remove(int) -> remove
    com.google.common.collect.ImmutableList asList() -> asList
    com.google.common.collect.ImmutableList reverse() -> reverse
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.collect.ImmutableList$Builder builder() -> builder
    java.util.Iterator iterator() -> iterator
    java.util.List subList(int,int) -> subList
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.ListIterator listIterator() -> listIterator
com.google.common.collect.ImmutableList$Builder -> com.google.common.collect.ImmutableList$Builder:
    java.util.ArrayList contents -> contents
    com.google.common.collect.ImmutableList$Builder add(java.lang.Object) -> add
    com.google.common.collect.ImmutableList$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableList$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableList$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableList build() -> build
    com.google.common.collect.ImmutableCollection build() -> build
    com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
com.google.common.collect.ImmutableList$ReverseImmutableList -> com.google.common.collect.ImmutableList$ReverseImmutableList:
    com.google.common.collect.ImmutableList forwardList -> forwardList
    int size -> size
    int reverseIndex(int) -> reverseIndex
    int reversePosition(int) -> reversePosition
    com.google.common.collect.ImmutableList reverse() -> reverse
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    com.google.common.collect.ImmutableList subList(int,int) -> subList
    java.lang.Object get(int) -> get
    com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean isPartialView() -> isPartialView
    java.util.List subList(int,int) -> subList
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.ListIterator listIterator() -> listIterator
    java.util.Iterator iterator() -> iterator
    int access$000(com.google.common.collect.ImmutableList$ReverseImmutableList,int) -> access$000
com.google.common.collect.ImmutableList$ReverseImmutableList$1 -> com.google.common.collect.ImmutableList$ReverseImmutableList$1:
    com.google.common.collect.UnmodifiableListIterator val$forward -> val$forward
    com.google.common.collect.ImmutableList$ReverseImmutableList this$0 -> this$0
    boolean hasNext() -> hasNext
    boolean hasPrevious() -> hasPrevious
    java.lang.Object next() -> next
    int nextIndex() -> nextIndex
    java.lang.Object previous() -> previous
    int previousIndex() -> previousIndex
com.google.common.collect.ImmutableList$SerializedForm -> com.google.common.collect.ImmutableList$SerializedForm:
    java.lang.Object[] elements -> elements
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableListMultimap -> com.google.common.collect.ImmutableListMultimap:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ImmutableListMultimap of() -> of
    com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableListMultimap$Builder builder() -> builder
    com.google.common.collect.ImmutableListMultimap copyOf(com.google.common.collect.Multimap) -> copyOf
    com.google.common.collect.ImmutableList get(java.lang.Object) -> get
    com.google.common.collect.ImmutableList removeAll(java.lang.Object) -> removeAll
    com.google.common.collect.ImmutableList replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    com.google.common.collect.ImmutableCollection get(java.lang.Object) -> get
    com.google.common.collect.ImmutableCollection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    com.google.common.collect.ImmutableCollection removeAll(java.lang.Object) -> removeAll
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List get(java.lang.Object) -> get
com.google.common.collect.ImmutableListMultimap$Builder -> com.google.common.collect.ImmutableListMultimap$Builder:
    com.google.common.collect.ImmutableListMultimap$Builder put(java.lang.Object,java.lang.Object) -> put
    com.google.common.collect.ImmutableListMultimap$Builder putAll(java.lang.Object,java.lang.Iterable) -> putAll
    com.google.common.collect.ImmutableListMultimap$Builder putAll(java.lang.Object,java.lang.Object[]) -> putAll
    com.google.common.collect.ImmutableListMultimap$Builder putAll(com.google.common.collect.Multimap) -> putAll
    com.google.common.collect.ImmutableListMultimap$Builder orderKeysBy(java.util.Comparator) -> orderKeysBy
    com.google.common.collect.ImmutableListMultimap$Builder orderValuesBy(java.util.Comparator) -> orderValuesBy
    com.google.common.collect.ImmutableListMultimap build() -> build
    com.google.common.collect.ImmutableMultimap build() -> build
    com.google.common.collect.ImmutableMultimap$Builder orderValuesBy(java.util.Comparator) -> orderValuesBy
    com.google.common.collect.ImmutableMultimap$Builder orderKeysBy(java.util.Comparator) -> orderKeysBy
    com.google.common.collect.ImmutableMultimap$Builder putAll(com.google.common.collect.Multimap) -> putAll
    com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Object[]) -> putAll
    com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Iterable) -> putAll
    com.google.common.collect.ImmutableMultimap$Builder put(java.lang.Object,java.lang.Object) -> put
com.google.common.collect.ImmutableMap -> com.google.common.collect.ImmutableMap:
    com.google.common.collect.ImmutableMap of() -> of
    com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMap$Builder builder() -> builder
    java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object) -> entryOf
    com.google.common.collect.ImmutableMap copyOf(java.util.Map) -> copyOf
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    void putAll(java.util.Map) -> putAll
    void clear() -> clear
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    com.google.common.collect.ImmutableSet entrySet() -> entrySet
    com.google.common.collect.ImmutableSet keySet() -> keySet
    com.google.common.collect.ImmutableCollection values() -> values
    boolean equals(java.lang.Object) -> equals
    boolean isPartialView() -> isPartialView
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    java.util.Set keySet() -> keySet
com.google.common.collect.ImmutableMap$Builder -> com.google.common.collect.ImmutableMap$Builder:
    java.util.ArrayList entries -> entries
    com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object) -> put
    com.google.common.collect.ImmutableMap$Builder putAll(java.util.Map) -> putAll
    com.google.common.collect.ImmutableMap build() -> build
    com.google.common.collect.ImmutableMap fromEntryList(java.util.List) -> fromEntryList
com.google.common.collect.ImmutableMap$SerializedForm -> com.google.common.collect.ImmutableMap$SerializedForm:
    java.lang.Object[] keys -> keys
    java.lang.Object[] values -> values
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
    java.lang.Object createMap(com.google.common.collect.ImmutableMap$Builder) -> createMap
com.google.common.collect.ImmutableMultimap -> com.google.common.collect.ImmutableMultimap:
    com.google.common.collect.ImmutableMap map -> map
    int size -> size
    com.google.common.collect.ImmutableCollection entries -> entries
    com.google.common.collect.ImmutableMultiset keys -> keys
    com.google.common.collect.ImmutableCollection values -> values
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ImmutableMultimap of() -> of
    com.google.common.collect.ImmutableMultimap of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMultimap$Builder builder() -> builder
    com.google.common.collect.ImmutableMultimap copyOf(com.google.common.collect.Multimap) -> copyOf
    com.google.common.collect.ImmutableCollection removeAll(java.lang.Object) -> removeAll
    com.google.common.collect.ImmutableCollection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    void clear() -> clear
    com.google.common.collect.ImmutableCollection get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean isPartialView() -> isPartialView
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    boolean isEmpty() -> isEmpty
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.common.collect.ImmutableSet keySet() -> keySet
    com.google.common.collect.ImmutableMap asMap() -> asMap
    com.google.common.collect.ImmutableCollection entries() -> entries
    com.google.common.collect.ImmutableMultiset keys() -> keys
    com.google.common.collect.ImmutableMultiset createKeys() -> createKeys
    com.google.common.collect.ImmutableCollection values() -> values
    java.util.Map asMap() -> asMap
    java.util.Collection entries() -> entries
    java.util.Collection values() -> values
    com.google.common.collect.Multiset keys() -> keys
    java.util.Set keySet() -> keySet
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
com.google.common.collect.ImmutableMultimap$Builder -> com.google.common.collect.ImmutableMultimap$Builder:
    com.google.common.collect.Multimap builderMultimap -> builderMultimap
    java.util.Comparator valueComparator -> valueComparator
    com.google.common.collect.ImmutableMultimap$Builder put(java.lang.Object,java.lang.Object) -> put
    com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Iterable) -> putAll
    com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Object[]) -> putAll
    com.google.common.collect.ImmutableMultimap$Builder putAll(com.google.common.collect.Multimap) -> putAll
    com.google.common.collect.ImmutableMultimap$Builder orderKeysBy(java.util.Comparator) -> orderKeysBy
    com.google.common.collect.ImmutableMultimap$Builder orderValuesBy(java.util.Comparator) -> orderValuesBy
    com.google.common.collect.ImmutableMultimap build() -> build
com.google.common.collect.ImmutableMultimap$BuilderMultimap -> com.google.common.collect.ImmutableMultimap$BuilderMultimap:
    long serialVersionUID -> serialVersionUID
    java.util.Collection createCollection() -> createCollection
com.google.common.collect.ImmutableMultimap$EntryCollection -> com.google.common.collect.ImmutableMultimap$EntryCollection:
    com.google.common.collect.ImmutableMultimap multimap -> multimap
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean isPartialView() -> isPartialView
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableMultimap$EntryCollection$1 -> com.google.common.collect.ImmutableMultimap$EntryCollection$1:
    java.lang.Object key -> key
    java.util.Iterator valueIterator -> valueIterator
    java.util.Iterator val$mapIterator -> val$mapIterator
    com.google.common.collect.ImmutableMultimap$EntryCollection this$0 -> this$0
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    java.lang.Object next() -> next
com.google.common.collect.ImmutableMultimap$FieldSettersHolder -> com.google.common.collect.ImmutableMultimap$FieldSettersHolder:
    com.google.common.collect.Serialization$FieldSetter MAP_FIELD_SETTER -> MAP_FIELD_SETTER
    com.google.common.collect.Serialization$FieldSetter SIZE_FIELD_SETTER -> SIZE_FIELD_SETTER
com.google.common.collect.ImmutableMultimap$SortedKeyBuilderMultimap -> com.google.common.collect.ImmutableMultimap$SortedKeyBuilderMultimap:
    long serialVersionUID -> serialVersionUID
    java.util.Collection createCollection() -> createCollection
com.google.common.collect.ImmutableMultimap$Values -> com.google.common.collect.ImmutableMultimap$Values:
    com.google.common.collect.ImmutableMultimap multimap -> multimap
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    int size() -> size
    boolean isPartialView() -> isPartialView
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableMultimap$Values$1 -> com.google.common.collect.ImmutableMultimap$Values$1:
    java.util.Iterator val$entryIterator -> val$entryIterator
    com.google.common.collect.ImmutableMultimap$Values this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.ImmutableMultiset -> com.google.common.collect.ImmutableMultiset:
    com.google.common.collect.ImmutableMap map -> map
    int size -> size
    com.google.common.collect.ImmutableSet entrySet -> entrySet
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ImmutableMultiset of() -> of
    com.google.common.collect.ImmutableMultiset of(java.lang.Object) -> of
    com.google.common.collect.ImmutableMultiset of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMultiset of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMultiset of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMultiset of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMultiset of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> of
    com.google.common.collect.ImmutableMultiset of(java.lang.Object[]) -> of
    com.google.common.collect.ImmutableMultiset copyOf(java.lang.Object[]) -> copyOf
    com.google.common.collect.ImmutableMultiset copyOf(java.lang.Iterable) -> copyOf
    com.google.common.collect.ImmutableMultiset copyOfInternal(java.lang.Object[]) -> copyOfInternal
    com.google.common.collect.ImmutableMultiset copyOfInternal(com.google.common.collect.Multiset) -> copyOfInternal
    com.google.common.collect.ImmutableMultiset copyOf(java.util.Iterator) -> copyOf
    boolean isPartialView() -> isPartialView
    int count(java.lang.Object) -> count
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    int add(java.lang.Object,int) -> add
    int remove(java.lang.Object,int) -> remove
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.util.Set elementSet() -> elementSet
    java.util.Set entrySet() -> entrySet
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.collect.ImmutableMultiset$Builder builder() -> builder
    java.util.Iterator iterator() -> iterator
    com.google.common.collect.ImmutableMap access$000(com.google.common.collect.ImmutableMultiset) -> access$000
com.google.common.collect.ImmutableMultiset$1 -> com.google.common.collect.ImmutableMultiset$1:
    int remaining -> remaining
    java.lang.Object element -> element
    java.util.Iterator val$mapIterator -> val$mapIterator
    com.google.common.collect.ImmutableMultiset this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.ImmutableMultiset$Builder -> com.google.common.collect.ImmutableMultiset$Builder:
    com.google.common.collect.Multiset contents -> contents
    com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object) -> add
    com.google.common.collect.ImmutableMultiset$Builder addCopies(java.lang.Object,int) -> addCopies
    com.google.common.collect.ImmutableMultiset$Builder setCount(java.lang.Object,int) -> setCount
    com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableMultiset$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableMultiset$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableMultiset build() -> build
    com.google.common.collect.ImmutableCollection build() -> build
    com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
com.google.common.collect.ImmutableMultiset$EntrySet -> com.google.common.collect.ImmutableMultiset$EntrySet:
    com.google.common.collect.ImmutableMultiset multiset -> multiset
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    int size() -> size
    boolean isPartialView() -> isPartialView
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    int hashCode() -> hashCode
    java.lang.Object writeReplace() -> writeReplace
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableMultiset$EntrySet$1 -> com.google.common.collect.ImmutableMultiset$EntrySet$1:
    java.util.Iterator val$mapIterator -> val$mapIterator
    com.google.common.collect.ImmutableMultiset$EntrySet this$0 -> this$0
    boolean hasNext() -> hasNext
    com.google.common.collect.Multiset$Entry next() -> next
    java.lang.Object next() -> next
com.google.common.collect.ImmutableMultiset$FieldSettersHolder -> com.google.common.collect.ImmutableMultiset$FieldSettersHolder:
    com.google.common.collect.Serialization$FieldSetter MAP_FIELD_SETTER -> MAP_FIELD_SETTER
    com.google.common.collect.Serialization$FieldSetter SIZE_FIELD_SETTER -> SIZE_FIELD_SETTER
com.google.common.collect.ImmutableSet -> com.google.common.collect.ImmutableSet:
    int MAX_TABLE_SIZE -> MAX_TABLE_SIZE
    int CUTOFF -> CUTOFF
    com.google.common.collect.ImmutableSet of() -> of
    com.google.common.collect.ImmutableSet of(java.lang.Object) -> of
    com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> of
    com.google.common.collect.ImmutableSet construct(java.lang.Object[]) -> construct
    int chooseTableSize(int) -> chooseTableSize
    com.google.common.collect.ImmutableSet of(java.lang.Object[]) -> of
    com.google.common.collect.ImmutableSet copyOf(java.lang.Object[]) -> copyOf
    com.google.common.collect.ImmutableSet copyOf(java.lang.Iterable) -> copyOf
    com.google.common.collect.ImmutableSet copyOf(java.util.Iterator) -> copyOf
    com.google.common.collect.ImmutableSet copyOf(java.util.Collection) -> copyOf
    com.google.common.collect.ImmutableSet copyFromCollection(java.util.Collection) -> copyFromCollection
    boolean isHashCodeFast() -> isHashCodeFast
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.collect.ImmutableSet$Builder builder() -> builder
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableSet$ArrayImmutableSet -> com.google.common.collect.ImmutableSet$ArrayImmutableSet:
    java.lang.Object[] elements -> elements
    int size() -> size
    boolean isEmpty() -> isEmpty
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isPartialView() -> isPartialView
    com.google.common.collect.ImmutableList createAsList() -> createAsList
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableSet$Builder -> com.google.common.collect.ImmutableSet$Builder:
    java.util.ArrayList contents -> contents
    com.google.common.collect.ImmutableSet$Builder add(java.lang.Object) -> add
    com.google.common.collect.ImmutableSet$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableSet$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableSet$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableSet build() -> build
    com.google.common.collect.ImmutableCollection build() -> build
    com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
com.google.common.collect.ImmutableSet$SerializedForm -> com.google.common.collect.ImmutableSet$SerializedForm:
    java.lang.Object[] elements -> elements
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSet$TransformedImmutableSet -> com.google.common.collect.ImmutableSet$TransformedImmutableSet:
    java.lang.Object[] source -> source
    int hashCode -> hashCode
    java.lang.Object transform(java.lang.Object) -> transform
    int size() -> size
    boolean isEmpty() -> isEmpty
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    int hashCode() -> hashCode
    boolean isHashCodeFast() -> isHashCodeFast
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableSet$TransformedImmutableSet$1 -> com.google.common.collect.ImmutableSet$TransformedImmutableSet$1:
    com.google.common.collect.ImmutableSet$TransformedImmutableSet this$0 -> this$0
    java.lang.Object get(int) -> get
com.google.common.collect.ImmutableSetMultimap -> com.google.common.collect.ImmutableSetMultimap:
    com.google.common.collect.ImmutableSortedSet emptySet -> emptySet
    com.google.common.collect.ImmutableSet entries -> entries
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ImmutableSetMultimap of() -> of
    com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSetMultimap$Builder builder() -> builder
    com.google.common.collect.ImmutableSetMultimap copyOf(com.google.common.collect.Multimap) -> copyOf
    com.google.common.collect.ImmutableSetMultimap copyOf(com.google.common.collect.Multimap,java.util.Comparator) -> copyOf
    com.google.common.collect.ImmutableSet get(java.lang.Object) -> get
    com.google.common.collect.ImmutableSet removeAll(java.lang.Object) -> removeAll
    com.google.common.collect.ImmutableSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    com.google.common.collect.ImmutableSet entries() -> entries
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    com.google.common.collect.ImmutableCollection entries() -> entries
    com.google.common.collect.ImmutableCollection get(java.lang.Object) -> get
    com.google.common.collect.ImmutableCollection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    com.google.common.collect.ImmutableCollection removeAll(java.lang.Object) -> removeAll
    java.util.Collection entries() -> entries
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set entries() -> entries
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set get(java.lang.Object) -> get
    com.google.common.collect.ImmutableSetMultimap access$000(com.google.common.collect.Multimap,java.util.Comparator) -> access$000
com.google.common.collect.ImmutableSetMultimap$Builder -> com.google.common.collect.ImmutableSetMultimap$Builder:
    com.google.common.collect.ImmutableSetMultimap$Builder put(java.lang.Object,java.lang.Object) -> put
    com.google.common.collect.ImmutableSetMultimap$Builder putAll(java.lang.Object,java.lang.Iterable) -> putAll
    com.google.common.collect.ImmutableSetMultimap$Builder putAll(java.lang.Object,java.lang.Object[]) -> putAll
    com.google.common.collect.ImmutableSetMultimap$Builder putAll(com.google.common.collect.Multimap) -> putAll
    com.google.common.collect.ImmutableSetMultimap$Builder orderKeysBy(java.util.Comparator) -> orderKeysBy
    com.google.common.collect.ImmutableSetMultimap$Builder orderValuesBy(java.util.Comparator) -> orderValuesBy
    com.google.common.collect.ImmutableSetMultimap build() -> build
    com.google.common.collect.ImmutableMultimap build() -> build
    com.google.common.collect.ImmutableMultimap$Builder orderValuesBy(java.util.Comparator) -> orderValuesBy
    com.google.common.collect.ImmutableMultimap$Builder orderKeysBy(java.util.Comparator) -> orderKeysBy
    com.google.common.collect.ImmutableMultimap$Builder putAll(com.google.common.collect.Multimap) -> putAll
    com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Object[]) -> putAll
    com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Iterable) -> putAll
    com.google.common.collect.ImmutableMultimap$Builder put(java.lang.Object,java.lang.Object) -> put
com.google.common.collect.ImmutableSetMultimap$BuilderMultimap -> com.google.common.collect.ImmutableSetMultimap$BuilderMultimap:
    long serialVersionUID -> serialVersionUID
    java.util.Collection createCollection() -> createCollection
com.google.common.collect.ImmutableSetMultimap$SortedKeyBuilderMultimap -> com.google.common.collect.ImmutableSetMultimap$SortedKeyBuilderMultimap:
    long serialVersionUID -> serialVersionUID
    java.util.Collection createCollection() -> createCollection
com.google.common.collect.ImmutableSortedAsList -> com.google.common.collect.ImmutableSortedAsList:
    com.google.common.collect.ImmutableSortedSet backingSet -> backingSet
    com.google.common.collect.ImmutableList backingList -> backingList
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    com.google.common.collect.ImmutableList subList(int,int) -> subList
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    java.lang.Object get(int) -> get
    com.google.common.collect.UnmodifiableListIterator listIterator() -> listIterator
    com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean isPartialView() -> isPartialView
    java.util.List subList(int,int) -> subList
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.ListIterator listIterator() -> listIterator
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableSortedMap -> com.google.common.collect.ImmutableSortedMap:
    java.util.Comparator NATURAL_ORDER -> NATURAL_ORDER
    com.google.common.collect.ImmutableSortedMap NATURAL_EMPTY_MAP -> NATURAL_EMPTY_MAP
    com.google.common.collect.ImmutableList entries -> entries
    java.util.Comparator comparator -> comparator
    com.google.common.base.Function keyFunction -> keyFunction
    com.google.common.collect.ImmutableSet entrySet -> entrySet
    com.google.common.collect.ImmutableSortedSet keySet -> keySet
    com.google.common.collect.ImmutableCollection values -> values
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ImmutableSortedMap of() -> of
    com.google.common.collect.ImmutableSortedMap emptyMap(java.util.Comparator) -> emptyMap
    com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMap copyOf(java.util.Map) -> copyOf
    com.google.common.collect.ImmutableSortedMap copyOf(java.util.Map,java.util.Comparator) -> copyOf
    com.google.common.collect.ImmutableSortedMap copyOfSorted(java.util.SortedMap) -> copyOfSorted
    com.google.common.collect.ImmutableSortedMap copyOfInternal(java.util.Map,java.util.Comparator) -> copyOfInternal
    void sortEntries(java.util.List,java.util.Comparator) -> sortEntries
    void validateEntries(java.util.List,java.util.Comparator) -> validateEntries
    com.google.common.collect.ImmutableSortedMap$Builder naturalOrder() -> naturalOrder
    com.google.common.collect.ImmutableSortedMap$Builder orderedBy(java.util.Comparator) -> orderedBy
    com.google.common.collect.ImmutableSortedMap$Builder reverseOrder() -> reverseOrder
    int size() -> size
    java.util.Comparator unsafeComparator() -> unsafeComparator
    java.lang.Object get(java.lang.Object) -> get
    boolean containsValue(java.lang.Object) -> containsValue
    boolean isPartialView() -> isPartialView
    com.google.common.collect.ImmutableSet entrySet() -> entrySet
    com.google.common.collect.ImmutableSet createEntrySet() -> createEntrySet
    com.google.common.collect.ImmutableSortedSet keySet() -> keySet
    com.google.common.collect.ImmutableSortedSet createKeySet() -> createKeySet
    com.google.common.collect.ImmutableCollection values() -> values
    com.google.common.collect.UnmodifiableIterator valueIterator() -> valueIterator
    java.util.Comparator comparator() -> comparator
    java.lang.Object firstKey() -> firstKey
    java.lang.Object lastKey() -> lastKey
    com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object) -> headMap
    com.google.common.collect.ImmutableSortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object) -> tailMap
    int findSubmapIndex(java.lang.Object) -> findSubmapIndex
    com.google.common.collect.ImmutableSortedMap createSubmap(int,int) -> createSubmap
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.collect.ImmutableSet keySet() -> keySet
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    java.util.Set keySet() -> keySet
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    void access$000(java.util.List,java.util.Comparator) -> access$000
    void access$100(java.util.List,java.util.Comparator) -> access$100
com.google.common.collect.ImmutableSortedMap$1 -> com.google.common.collect.ImmutableSortedMap$1:
    java.util.Comparator val$comparator -> val$comparator
    int compare(java.util.Map$Entry,java.util.Map$Entry) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.ImmutableSortedMap$2 -> com.google.common.collect.ImmutableSortedMap$2:
    com.google.common.collect.ImmutableSortedMap this$0 -> this$0
    java.lang.Object apply(java.util.Map$Entry) -> apply
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.ImmutableSortedMap$3 -> com.google.common.collect.ImmutableSortedMap$3:
    com.google.common.collect.ImmutableSortedMap this$0 -> this$0
    java.lang.Object transform(java.util.Map$Entry) -> transform
    java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.ImmutableSortedMap$4 -> com.google.common.collect.ImmutableSortedMap$4:
    com.google.common.collect.UnmodifiableIterator val$entryIterator -> val$entryIterator
    com.google.common.collect.ImmutableSortedMap this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.ImmutableSortedMap$Builder -> com.google.common.collect.ImmutableSortedMap$Builder:
    java.util.Comparator comparator -> comparator
    com.google.common.collect.ImmutableSortedMap$Builder put(java.lang.Object,java.lang.Object) -> put
    com.google.common.collect.ImmutableSortedMap$Builder putAll(java.util.Map) -> putAll
    com.google.common.collect.ImmutableSortedMap build() -> build
    com.google.common.collect.ImmutableMap build() -> build
    com.google.common.collect.ImmutableMap$Builder putAll(java.util.Map) -> putAll
    com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object) -> put
com.google.common.collect.ImmutableSortedMap$EntrySet -> com.google.common.collect.ImmutableSortedMap$EntrySet:
    com.google.common.collect.ImmutableSortedMap map -> map
    boolean isPartialView() -> isPartialView
    int size() -> size
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    java.lang.Object writeReplace() -> writeReplace
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableSortedMap$EntrySetSerializedForm -> com.google.common.collect.ImmutableSortedMap$EntrySetSerializedForm:
    com.google.common.collect.ImmutableSortedMap map -> map
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSortedMap$SerializedForm -> com.google.common.collect.ImmutableSortedMap$SerializedForm:
    java.util.Comparator comparator -> comparator
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSortedMap$Values -> com.google.common.collect.ImmutableSortedMap$Values:
    com.google.common.collect.ImmutableSortedMap map -> map
    int size() -> size
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean isPartialView() -> isPartialView
    java.lang.Object writeReplace() -> writeReplace
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableSortedMap$ValuesSerializedForm -> com.google.common.collect.ImmutableSortedMap$ValuesSerializedForm:
    com.google.common.collect.ImmutableSortedMap map -> map
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSortedMapFauxverideShim -> com.google.common.collect.ImmutableSortedMapFauxverideShim:
    com.google.common.collect.ImmutableSortedMap$Builder builder() -> builder
    com.google.common.collect.ImmutableSortedMap of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
com.google.common.collect.ImmutableSortedSet -> com.google.common.collect.ImmutableSortedSet:
    java.util.Comparator NATURAL_ORDER -> NATURAL_ORDER
    com.google.common.collect.ImmutableSortedSet NATURAL_EMPTY_SET -> NATURAL_EMPTY_SET
    java.util.Comparator comparator -> comparator
    com.google.common.collect.ImmutableSortedSet emptySet() -> emptySet
    com.google.common.collect.ImmutableSortedSet emptySet(java.util.Comparator) -> emptySet
    com.google.common.collect.ImmutableSortedSet of() -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable,java.lang.Comparable) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable[]) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable[]) -> of
    com.google.common.collect.ImmutableSortedSet copyOf(java.lang.Comparable[]) -> copyOf
    com.google.common.collect.ImmutableSortedSet copyOf(java.lang.Iterable) -> copyOf
    com.google.common.collect.ImmutableSortedSet copyOf(java.util.Collection) -> copyOf
    com.google.common.collect.ImmutableSortedSet copyOf(java.util.Iterator) -> copyOf
    com.google.common.collect.ImmutableSortedSet copyOf(java.util.Comparator,java.util.Iterator) -> copyOf
    com.google.common.collect.ImmutableSortedSet copyOf(java.util.Comparator,java.lang.Iterable) -> copyOf
    com.google.common.collect.ImmutableSortedSet copyOf(java.util.Comparator,java.util.Collection) -> copyOf
    com.google.common.collect.ImmutableSortedSet copyOfSorted(java.util.SortedSet) -> copyOfSorted
    com.google.common.collect.ImmutableSortedSet copyOfInternal(java.util.Comparator,java.lang.Iterable,boolean) -> copyOfInternal
    com.google.common.collect.ImmutableSortedSet copyOfInternal(java.util.Comparator,java.util.Iterator) -> copyOfInternal
    com.google.common.collect.ImmutableList immutableSortedUniqueCopy(java.util.Comparator,java.util.List) -> immutableSortedUniqueCopy
    boolean hasSameComparator(java.lang.Iterable,java.util.Comparator) -> hasSameComparator
    com.google.common.collect.ImmutableSortedSet withExplicitOrder(java.util.List) -> withExplicitOrder
    com.google.common.collect.ImmutableSortedSet withExplicitOrder(java.lang.Object,java.lang.Object[]) -> withExplicitOrder
    com.google.common.collect.ImmutableSortedSet$Builder orderedBy(java.util.Comparator) -> orderedBy
    com.google.common.collect.ImmutableSortedSet$Builder reverseOrder() -> reverseOrder
    com.google.common.collect.ImmutableSortedSet$Builder naturalOrder() -> naturalOrder
    int unsafeCompare(java.lang.Object,java.lang.Object) -> unsafeCompare
    int unsafeCompare(java.util.Comparator,java.lang.Object,java.lang.Object) -> unsafeCompare
    java.util.Comparator comparator() -> comparator
    com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object) -> headSet
    com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object) -> tailSet
    com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object) -> headSetImpl
    com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,java.lang.Object) -> subSetImpl
    com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object) -> tailSetImpl
    int indexOf(java.lang.Object) -> indexOf
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object writeReplace() -> writeReplace
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    com.google.common.collect.ImmutableSortedSet access$000(java.util.Comparator,java.util.Iterator) -> access$000
com.google.common.collect.ImmutableSortedSet$Builder -> com.google.common.collect.ImmutableSortedSet$Builder:
    java.util.Comparator comparator -> comparator
    com.google.common.collect.ImmutableSortedSet$Builder add(java.lang.Object) -> add
    com.google.common.collect.ImmutableSortedSet$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableSortedSet$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableSortedSet$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableSortedSet build() -> build
    com.google.common.collect.ImmutableSet build() -> build
    com.google.common.collect.ImmutableSet$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableSet$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableSet$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableSet$Builder add(java.lang.Object) -> add
    com.google.common.collect.ImmutableCollection build() -> build
    com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
com.google.common.collect.ImmutableSortedSet$SerializedForm -> com.google.common.collect.ImmutableSortedSet$SerializedForm:
    java.util.Comparator comparator -> comparator
    java.lang.Object[] elements -> elements
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSortedSetFauxverideShim -> com.google.common.collect.ImmutableSortedSetFauxverideShim:
    com.google.common.collect.ImmutableSortedSet$Builder builder() -> builder
    com.google.common.collect.ImmutableSortedSet of(java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Object[]) -> of
    com.google.common.collect.ImmutableSortedSet copyOf(java.lang.Object[]) -> copyOf
com.google.common.collect.Interner -> com.google.common.collect.Interner:
    java.lang.Object intern(java.lang.Object) -> intern
com.google.common.collect.Interners -> com.google.common.collect.Interners:
    com.google.common.collect.Interner newStrongInterner() -> newStrongInterner
    com.google.common.collect.Interner newWeakInterner() -> newWeakInterner
    com.google.common.base.Function asFunction(com.google.common.collect.Interner) -> asFunction
com.google.common.collect.Interners$1 -> com.google.common.collect.Interners$1:
    java.util.concurrent.ConcurrentMap val$map -> val$map
    java.lang.Object intern(java.lang.Object) -> intern
com.google.common.collect.Interners$InternerFunction -> com.google.common.collect.Interners$InternerFunction:
    com.google.common.collect.Interner interner -> interner
    java.lang.Object apply(java.lang.Object) -> apply
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.common.collect.Interners$WeakInterner -> com.google.common.collect.Interners$WeakInterner:
    java.util.concurrent.ConcurrentMap map -> map
    com.google.common.base.FinalizableReferenceQueue frq -> frq
    java.lang.Object intern(java.lang.Object) -> intern
    com.google.common.base.FinalizableReferenceQueue access$100() -> access$100
    java.util.concurrent.ConcurrentMap access$200(com.google.common.collect.Interners$WeakInterner) -> access$200
com.google.common.collect.Interners$WeakInterner$1 -> com.google.common.collect.Interners$WeakInterner$1:
    int val$hashCode -> val$hashCode
    java.lang.Object val$sample -> val$sample
    com.google.common.collect.Interners$WeakInterner this$0 -> this$0
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.common.collect.Interners$WeakInterner$InternReference -> com.google.common.collect.Interners$WeakInterner$InternReference:
    int hashCode -> hashCode
    com.google.common.collect.Interners$WeakInterner this$0 -> this$0
    void finalizeReferent() -> finalizeReferent
    java.lang.Object get() -> get
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.common.collect.Iterables -> com.google.common.collect.Iterables:
    java.lang.Iterable unmodifiableIterable(java.lang.Iterable) -> unmodifiableIterable
    int size(java.lang.Iterable) -> size
    boolean contains(java.lang.Iterable,java.lang.Object) -> contains
    boolean removeAll(java.lang.Iterable,java.util.Collection) -> removeAll
    boolean retainAll(java.lang.Iterable,java.util.Collection) -> retainAll
    boolean removeIf(java.lang.Iterable,com.google.common.base.Predicate) -> removeIf
    boolean removeIfFromRandomAccessList(java.util.List,com.google.common.base.Predicate) -> removeIfFromRandomAccessList
    boolean elementsEqual(java.lang.Iterable,java.lang.Iterable) -> elementsEqual
    java.lang.String toString(java.lang.Iterable) -> toString
    java.lang.Object getOnlyElement(java.lang.Iterable) -> getOnlyElement
    java.lang.Object getOnlyElement(java.lang.Iterable,java.lang.Object) -> getOnlyElement
    java.lang.Object[] toArray(java.lang.Iterable,java.lang.Class) -> toArray
    java.lang.Object[] toArray(java.lang.Iterable) -> toArray
    java.util.Collection toCollection(java.lang.Iterable) -> toCollection
    boolean addAll(java.util.Collection,java.lang.Iterable) -> addAll
    int frequency(java.lang.Iterable,java.lang.Object) -> frequency
    java.lang.Iterable cycle(java.lang.Iterable) -> cycle
    java.lang.Iterable cycle(java.lang.Object[]) -> cycle
    java.lang.Iterable concat(java.lang.Iterable,java.lang.Iterable) -> concat
    java.lang.Iterable concat(java.lang.Iterable,java.lang.Iterable,java.lang.Iterable) -> concat
    java.lang.Iterable concat(java.lang.Iterable,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable) -> concat
    java.lang.Iterable concat(java.lang.Iterable[]) -> concat
    java.lang.Iterable concat(java.lang.Iterable) -> concat
    com.google.common.collect.UnmodifiableIterator iterators(java.lang.Iterable) -> iterators
    java.lang.Iterable partition(java.lang.Iterable,int) -> partition
    java.lang.Iterable paddedPartition(java.lang.Iterable,int) -> paddedPartition
    java.lang.Iterable filter(java.lang.Iterable,com.google.common.base.Predicate) -> filter
    java.lang.Iterable filter(java.lang.Iterable,java.lang.Class) -> filter
    boolean any(java.lang.Iterable,com.google.common.base.Predicate) -> any
    boolean all(java.lang.Iterable,com.google.common.base.Predicate) -> all
    java.lang.Object find(java.lang.Iterable,com.google.common.base.Predicate) -> find
    java.lang.Object find(java.lang.Iterable,com.google.common.base.Predicate,java.lang.Object) -> find
    int indexOf(java.lang.Iterable,com.google.common.base.Predicate) -> indexOf
    java.lang.Iterable transform(java.lang.Iterable,com.google.common.base.Function) -> transform
    java.lang.Object get(java.lang.Iterable,int) -> get
    void checkNonnegativeIndex(int) -> checkNonnegativeIndex
    java.lang.Object get(java.lang.Iterable,int,java.lang.Object) -> get
    java.lang.Object getFirst(java.lang.Iterable,java.lang.Object) -> getFirst
    java.lang.Object getLast(java.lang.Iterable) -> getLast
    java.lang.Object getLast(java.lang.Iterable,java.lang.Object) -> getLast
    java.lang.Object getLastInNonemptyList(java.util.List) -> getLastInNonemptyList
    java.lang.Iterable skip(java.lang.Iterable,int) -> skip
    java.lang.Iterable limit(java.lang.Iterable,int) -> limit
    java.lang.Iterable consumingIterable(java.lang.Iterable) -> consumingIterable
    java.lang.Iterable reverse(java.util.List) -> reverse
    boolean isEmpty(java.lang.Iterable) -> isEmpty
    boolean remove(java.lang.Iterable,java.lang.Object) -> remove
    com.google.common.collect.UnmodifiableIterator access$000(java.lang.Iterable) -> access$000
com.google.common.collect.Iterables$1 -> com.google.common.collect.Iterables$1:
    java.lang.Iterable val$iterable -> val$iterable
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
com.google.common.collect.Iterables$10 -> com.google.common.collect.Iterables$10:
    int val$numberToSkip -> val$numberToSkip
    java.util.List val$list -> val$list
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$11 -> com.google.common.collect.Iterables$11:
    java.lang.Iterable val$iterable -> val$iterable
    int val$numberToSkip -> val$numberToSkip
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$11$1 -> com.google.common.collect.Iterables$11$1:
    boolean atStart -> atStart
    java.util.Iterator val$iterator -> val$iterator
    com.google.common.collect.Iterables$11 this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Iterables$12 -> com.google.common.collect.Iterables$12:
    java.lang.Iterable val$iterable -> val$iterable
    int val$limitSize -> val$limitSize
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$13 -> com.google.common.collect.Iterables$13:
    java.lang.Iterable val$iterable -> val$iterable
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$14 -> com.google.common.collect.Iterables$14:
    java.lang.Iterable val$iterable -> val$iterable
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$2 -> com.google.common.collect.Iterables$2:
    java.lang.Iterable val$iterable -> val$iterable
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
com.google.common.collect.Iterables$3 -> com.google.common.collect.Iterables$3:
    java.lang.Iterable val$inputs -> val$inputs
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$4 -> com.google.common.collect.Iterables$4:
    java.util.Iterator val$iterableIterator -> val$iterableIterator
    boolean hasNext() -> hasNext
    java.util.Iterator next() -> next
    java.lang.Object next() -> next
com.google.common.collect.Iterables$5 -> com.google.common.collect.Iterables$5:
    java.lang.Iterable val$iterable -> val$iterable
    int val$size -> val$size
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$6 -> com.google.common.collect.Iterables$6:
    java.lang.Iterable val$iterable -> val$iterable
    int val$size -> val$size
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$7 -> com.google.common.collect.Iterables$7:
    java.lang.Iterable val$unfiltered -> val$unfiltered
    com.google.common.base.Predicate val$predicate -> val$predicate
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$8 -> com.google.common.collect.Iterables$8:
    java.lang.Iterable val$unfiltered -> val$unfiltered
    java.lang.Class val$type -> val$type
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$9 -> com.google.common.collect.Iterables$9:
    java.lang.Iterable val$fromIterable -> val$fromIterable
    com.google.common.base.Function val$function -> val$function
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$ConsumingQueueIterator -> com.google.common.collect.Iterables$ConsumingQueueIterator:
    java.util.Queue queue -> queue
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.Iterables$IterableWithToString -> com.google.common.collect.Iterables$IterableWithToString:
    java.lang.String toString() -> toString
com.google.common.collect.Iterators -> com.google.common.collect.Iterators:
    com.google.common.collect.UnmodifiableIterator EMPTY_ITERATOR -> EMPTY_ITERATOR
    java.util.Iterator EMPTY_MODIFIABLE_ITERATOR -> EMPTY_MODIFIABLE_ITERATOR
    com.google.common.collect.UnmodifiableIterator emptyIterator() -> emptyIterator
    java.util.Iterator emptyModifiableIterator() -> emptyModifiableIterator
    com.google.common.collect.UnmodifiableIterator unmodifiableIterator(java.util.Iterator) -> unmodifiableIterator
    int size(java.util.Iterator) -> size
    boolean contains(java.util.Iterator,java.lang.Object) -> contains
    boolean removeAll(java.util.Iterator,java.util.Collection) -> removeAll
    boolean removeIf(java.util.Iterator,com.google.common.base.Predicate) -> removeIf
    boolean retainAll(java.util.Iterator,java.util.Collection) -> retainAll
    boolean elementsEqual(java.util.Iterator,java.util.Iterator) -> elementsEqual
    java.lang.String toString(java.util.Iterator) -> toString
    java.lang.Object getOnlyElement(java.util.Iterator) -> getOnlyElement
    java.lang.Object getOnlyElement(java.util.Iterator,java.lang.Object) -> getOnlyElement
    java.lang.Object[] toArray(java.util.Iterator,java.lang.Class) -> toArray
    boolean addAll(java.util.Collection,java.util.Iterator) -> addAll
    int frequency(java.util.Iterator,java.lang.Object) -> frequency
    java.util.Iterator cycle(java.lang.Iterable) -> cycle
    java.util.Iterator cycle(java.lang.Object[]) -> cycle
    java.util.Iterator concat(java.util.Iterator,java.util.Iterator) -> concat
    java.util.Iterator concat(java.util.Iterator,java.util.Iterator,java.util.Iterator) -> concat
    java.util.Iterator concat(java.util.Iterator,java.util.Iterator,java.util.Iterator,java.util.Iterator) -> concat
    java.util.Iterator concat(java.util.Iterator[]) -> concat
    java.util.Iterator concat(java.util.Iterator) -> concat
    com.google.common.collect.UnmodifiableIterator partition(java.util.Iterator,int) -> partition
    com.google.common.collect.UnmodifiableIterator paddedPartition(java.util.Iterator,int) -> paddedPartition
    com.google.common.collect.UnmodifiableIterator partitionImpl(java.util.Iterator,int,boolean) -> partitionImpl
    com.google.common.collect.UnmodifiableIterator filter(java.util.Iterator,com.google.common.base.Predicate) -> filter
    com.google.common.collect.UnmodifiableIterator filter(java.util.Iterator,java.lang.Class) -> filter
    boolean any(java.util.Iterator,com.google.common.base.Predicate) -> any
    boolean all(java.util.Iterator,com.google.common.base.Predicate) -> all
    java.lang.Object find(java.util.Iterator,com.google.common.base.Predicate) -> find
    java.lang.Object find(java.util.Iterator,com.google.common.base.Predicate,java.lang.Object) -> find
    int indexOf(java.util.Iterator,com.google.common.base.Predicate) -> indexOf
    java.util.Iterator transform(java.util.Iterator,com.google.common.base.Function) -> transform
    java.lang.Object get(java.util.Iterator,int) -> get
    void checkNonnegative(int) -> checkNonnegative
    java.lang.Object get(java.util.Iterator,int,java.lang.Object) -> get
    java.lang.Object getNext(java.util.Iterator,java.lang.Object) -> getNext
    java.lang.Object getLast(java.util.Iterator) -> getLast
    java.lang.Object getLast(java.util.Iterator,java.lang.Object) -> getLast
    int skip(java.util.Iterator,int) -> skip
    java.util.Iterator limit(java.util.Iterator,int) -> limit
    java.util.Iterator consumingIterator(java.util.Iterator) -> consumingIterator
    com.google.common.collect.UnmodifiableIterator forArray(java.lang.Object[]) -> forArray
    com.google.common.collect.UnmodifiableIterator forArray(java.lang.Object[],int,int) -> forArray
    com.google.common.collect.UnmodifiableIterator singletonIterator(java.lang.Object) -> singletonIterator
    com.google.common.collect.UnmodifiableIterator forEnumeration(java.util.Enumeration) -> forEnumeration
    java.util.Enumeration asEnumeration(java.util.Iterator) -> asEnumeration
    com.google.common.collect.PeekingIterator peekingIterator(java.util.Iterator) -> peekingIterator
com.google.common.collect.Iterators$1 -> com.google.common.collect.Iterators$1:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Iterators$10 -> com.google.common.collect.Iterators$10:
    java.util.Iterator val$iterator -> val$iterator
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Iterators$11 -> com.google.common.collect.Iterators$11:
    java.lang.Object[] val$array -> val$array
    java.lang.Object get(int) -> get
com.google.common.collect.Iterators$12 -> com.google.common.collect.Iterators$12:
    java.lang.Object[] val$array -> val$array
    int val$offset -> val$offset
    java.lang.Object get(int) -> get
com.google.common.collect.Iterators$13 -> com.google.common.collect.Iterators$13:
    boolean done -> done
    java.lang.Object val$value -> val$value
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Iterators$14 -> com.google.common.collect.Iterators$14:
    java.util.Enumeration val$enumeration -> val$enumeration
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Iterators$15 -> com.google.common.collect.Iterators$15:
    java.util.Iterator val$iterator -> val$iterator
    boolean hasMoreElements() -> hasMoreElements
    java.lang.Object nextElement() -> nextElement
com.google.common.collect.Iterators$2 -> com.google.common.collect.Iterators$2:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Iterators$3 -> com.google.common.collect.Iterators$3:
    java.util.Iterator val$iterator -> val$iterator
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Iterators$4 -> com.google.common.collect.Iterators$4:
    java.util.Iterator iterator -> iterator
    java.util.Iterator removeFrom -> removeFrom
    java.lang.Iterable val$iterable -> val$iterable
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Iterators$5 -> com.google.common.collect.Iterators$5:
    java.util.Iterator current -> current
    java.util.Iterator removeFrom -> removeFrom
    java.util.Iterator val$inputs -> val$inputs
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Iterators$6 -> com.google.common.collect.Iterators$6:
    java.util.Iterator val$iterator -> val$iterator
    int val$size -> val$size
    boolean val$pad -> val$pad
    boolean hasNext() -> hasNext
    java.util.List next() -> next
    java.lang.Object next() -> next
com.google.common.collect.Iterators$7 -> com.google.common.collect.Iterators$7:
    java.util.Iterator val$unfiltered -> val$unfiltered
    com.google.common.base.Predicate val$predicate -> val$predicate
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.Iterators$8 -> com.google.common.collect.Iterators$8:
    java.util.Iterator val$fromIterator -> val$fromIterator
    com.google.common.base.Function val$function -> val$function
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Iterators$9 -> com.google.common.collect.Iterators$9:
    int count -> count
    int val$limitSize -> val$limitSize
    java.util.Iterator val$iterator -> val$iterator
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Iterators$PeekingImpl -> com.google.common.collect.Iterators$PeekingImpl:
    java.util.Iterator iterator -> iterator
    boolean hasPeeked -> hasPeeked
    java.lang.Object peekedElement -> peekedElement
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    java.lang.Object peek() -> peek
com.google.common.collect.LexicographicalOrdering -> com.google.common.collect.LexicographicalOrdering:
    com.google.common.collect.Ordering elementOrder -> elementOrder
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Iterable,java.lang.Iterable) -> compare
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.LinkedHashMultimap -> com.google.common.collect.LinkedHashMultimap:
    int DEFAULT_VALUES_PER_KEY -> DEFAULT_VALUES_PER_KEY
    int expectedValuesPerKey -> expectedValuesPerKey
    java.util.Collection linkedEntries -> linkedEntries
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.LinkedHashMultimap create() -> create
    com.google.common.collect.LinkedHashMultimap create(int,int) -> create
    com.google.common.collect.LinkedHashMultimap create(com.google.common.collect.Multimap) -> create
    java.util.Set createCollection() -> createCollection
    java.util.Collection createCollection(java.lang.Object) -> createCollection
    java.util.Iterator createEntryIterator() -> createEntryIterator
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set entries() -> entries
    java.util.Collection values() -> values
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    boolean equals(java.lang.Object) -> equals
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.util.Map asMap() -> asMap
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set get(java.lang.Object) -> get
    java.util.Collection entries() -> entries
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    com.google.common.collect.Multiset keys() -> keys
    java.util.Set keySet() -> keySet
    void clear() -> clear
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean containsValue(java.lang.Object) -> containsValue
    boolean containsKey(java.lang.Object) -> containsKey
    boolean isEmpty() -> isEmpty
    int size() -> size
    java.util.Collection createCollection() -> createCollection
com.google.common.collect.LinkedHashMultimap$1 -> com.google.common.collect.LinkedHashMultimap$1:
    java.util.Map$Entry entry -> entry
    java.util.Iterator val$delegateIterator -> val$delegateIterator
    com.google.common.collect.LinkedHashMultimap this$0 -> this$0
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.LinkedHashMultimap$SetDecorator -> com.google.common.collect.LinkedHashMultimap$SetDecorator:
    java.util.Set delegate -> delegate
    java.lang.Object key -> key
    com.google.common.collect.LinkedHashMultimap this$0 -> this$0
    java.util.Set delegate() -> delegate
    java.util.Map$Entry createEntry(java.lang.Object) -> createEntry
    java.util.Collection createEntries(java.util.Collection) -> createEntries
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.LinkedHashMultimap$SetDecorator$1 -> com.google.common.collect.LinkedHashMultimap$SetDecorator$1:
    java.lang.Object value -> value
    java.util.Iterator val$delegateIterator -> val$delegateIterator
    com.google.common.collect.LinkedHashMultimap$SetDecorator this$1 -> this$1
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.LinkedHashMultiset -> com.google.common.collect.LinkedHashMultiset:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.LinkedHashMultiset create() -> create
    com.google.common.collect.LinkedHashMultiset create(int) -> create
    com.google.common.collect.LinkedHashMultiset create(java.lang.Iterable) -> create
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    int setCount(java.lang.Object,int) -> setCount
    int remove(java.lang.Object,int) -> remove
    int add(java.lang.Object,int) -> add
    int count(java.lang.Object) -> count
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
    int size() -> size
    java.util.Set entrySet() -> entrySet
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.util.Set elementSet() -> elementSet
    void clear() -> clear
    boolean retainAll(java.util.Collection) -> retainAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean addAll(java.util.Collection) -> addAll
    boolean setCount(java.lang.Object,int,int) -> setCount
    boolean remove(java.lang.Object) -> remove
    boolean add(java.lang.Object) -> add
    boolean isEmpty() -> isEmpty
com.google.common.collect.LinkedListMultimap -> com.google.common.collect.LinkedListMultimap:
    com.google.common.collect.LinkedListMultimap$Node head -> head
    com.google.common.collect.LinkedListMultimap$Node tail -> tail
    com.google.common.collect.Multiset keyCount -> keyCount
    java.util.Map keyToKeyHead -> keyToKeyHead
    java.util.Map keyToKeyTail -> keyToKeyTail
    java.util.Set keySet -> keySet
    com.google.common.collect.Multiset keys -> keys
    java.util.Collection valuesCollection -> valuesCollection
    java.util.Collection entries -> entries
    java.util.Map map -> map
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.LinkedListMultimap create() -> create
    com.google.common.collect.LinkedListMultimap create(int) -> create
    com.google.common.collect.LinkedListMultimap create(com.google.common.collect.Multimap) -> create
    com.google.common.collect.LinkedListMultimap$Node addNode(java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node) -> addNode
    void removeNode(com.google.common.collect.LinkedListMultimap$Node) -> removeNode
    void removeAllNodes(java.lang.Object) -> removeAllNodes
    void checkElement(java.lang.Object) -> checkElement
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.List getCopy(java.lang.Object) -> getCopy
    java.util.List removeAll(java.lang.Object) -> removeAll
    void clear() -> clear
    java.util.List get(java.lang.Object) -> get
    java.util.Set keySet() -> keySet
    com.google.common.collect.Multiset keys() -> keys
    java.util.Collection values() -> values
    java.util.Collection entries() -> entries
    java.util.Map asMap() -> asMap
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    com.google.common.collect.LinkedListMultimap$Node access$000(com.google.common.collect.LinkedListMultimap) -> access$000
    void access$100(java.lang.Object) -> access$100
    void access$200(com.google.common.collect.LinkedListMultimap,com.google.common.collect.LinkedListMultimap$Node) -> access$200
    void access$300(com.google.common.collect.LinkedListMultimap,java.lang.Object) -> access$300
    java.util.Map access$400(com.google.common.collect.LinkedListMultimap) -> access$400
    com.google.common.collect.Multiset access$500(com.google.common.collect.LinkedListMultimap) -> access$500
    java.util.Map access$600(com.google.common.collect.LinkedListMultimap) -> access$600
    com.google.common.collect.LinkedListMultimap$Node access$700(com.google.common.collect.LinkedListMultimap,java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node) -> access$700
com.google.common.collect.LinkedListMultimap$1 -> com.google.common.collect.LinkedListMultimap$1:
    java.lang.Object val$key -> val$key
    com.google.common.collect.LinkedListMultimap this$0 -> this$0
    int size() -> size
    java.util.ListIterator listIterator(int) -> listIterator
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.LinkedListMultimap$2 -> com.google.common.collect.LinkedListMultimap$2:
    com.google.common.collect.LinkedListMultimap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean removeAll(java.util.Collection) -> removeAll
com.google.common.collect.LinkedListMultimap$3 -> com.google.common.collect.LinkedListMultimap$3:
    com.google.common.collect.LinkedListMultimap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
com.google.common.collect.LinkedListMultimap$3$1 -> com.google.common.collect.LinkedListMultimap$3$1:
    java.util.Iterator val$nodes -> val$nodes
    com.google.common.collect.LinkedListMultimap$3 this$1 -> this$1
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.LinkedListMultimap$4 -> com.google.common.collect.LinkedListMultimap$4:
    com.google.common.collect.LinkedListMultimap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
com.google.common.collect.LinkedListMultimap$4$1 -> com.google.common.collect.LinkedListMultimap$4$1:
    java.util.Iterator val$nodes -> val$nodes
    com.google.common.collect.LinkedListMultimap$4 this$1 -> this$1
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.LinkedListMultimap$4$1$1 -> com.google.common.collect.LinkedListMultimap$4$1$1:
    com.google.common.collect.LinkedListMultimap$Node val$node -> val$node
    com.google.common.collect.LinkedListMultimap$4$1 this$2 -> this$2
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.LinkedListMultimap$5 -> com.google.common.collect.LinkedListMultimap$5:
    java.util.Set entrySet -> entrySet
    com.google.common.collect.LinkedListMultimap this$0 -> this$0
    java.util.Set entrySet() -> entrySet
    boolean containsKey(java.lang.Object) -> containsKey
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection remove(java.lang.Object) -> remove
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
com.google.common.collect.LinkedListMultimap$AsMapEntries -> com.google.common.collect.LinkedListMultimap$AsMapEntries:
    com.google.common.collect.LinkedListMultimap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
com.google.common.collect.LinkedListMultimap$AsMapEntries$1 -> com.google.common.collect.LinkedListMultimap$AsMapEntries$1:
    java.util.Iterator val$keyIterator -> val$keyIterator
    com.google.common.collect.LinkedListMultimap$AsMapEntries this$1 -> this$1
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.LinkedListMultimap$AsMapEntries$1$1 -> com.google.common.collect.LinkedListMultimap$AsMapEntries$1$1:
    java.lang.Object val$key -> val$key
    com.google.common.collect.LinkedListMultimap$AsMapEntries$1 this$2 -> this$2
    java.lang.Object getKey() -> getKey
    java.util.Collection getValue() -> getValue
    java.lang.Object getValue() -> getValue
com.google.common.collect.LinkedListMultimap$DistinctKeyIterator -> com.google.common.collect.LinkedListMultimap$DistinctKeyIterator:
    java.util.Set seenKeys -> seenKeys
    com.google.common.collect.LinkedListMultimap$Node next -> next
    com.google.common.collect.LinkedListMultimap$Node current -> current
    com.google.common.collect.LinkedListMultimap this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.LinkedListMultimap$MultisetView -> com.google.common.collect.LinkedListMultimap$MultisetView:
    com.google.common.collect.LinkedListMultimap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
    int count(java.lang.Object) -> count
    int add(java.lang.Object,int) -> add
    int remove(java.lang.Object,int) -> remove
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Set elementSet() -> elementSet
    java.util.Set entrySet() -> entrySet
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.LinkedListMultimap$MultisetView$1 -> com.google.common.collect.LinkedListMultimap$MultisetView$1:
    java.util.Iterator val$nodes -> val$nodes
    com.google.common.collect.LinkedListMultimap$MultisetView this$1 -> this$1
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.LinkedListMultimap$MultisetView$2 -> com.google.common.collect.LinkedListMultimap$MultisetView$2:
    com.google.common.collect.LinkedListMultimap$MultisetView this$1 -> this$1
    int size() -> size
    java.util.Iterator iterator() -> iterator
com.google.common.collect.LinkedListMultimap$MultisetView$2$1 -> com.google.common.collect.LinkedListMultimap$MultisetView$2$1:
    java.util.Iterator val$keyIterator -> val$keyIterator
    com.google.common.collect.LinkedListMultimap$MultisetView$2 this$2 -> this$2
    boolean hasNext() -> hasNext
    com.google.common.collect.Multiset$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.LinkedListMultimap$MultisetView$2$1$1 -> com.google.common.collect.LinkedListMultimap$MultisetView$2$1$1:
    java.lang.Object val$key -> val$key
    com.google.common.collect.LinkedListMultimap$MultisetView$2$1 this$3 -> this$3
    java.lang.Object getElement() -> getElement
    int getCount() -> getCount
com.google.common.collect.LinkedListMultimap$Node -> com.google.common.collect.LinkedListMultimap$Node:
    java.lang.Object key -> key
    java.lang.Object value -> value
    com.google.common.collect.LinkedListMultimap$Node next -> next
    com.google.common.collect.LinkedListMultimap$Node previous -> previous
    com.google.common.collect.LinkedListMultimap$Node nextSibling -> nextSibling
    com.google.common.collect.LinkedListMultimap$Node previousSibling -> previousSibling
    java.lang.String toString() -> toString
com.google.common.collect.LinkedListMultimap$NodeIterator -> com.google.common.collect.LinkedListMultimap$NodeIterator:
    com.google.common.collect.LinkedListMultimap$Node next -> next
    com.google.common.collect.LinkedListMultimap$Node current -> current
    com.google.common.collect.LinkedListMultimap this$0 -> this$0
    boolean hasNext() -> hasNext
    com.google.common.collect.LinkedListMultimap$Node next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.LinkedListMultimap$ValueForKeyIterator -> com.google.common.collect.LinkedListMultimap$ValueForKeyIterator:
    java.lang.Object key -> key
    int nextIndex -> nextIndex
    com.google.common.collect.LinkedListMultimap$Node next -> next
    com.google.common.collect.LinkedListMultimap$Node current -> current
    com.google.common.collect.LinkedListMultimap$Node previous -> previous
    com.google.common.collect.LinkedListMultimap this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    boolean hasPrevious() -> hasPrevious
    java.lang.Object previous() -> previous
    int nextIndex() -> nextIndex
    int previousIndex() -> previousIndex
    void remove() -> remove
    void set(java.lang.Object) -> set
    void add(java.lang.Object) -> add
com.google.common.collect.ListMultimap -> com.google.common.collect.ListMultimap:
    java.util.List get(java.lang.Object) -> get
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Map asMap() -> asMap
    boolean equals(java.lang.Object) -> equals
com.google.common.collect.Lists -> com.google.common.collect.Lists:
    java.util.ArrayList newArrayList() -> newArrayList
    java.util.ArrayList newArrayList(java.lang.Object[]) -> newArrayList
    int computeArrayListCapacity(int) -> computeArrayListCapacity
    java.util.ArrayList newArrayList(java.lang.Iterable) -> newArrayList
    java.util.ArrayList newArrayList(java.util.Iterator) -> newArrayList
    java.util.ArrayList newArrayListWithCapacity(int) -> newArrayListWithCapacity
    java.util.ArrayList newArrayListWithExpectedSize(int) -> newArrayListWithExpectedSize
    java.util.LinkedList newLinkedList() -> newLinkedList
    java.util.LinkedList newLinkedList(java.lang.Iterable) -> newLinkedList
    java.util.List asList(java.lang.Object,java.lang.Object[]) -> asList
    java.util.List asList(java.lang.Object,java.lang.Object,java.lang.Object[]) -> asList
    java.util.List transform(java.util.List,com.google.common.base.Function) -> transform
    java.util.List partition(java.util.List,int) -> partition
    com.google.common.collect.ImmutableList charactersOf(java.lang.String) -> charactersOf
    java.util.List charactersOf(java.lang.CharSequence) -> charactersOf
    java.util.List reverse(java.util.List) -> reverse
    int hashCodeImpl(java.util.List) -> hashCodeImpl
    boolean equalsImpl(java.util.List,java.lang.Object) -> equalsImpl
    boolean addAllImpl(java.util.List,int,java.lang.Iterable) -> addAllImpl
    int indexOfImpl(java.util.List,java.lang.Object) -> indexOfImpl
    int lastIndexOfImpl(java.util.List,java.lang.Object) -> lastIndexOfImpl
    java.util.ListIterator listIteratorImpl(java.util.List,int) -> listIteratorImpl
    java.util.List subListImpl(java.util.List,int,int) -> subListImpl
com.google.common.collect.Lists$1 -> com.google.common.collect.Lists$1:
    long serialVersionUID -> serialVersionUID
    java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.Lists$2 -> com.google.common.collect.Lists$2:
    long serialVersionUID -> serialVersionUID
    java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.Lists$AbstractListWrapper -> com.google.common.collect.Lists$AbstractListWrapper:
    java.util.List backingList -> backingList
    void add(int,java.lang.Object) -> add
    boolean addAll(int,java.util.Collection) -> addAll
    java.lang.Object get(int) -> get
    java.lang.Object remove(int) -> remove
    java.lang.Object set(int,java.lang.Object) -> set
    boolean contains(java.lang.Object) -> contains
    int size() -> size
com.google.common.collect.Lists$CharSequenceAsList -> com.google.common.collect.Lists$CharSequenceAsList:
    java.lang.CharSequence sequence -> sequence
    java.lang.Character get(int) -> get
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    int size() -> size
    java.util.List subList(int,int) -> subList
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object get(int) -> get
com.google.common.collect.Lists$OnePlusArrayList -> com.google.common.collect.Lists$OnePlusArrayList:
    java.lang.Object first -> first
    java.lang.Object[] rest -> rest
    long serialVersionUID -> serialVersionUID
    int size() -> size
    java.lang.Object get(int) -> get
com.google.common.collect.Lists$Partition -> com.google.common.collect.Lists$Partition:
    java.util.List list -> list
    int size -> size
    java.util.List get(int) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.lang.Object get(int) -> get
com.google.common.collect.Lists$RandomAccessListWrapper -> com.google.common.collect.Lists$RandomAccessListWrapper:
com.google.common.collect.Lists$RandomAccessPartition -> com.google.common.collect.Lists$RandomAccessPartition:
com.google.common.collect.Lists$RandomAccessReverseList -> com.google.common.collect.Lists$RandomAccessReverseList:
com.google.common.collect.Lists$ReverseList -> com.google.common.collect.Lists$ReverseList:
    java.util.List forwardList -> forwardList
    java.util.List getForwardList() -> getForwardList
    int reverseIndex(int) -> reverseIndex
    int reversePosition(int) -> reversePosition
    void add(int,java.lang.Object) -> add
    void clear() -> clear
    java.lang.Object remove(int) -> remove
    void removeRange(int,int) -> removeRange
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
    boolean isEmpty() -> isEmpty
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    java.util.List subList(int,int) -> subList
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.Iterator iterator() -> iterator
    java.util.ListIterator listIterator(int) -> listIterator
    int access$100(com.google.common.collect.Lists$ReverseList,int) -> access$100
com.google.common.collect.Lists$ReverseList$1 -> com.google.common.collect.Lists$ReverseList$1:
    boolean canRemove -> canRemove
    boolean canSet -> canSet
    java.util.ListIterator val$forwardIterator -> val$forwardIterator
    com.google.common.collect.Lists$ReverseList this$0 -> this$0
    void add(java.lang.Object) -> add
    boolean hasNext() -> hasNext
    boolean hasPrevious() -> hasPrevious
    java.lang.Object next() -> next
    int nextIndex() -> nextIndex
    java.lang.Object previous() -> previous
    int previousIndex() -> previousIndex
    void remove() -> remove
    void set(java.lang.Object) -> set
com.google.common.collect.Lists$StringAsImmutableList -> com.google.common.collect.Lists$StringAsImmutableList:
    java.lang.String string -> string
    int hash -> hash
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    com.google.common.collect.ImmutableList subList(int,int) -> subList
    boolean isPartialView() -> isPartialView
    java.lang.Character get(int) -> get
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.util.List subList(int,int) -> subList
    java.util.ListIterator listIterator(int) -> listIterator
    java.lang.Object get(int) -> get
    java.lang.String access$000(com.google.common.collect.Lists$StringAsImmutableList) -> access$000
com.google.common.collect.Lists$StringAsImmutableList$1 -> com.google.common.collect.Lists$StringAsImmutableList$1:
    com.google.common.collect.Lists$StringAsImmutableList this$0 -> this$0
    java.lang.Character get(int) -> get
    java.lang.Object get(int) -> get
com.google.common.collect.Lists$TransformingRandomAccessList -> com.google.common.collect.Lists$TransformingRandomAccessList:
    java.util.List fromList -> fromList
    com.google.common.base.Function function -> function
    long serialVersionUID -> serialVersionUID
    void clear() -> clear
    java.lang.Object get(int) -> get
    boolean isEmpty() -> isEmpty
    java.lang.Object remove(int) -> remove
    int size() -> size
com.google.common.collect.Lists$TransformingSequentialList -> com.google.common.collect.Lists$TransformingSequentialList:
    java.util.List fromList -> fromList
    com.google.common.base.Function function -> function
    long serialVersionUID -> serialVersionUID
    void clear() -> clear
    int size() -> size
    java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.Lists$TransformingSequentialList$1 -> com.google.common.collect.Lists$TransformingSequentialList$1:
    java.util.ListIterator val$delegate -> val$delegate
    com.google.common.collect.Lists$TransformingSequentialList this$0 -> this$0
    void add(java.lang.Object) -> add
    boolean hasNext() -> hasNext
    boolean hasPrevious() -> hasPrevious
    java.lang.Object next() -> next
    int nextIndex() -> nextIndex
    java.lang.Object previous() -> previous
    int previousIndex() -> previousIndex
    void remove() -> remove
    void set(java.lang.Object) -> set
com.google.common.collect.Lists$TwoPlusArrayList -> com.google.common.collect.Lists$TwoPlusArrayList:
    java.lang.Object first -> first
    java.lang.Object second -> second
    java.lang.Object[] rest -> rest
    long serialVersionUID -> serialVersionUID
    int size() -> size
    java.lang.Object get(int) -> get
com.google.common.collect.MapConstraint -> com.google.common.collect.MapConstraint:
    void checkKeyValue(java.lang.Object,java.lang.Object) -> checkKeyValue
    java.lang.String toString() -> toString
com.google.common.collect.MapConstraints -> com.google.common.collect.MapConstraints:
    com.google.common.collect.MapConstraint notNull() -> notNull
    java.util.Map constrainedMap(java.util.Map,com.google.common.collect.MapConstraint) -> constrainedMap
    com.google.common.collect.Multimap constrainedMultimap(com.google.common.collect.Multimap,com.google.common.collect.MapConstraint) -> constrainedMultimap
    com.google.common.collect.ListMultimap constrainedListMultimap(com.google.common.collect.ListMultimap,com.google.common.collect.MapConstraint) -> constrainedListMultimap
    com.google.common.collect.SetMultimap constrainedSetMultimap(com.google.common.collect.SetMultimap,com.google.common.collect.MapConstraint) -> constrainedSetMultimap
    com.google.common.collect.SortedSetMultimap constrainedSortedSetMultimap(com.google.common.collect.SortedSetMultimap,com.google.common.collect.MapConstraint) -> constrainedSortedSetMultimap
    java.util.Map$Entry constrainedEntry(java.util.Map$Entry,com.google.common.collect.MapConstraint) -> constrainedEntry
    java.util.Map$Entry constrainedAsMapEntry(java.util.Map$Entry,com.google.common.collect.MapConstraint) -> constrainedAsMapEntry
    java.util.Set constrainedAsMapEntries(java.util.Set,com.google.common.collect.MapConstraint) -> constrainedAsMapEntries
    java.util.Collection constrainedEntries(java.util.Collection,com.google.common.collect.MapConstraint) -> constrainedEntries
    java.util.Set constrainedEntrySet(java.util.Set,com.google.common.collect.MapConstraint) -> constrainedEntrySet
    com.google.common.collect.BiMap constrainedBiMap(com.google.common.collect.BiMap,com.google.common.collect.MapConstraint) -> constrainedBiMap
    java.util.Collection checkValues(java.lang.Object,java.lang.Iterable,com.google.common.collect.MapConstraint) -> checkValues
    java.util.Map checkMap(java.util.Map,com.google.common.collect.MapConstraint) -> checkMap
    java.util.Set access$000(java.util.Set,com.google.common.collect.MapConstraint) -> access$000
    java.util.Map access$100(java.util.Map,com.google.common.collect.MapConstraint) -> access$100
    java.util.Set access$200(java.util.Set,com.google.common.collect.MapConstraint) -> access$200
    java.util.Collection access$300(java.util.Collection,com.google.common.collect.MapConstraint) -> access$300
    java.util.Collection access$400(java.lang.Object,java.lang.Iterable,com.google.common.collect.MapConstraint) -> access$400
    java.util.Map$Entry access$500(java.util.Map$Entry,com.google.common.collect.MapConstraint) -> access$500
    java.util.Map$Entry access$700(java.util.Map$Entry,com.google.common.collect.MapConstraint) -> access$700
com.google.common.collect.MapConstraints$1 -> com.google.common.collect.MapConstraints$1:
    java.util.Map$Entry val$entry -> val$entry
    com.google.common.collect.MapConstraint val$constraint -> val$constraint
    java.util.Map$Entry delegate() -> delegate
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$2 -> com.google.common.collect.MapConstraints$2:
    java.util.Map$Entry val$entry -> val$entry
    com.google.common.collect.MapConstraint val$constraint -> val$constraint
    java.util.Map$Entry delegate() -> delegate
    java.util.Collection getValue() -> getValue
    java.lang.Object getValue() -> getValue
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$2$1 -> com.google.common.collect.MapConstraints$2$1:
    com.google.common.collect.MapConstraints$2 this$0 -> this$0
    java.lang.Object checkElement(java.lang.Object) -> checkElement
com.google.common.collect.MapConstraints$ConstrainedAsMapEntries -> com.google.common.collect.MapConstraints$ConstrainedAsMapEntries:
    com.google.common.collect.MapConstraint constraint -> constraint
    java.util.Set entries -> entries
    java.util.Set delegate() -> delegate
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
    com.google.common.collect.MapConstraint access$600(com.google.common.collect.MapConstraints$ConstrainedAsMapEntries) -> access$600
com.google.common.collect.MapConstraints$ConstrainedAsMapEntries$1 -> com.google.common.collect.MapConstraints$ConstrainedAsMapEntries$1:
    java.util.Iterator val$iterator -> val$iterator
    com.google.common.collect.MapConstraints$ConstrainedAsMapEntries this$0 -> this$0
    java.util.Map$Entry next() -> next
    java.util.Iterator delegate() -> delegate
    java.lang.Object next() -> next
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedAsMapValues -> com.google.common.collect.MapConstraints$ConstrainedAsMapValues:
    java.util.Collection delegate -> delegate
    java.util.Set entrySet -> entrySet
    java.util.Collection delegate() -> delegate
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedAsMapValues$1 -> com.google.common.collect.MapConstraints$ConstrainedAsMapValues$1:
    java.util.Iterator val$iterator -> val$iterator
    com.google.common.collect.MapConstraints$ConstrainedAsMapValues this$0 -> this$0
    boolean hasNext() -> hasNext
    java.util.Collection next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.MapConstraints$ConstrainedBiMap -> com.google.common.collect.MapConstraints$ConstrainedBiMap:
    com.google.common.collect.BiMap inverse -> inverse
    com.google.common.collect.BiMap delegate() -> delegate
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    com.google.common.collect.BiMap inverse() -> inverse
    java.util.Set values() -> values
    java.util.Map delegate() -> delegate
    java.util.Collection values() -> values
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedEntries -> com.google.common.collect.MapConstraints$ConstrainedEntries:
    com.google.common.collect.MapConstraint constraint -> constraint
    java.util.Collection entries -> entries
    java.util.Collection delegate() -> delegate
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedEntries$1 -> com.google.common.collect.MapConstraints$ConstrainedEntries$1:
    java.util.Iterator val$iterator -> val$iterator
    com.google.common.collect.MapConstraints$ConstrainedEntries this$0 -> this$0
    java.util.Map$Entry next() -> next
    java.util.Iterator delegate() -> delegate
    java.lang.Object next() -> next
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedEntrySet -> com.google.common.collect.MapConstraints$ConstrainedEntrySet:
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.MapConstraints$ConstrainedListMultimap -> com.google.common.collect.MapConstraints$ConstrainedListMultimap:
    java.util.List get(java.lang.Object) -> get
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
com.google.common.collect.MapConstraints$ConstrainedMap -> com.google.common.collect.MapConstraints$ConstrainedMap:
    java.util.Map delegate -> delegate
    com.google.common.collect.MapConstraint constraint -> constraint
    java.util.Set entrySet -> entrySet
    java.util.Map delegate() -> delegate
    java.util.Set entrySet() -> entrySet
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedMultimap -> com.google.common.collect.MapConstraints$ConstrainedMultimap:
    com.google.common.collect.MapConstraint constraint -> constraint
    com.google.common.collect.Multimap delegate -> delegate
    java.util.Collection entries -> entries
    java.util.Map asMap -> asMap
    com.google.common.collect.Multimap delegate() -> delegate
    java.util.Map asMap() -> asMap
    java.util.Collection entries() -> entries
    java.util.Collection get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedMultimap$1 -> com.google.common.collect.MapConstraints$ConstrainedMultimap$1:
    java.util.Set entrySet -> entrySet
    java.util.Collection values -> values
    java.util.Map val$asMapDelegate -> val$asMapDelegate
    com.google.common.collect.MapConstraints$ConstrainedMultimap this$0 -> this$0
    java.util.Map delegate() -> delegate
    java.util.Set entrySet() -> entrySet
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection values() -> values
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedMultimap$2 -> com.google.common.collect.MapConstraints$ConstrainedMultimap$2:
    java.lang.Object val$key -> val$key
    com.google.common.collect.MapConstraints$ConstrainedMultimap this$0 -> this$0
    java.lang.Object checkElement(java.lang.Object) -> checkElement
com.google.common.collect.MapConstraints$ConstrainedSetMultimap -> com.google.common.collect.MapConstraints$ConstrainedSetMultimap:
    java.util.Set get(java.lang.Object) -> get
    java.util.Set entries() -> entries
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection entries() -> entries
    java.util.Collection removeAll(java.lang.Object) -> removeAll
com.google.common.collect.MapConstraints$ConstrainedSortedSetMultimap -> com.google.common.collect.MapConstraints$ConstrainedSortedSetMultimap:
    java.util.SortedSet get(java.lang.Object) -> get
    java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Comparator valueComparator() -> valueComparator
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set get(java.lang.Object) -> get
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
com.google.common.collect.MapConstraints$InverseConstraint -> com.google.common.collect.MapConstraints$InverseConstraint:
    com.google.common.collect.MapConstraint constraint -> constraint
    void checkKeyValue(java.lang.Object,java.lang.Object) -> checkKeyValue
com.google.common.collect.MapConstraints$NotNullMapConstraint -> com.google.common.collect.MapConstraints$NotNullMapConstraint:
    com.google.common.collect.MapConstraints$NotNullMapConstraint INSTANCE -> INSTANCE
    com.google.common.collect.MapConstraints$NotNullMapConstraint[] $VALUES -> $VALUES
    com.google.common.collect.MapConstraints$NotNullMapConstraint[] values() -> values
    com.google.common.collect.MapConstraints$NotNullMapConstraint valueOf(java.lang.String) -> valueOf
    void checkKeyValue(java.lang.Object,java.lang.Object) -> checkKeyValue
    java.lang.String toString() -> toString
com.google.common.collect.MapDifference -> com.google.common.collect.MapDifference:
    boolean areEqual() -> areEqual
    java.util.Map entriesOnlyOnLeft() -> entriesOnlyOnLeft
    java.util.Map entriesOnlyOnRight() -> entriesOnlyOnRight
    java.util.Map entriesInCommon() -> entriesInCommon
    java.util.Map entriesDiffering() -> entriesDiffering
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.MapDifference$ValueDifference -> com.google.common.collect.MapDifference$ValueDifference:
    java.lang.Object leftValue() -> leftValue
    java.lang.Object rightValue() -> rightValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.MapEvictionListener -> com.google.common.collect.MapEvictionListener:
    void onEviction(java.lang.Object,java.lang.Object) -> onEviction
com.google.common.collect.MapMaker -> com.google.common.collect.MapMaker:
    int DEFAULT_INITIAL_CAPACITY -> DEFAULT_INITIAL_CAPACITY
    int DEFAULT_CONCURRENCY_LEVEL -> DEFAULT_CONCURRENCY_LEVEL
    int DEFAULT_EXPIRATION_NANOS -> DEFAULT_EXPIRATION_NANOS
    java.util.concurrent.Executor DEFAULT_CLEANUP_EXECUTOR -> DEFAULT_CLEANUP_EXECUTOR
    com.google.common.base.Ticker DEFAULT_TICKER -> DEFAULT_TICKER
    int UNSET_INT -> UNSET_INT
    int initialCapacity -> initialCapacity
    int concurrencyLevel -> concurrencyLevel
    int maximumSize -> maximumSize
    com.google.common.collect.CustomConcurrentHashMap$Strength keyStrength -> keyStrength
    com.google.common.collect.CustomConcurrentHashMap$Strength valueStrength -> valueStrength
    long expireAfterWriteNanos -> expireAfterWriteNanos
    long expireAfterAccessNanos -> expireAfterAccessNanos
    boolean useCustomMap -> useCustomMap
    boolean useNullMap -> useNullMap
    com.google.common.base.Equivalence keyEquivalence -> keyEquivalence
    com.google.common.base.Equivalence valueEquivalence -> valueEquivalence
    java.util.concurrent.Executor cleanupExecutor -> cleanupExecutor
    com.google.common.base.Ticker ticker -> ticker
    com.google.common.collect.MapMaker privateKeyEquivalence(com.google.common.base.Equivalence) -> privateKeyEquivalence
    com.google.common.base.Equivalence getKeyEquivalence() -> getKeyEquivalence
    com.google.common.collect.MapMaker privateValueEquivalence(com.google.common.base.Equivalence) -> privateValueEquivalence
    com.google.common.base.Equivalence getValueEquivalence() -> getValueEquivalence
    com.google.common.collect.MapMaker initialCapacity(int) -> initialCapacity
    int getInitialCapacity() -> getInitialCapacity
    com.google.common.collect.MapMaker maximumSize(int) -> maximumSize
    com.google.common.collect.MapMaker concurrencyLevel(int) -> concurrencyLevel
    int getConcurrencyLevel() -> getConcurrencyLevel
    com.google.common.collect.MapMaker weakKeys() -> weakKeys
    com.google.common.collect.MapMaker softKeys() -> softKeys
    com.google.common.collect.MapMaker setKeyStrength(com.google.common.collect.CustomConcurrentHashMap$Strength) -> setKeyStrength
    com.google.common.collect.CustomConcurrentHashMap$Strength getKeyStrength() -> getKeyStrength
    com.google.common.collect.MapMaker weakValues() -> weakValues
    com.google.common.collect.MapMaker softValues() -> softValues
    com.google.common.collect.MapMaker setValueStrength(com.google.common.collect.CustomConcurrentHashMap$Strength) -> setValueStrength
    com.google.common.collect.CustomConcurrentHashMap$Strength getValueStrength() -> getValueStrength
    com.google.common.collect.MapMaker expiration(long,java.util.concurrent.TimeUnit) -> expiration
    com.google.common.collect.MapMaker expireAfterWrite(long,java.util.concurrent.TimeUnit) -> expireAfterWrite
    void checkExpiration(long,java.util.concurrent.TimeUnit) -> checkExpiration
    long getExpireAfterWriteNanos() -> getExpireAfterWriteNanos
    com.google.common.collect.MapMaker expireAfterAccess(long,java.util.concurrent.TimeUnit) -> expireAfterAccess
    long getExpireAfterAccessNanos() -> getExpireAfterAccessNanos
    java.util.concurrent.Executor getCleanupExecutor() -> getCleanupExecutor
    com.google.common.base.Ticker getTicker() -> getTicker
    com.google.common.collect.GenericMapMaker evictionListener(com.google.common.collect.MapEvictionListener) -> evictionListener
    com.google.common.collect.MapEvictionListener getEvictionListener() -> getEvictionListener
    java.util.concurrent.ConcurrentMap makeMap() -> makeMap
    com.google.common.collect.MapMaker$Cache makeCache(com.google.common.base.Function) -> makeCache
    java.util.concurrent.ConcurrentMap makeComputingMap(com.google.common.base.Function) -> makeComputingMap
    java.lang.String toString() -> toString
    com.google.common.collect.GenericMapMaker expireAfterAccess(long,java.util.concurrent.TimeUnit) -> expireAfterAccess
    com.google.common.collect.GenericMapMaker expireAfterWrite(long,java.util.concurrent.TimeUnit) -> expireAfterWrite
    com.google.common.collect.GenericMapMaker expiration(long,java.util.concurrent.TimeUnit) -> expiration
    com.google.common.collect.GenericMapMaker softValues() -> softValues
    com.google.common.collect.GenericMapMaker weakValues() -> weakValues
    com.google.common.collect.GenericMapMaker softKeys() -> softKeys
    com.google.common.collect.GenericMapMaker weakKeys() -> weakKeys
    com.google.common.collect.GenericMapMaker concurrencyLevel(int) -> concurrencyLevel
    com.google.common.collect.GenericMapMaker maximumSize(int) -> maximumSize
    com.google.common.collect.GenericMapMaker initialCapacity(int) -> initialCapacity
com.google.common.collect.MapMaker$1 -> com.google.common.collect.MapMaker$1:
    void execute(java.lang.Runnable) -> execute
com.google.common.collect.MapMaker$2 -> com.google.common.collect.MapMaker$2:
    long read() -> read
com.google.common.collect.MapMaker$Cache -> com.google.common.collect.MapMaker$Cache:
    java.util.concurrent.ConcurrentMap asMap() -> asMap
com.google.common.collect.MapMaker$ComputingMapAdapter -> com.google.common.collect.MapMaker$ComputingMapAdapter:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.MapMaker$Cache cache -> cache
    java.util.concurrent.ConcurrentMap delegate() -> delegate
    java.lang.Object get(java.lang.Object) -> get
    java.util.Map delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapMaker$NullComputingConcurrentMap -> com.google.common.collect.MapMaker$NullComputingConcurrentMap:
    long serialVersionUID -> serialVersionUID
    com.google.common.base.Function computingFunction -> computingFunction
    java.lang.Object apply(java.lang.Object) -> apply
    java.lang.Object compute(java.lang.Object) -> compute
    java.util.concurrent.ConcurrentMap asMap() -> asMap
com.google.common.collect.MapMaker$NullConcurrentMap -> com.google.common.collect.MapMaker$NullConcurrentMap:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.MapEvictionListener evictionListener -> evictionListener
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    java.lang.Object remove(java.lang.Object) -> remove
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    java.util.Set entrySet() -> entrySet
com.google.common.collect.MapMaker$NullListener -> com.google.common.collect.MapMaker$NullListener:
    com.google.common.collect.MapMaker$NullListener INSTANCE -> INSTANCE
    com.google.common.collect.MapMaker$NullListener[] $VALUES -> $VALUES
    com.google.common.collect.MapMaker$NullListener[] values() -> values
    com.google.common.collect.MapMaker$NullListener valueOf(java.lang.String) -> valueOf
    void onEviction(java.lang.Object,java.lang.Object) -> onEviction
com.google.common.collect.Maps -> com.google.common.collect.Maps:
    com.google.common.base.Joiner$MapJoiner STANDARD_JOINER -> STANDARD_JOINER
    java.util.HashMap newHashMap() -> newHashMap
    java.util.HashMap newHashMapWithExpectedSize(int) -> newHashMapWithExpectedSize
    int capacity(int) -> capacity
    java.util.HashMap newHashMap(java.util.Map) -> newHashMap
    java.util.LinkedHashMap newLinkedHashMap() -> newLinkedHashMap
    java.util.LinkedHashMap newLinkedHashMap(java.util.Map) -> newLinkedHashMap
    java.util.concurrent.ConcurrentMap newConcurrentMap() -> newConcurrentMap
    java.util.TreeMap newTreeMap() -> newTreeMap
    java.util.TreeMap newTreeMap(java.util.SortedMap) -> newTreeMap
    java.util.TreeMap newTreeMap(java.util.Comparator) -> newTreeMap
    java.util.EnumMap newEnumMap(java.lang.Class) -> newEnumMap
    java.util.EnumMap newEnumMap(java.util.Map) -> newEnumMap
    java.util.IdentityHashMap newIdentityHashMap() -> newIdentityHashMap
    com.google.common.collect.BiMap synchronizedBiMap(com.google.common.collect.BiMap) -> synchronizedBiMap
    com.google.common.collect.MapDifference difference(java.util.Map,java.util.Map) -> difference
    com.google.common.collect.MapDifference mapDifference(boolean,java.util.Map,java.util.Map,java.util.Map,java.util.Map) -> mapDifference
    com.google.common.collect.ImmutableMap uniqueIndex(java.lang.Iterable,com.google.common.base.Function) -> uniqueIndex
    com.google.common.collect.ImmutableMap fromProperties(java.util.Properties) -> fromProperties
    java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object) -> immutableEntry
    java.util.Set unmodifiableEntrySet(java.util.Set) -> unmodifiableEntrySet
    java.util.Map$Entry unmodifiableEntry(java.util.Map$Entry) -> unmodifiableEntry
    com.google.common.collect.BiMap unmodifiableBiMap(com.google.common.collect.BiMap) -> unmodifiableBiMap
    java.util.Map transformValues(java.util.Map,com.google.common.base.Function) -> transformValues
    java.util.Map transformEntries(java.util.Map,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    java.util.Map filterKeys(java.util.Map,com.google.common.base.Predicate) -> filterKeys
    java.util.Map filterValues(java.util.Map,com.google.common.base.Predicate) -> filterValues
    java.util.Map filterEntries(java.util.Map,com.google.common.base.Predicate) -> filterEntries
    java.util.Map filterFiltered(com.google.common.collect.Maps$AbstractFilteredMap,com.google.common.base.Predicate) -> filterFiltered
    java.lang.Object safeGet(java.util.Map,java.lang.Object) -> safeGet
    boolean safeContainsKey(java.util.Map,java.lang.Object) -> safeContainsKey
    java.util.Set entrySetImpl(java.util.Map,com.google.common.base.Supplier) -> entrySetImpl
    boolean containsEntryImpl(java.util.Collection,java.lang.Object) -> containsEntryImpl
    boolean removeEntryImpl(java.util.Collection,java.lang.Object) -> removeEntryImpl
    boolean equalsImpl(java.util.Map,java.lang.Object) -> equalsImpl
    int hashCodeImpl(java.util.Map) -> hashCodeImpl
    java.lang.String toStringImpl(java.util.Map) -> toStringImpl
    void putAllImpl(java.util.Map,java.util.Map) -> putAllImpl
    java.util.Set keySetImpl(java.util.Map) -> keySetImpl
    boolean containsKeyImpl(java.util.Map,java.lang.Object) -> containsKeyImpl
    java.util.Collection valuesImpl(java.util.Map) -> valuesImpl
    boolean containsValueImpl(java.util.Map,java.lang.Object) -> containsValueImpl
com.google.common.collect.Maps$1 -> com.google.common.collect.Maps$1:
    java.util.Map$Entry val$entry -> val$entry
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
com.google.common.collect.Maps$2 -> com.google.common.collect.Maps$2:
    com.google.common.base.Function val$function -> val$function
    java.lang.Object transformEntry(java.lang.Object,java.lang.Object) -> transformEntry
com.google.common.collect.Maps$3 -> com.google.common.collect.Maps$3:
    com.google.common.base.Predicate val$keyPredicate -> val$keyPredicate
    boolean apply(java.util.Map$Entry) -> apply
    boolean apply(java.lang.Object) -> apply
com.google.common.collect.Maps$4 -> com.google.common.collect.Maps$4:
    com.google.common.base.Predicate val$valuePredicate -> val$valuePredicate
    boolean apply(java.util.Map$Entry) -> apply
    boolean apply(java.lang.Object) -> apply
com.google.common.collect.Maps$AbstractFilteredMap -> com.google.common.collect.Maps$AbstractFilteredMap:
    java.util.Map unfiltered -> unfiltered
    com.google.common.base.Predicate predicate -> predicate
    java.util.Collection values -> values
    boolean apply(java.lang.Object,java.lang.Object) -> apply
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    java.lang.Object remove(java.lang.Object) -> remove
    java.util.Collection values() -> values
com.google.common.collect.Maps$AbstractFilteredMap$Values -> com.google.common.collect.Maps$AbstractFilteredMap$Values:
    com.google.common.collect.Maps$AbstractFilteredMap this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
    void clear() -> clear
    boolean isEmpty() -> isEmpty
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.Maps$AbstractFilteredMap$Values$1 -> com.google.common.collect.Maps$AbstractFilteredMap$Values$1:
    java.util.Iterator val$entryIterator -> val$entryIterator
    com.google.common.collect.Maps$AbstractFilteredMap$Values this$1 -> this$1
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Maps$AbstractMapWrapper -> com.google.common.collect.Maps$AbstractMapWrapper:
    java.util.Map map -> map
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object remove(java.lang.Object) -> remove
    boolean containsValue(java.lang.Object) -> containsValue
    java.util.Set createEntrySet() -> createEntrySet
    boolean isEmpty() -> isEmpty
    int size() -> size
com.google.common.collect.Maps$EntrySetImpl -> com.google.common.collect.Maps$EntrySetImpl:
    java.util.Map map -> map
    com.google.common.base.Supplier entryIteratorSupplier -> entryIteratorSupplier
    java.util.Iterator iterator() -> iterator
    int size() -> size
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
    boolean remove(java.lang.Object) -> remove
    int hashCode() -> hashCode
com.google.common.collect.Maps$EntryTransformer -> com.google.common.collect.Maps$EntryTransformer:
    java.lang.Object transformEntry(java.lang.Object,java.lang.Object) -> transformEntry
com.google.common.collect.Maps$FilteredEntryMap -> com.google.common.collect.Maps$FilteredEntryMap:
    java.util.Set filteredEntrySet -> filteredEntrySet
    java.util.Set entrySet -> entrySet
    java.util.Set keySet -> keySet
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
com.google.common.collect.Maps$FilteredEntryMap$EntrySet -> com.google.common.collect.Maps$FilteredEntryMap$EntrySet:
    com.google.common.collect.Maps$FilteredEntryMap this$0 -> this$0
    java.util.Set delegate() -> delegate
    java.util.Iterator iterator() -> iterator
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1 -> com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1:
    java.util.Iterator val$iterator -> val$iterator
    com.google.common.collect.Maps$FilteredEntryMap$EntrySet this$1 -> this$1
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    java.lang.Object next() -> next
com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1$1 -> com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1$1:
    java.util.Map$Entry val$entry -> val$entry
    com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1 this$2 -> this$2
    java.util.Map$Entry delegate() -> delegate
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$FilteredEntryMap$KeySet -> com.google.common.collect.Maps$FilteredEntryMap$KeySet:
    com.google.common.collect.Maps$FilteredEntryMap this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.Maps$FilteredEntryMap$KeySet$1 -> com.google.common.collect.Maps$FilteredEntryMap$KeySet$1:
    java.util.Iterator val$iterator -> val$iterator
    com.google.common.collect.Maps$FilteredEntryMap$KeySet this$1 -> this$1
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Maps$FilteredKeyMap -> com.google.common.collect.Maps$FilteredKeyMap:
    com.google.common.base.Predicate keyPredicate -> keyPredicate
    java.util.Set entrySet -> entrySet
    java.util.Set keySet -> keySet
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    boolean containsKey(java.lang.Object) -> containsKey
com.google.common.collect.Maps$ImprovedAbstractMap -> com.google.common.collect.Maps$ImprovedAbstractMap:
    java.util.Set entrySet -> entrySet
    java.util.Set keySet -> keySet
    java.util.Collection values -> values
    java.util.Set createEntrySet() -> createEntrySet
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    boolean isEmpty() -> isEmpty
com.google.common.collect.Maps$ImprovedAbstractMap$1 -> com.google.common.collect.Maps$ImprovedAbstractMap$1:
    java.util.Set val$delegate -> val$delegate
    com.google.common.collect.Maps$ImprovedAbstractMap this$0 -> this$0
    java.util.Set delegate() -> delegate
    boolean isEmpty() -> isEmpty
    boolean remove(java.lang.Object) -> remove
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$ImprovedAbstractMap$2 -> com.google.common.collect.Maps$ImprovedAbstractMap$2:
    java.util.Collection val$delegate -> val$delegate
    com.google.common.collect.Maps$ImprovedAbstractMap this$0 -> this$0
    java.util.Collection delegate() -> delegate
    boolean isEmpty() -> isEmpty
    java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$MapDifferenceImpl -> com.google.common.collect.Maps$MapDifferenceImpl:
    boolean areEqual -> areEqual
    java.util.Map onlyOnLeft -> onlyOnLeft
    java.util.Map onlyOnRight -> onlyOnRight
    java.util.Map onBoth -> onBoth
    java.util.Map differences -> differences
    boolean areEqual() -> areEqual
    java.util.Map entriesOnlyOnLeft() -> entriesOnlyOnLeft
    java.util.Map entriesOnlyOnRight() -> entriesOnlyOnRight
    java.util.Map entriesInCommon() -> entriesInCommon
    java.util.Map entriesDiffering() -> entriesDiffering
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.Maps$TransformedEntriesMap -> com.google.common.collect.Maps$TransformedEntriesMap:
    java.util.Map fromMap -> fromMap
    com.google.common.collect.Maps$EntryTransformer transformer -> transformer
    com.google.common.collect.Maps$TransformedEntriesMap$EntrySet entrySet -> entrySet
    int size() -> size
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
    java.util.Set entrySet() -> entrySet
com.google.common.collect.Maps$TransformedEntriesMap$EntrySet -> com.google.common.collect.Maps$TransformedEntriesMap$EntrySet:
    com.google.common.collect.Maps$TransformedEntriesMap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.Maps$TransformedEntriesMap$EntrySet$1 -> com.google.common.collect.Maps$TransformedEntriesMap$EntrySet$1:
    java.util.Iterator val$mapIterator -> val$mapIterator
    com.google.common.collect.Maps$TransformedEntriesMap$EntrySet this$1 -> this$1
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.Maps$TransformedEntriesMap$EntrySet$1$1 -> com.google.common.collect.Maps$TransformedEntriesMap$EntrySet$1$1:
    java.util.Map$Entry val$entry -> val$entry
    com.google.common.collect.Maps$TransformedEntriesMap$EntrySet$1 this$2 -> this$2
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
com.google.common.collect.Maps$UnmodifiableBiMap -> com.google.common.collect.Maps$UnmodifiableBiMap:
    java.util.Map unmodifiableMap -> unmodifiableMap
    com.google.common.collect.BiMap delegate -> delegate
    com.google.common.collect.BiMap inverse -> inverse
    java.util.Set values -> values
    long serialVersionUID -> serialVersionUID
    java.util.Map delegate() -> delegate
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    com.google.common.collect.BiMap inverse() -> inverse
    java.util.Set values() -> values
    java.util.Collection values() -> values
    java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$UnmodifiableEntries -> com.google.common.collect.Maps$UnmodifiableEntries:
    java.util.Collection entries -> entries
    java.util.Collection delegate() -> delegate
    java.util.Iterator iterator() -> iterator
    boolean add(java.util.Map$Entry) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean add(java.lang.Object) -> add
    java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$UnmodifiableEntries$1 -> com.google.common.collect.Maps$UnmodifiableEntries$1:
    java.util.Iterator val$delegate -> val$delegate
    com.google.common.collect.Maps$UnmodifiableEntries this$0 -> this$0
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.util.Iterator delegate() -> delegate
    java.lang.Object next() -> next
    java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$UnmodifiableEntrySet -> com.google.common.collect.Maps$UnmodifiableEntrySet:
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.Maps$ValueDifferenceImpl -> com.google.common.collect.Maps$ValueDifferenceImpl:
    java.lang.Object left -> left
    java.lang.Object right -> right
    java.lang.Object leftValue() -> leftValue
    java.lang.Object rightValue() -> rightValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.MinMaxPriorityQueue -> com.google.common.collect.MinMaxPriorityQueue:
    com.google.common.collect.MinMaxPriorityQueue$Heap minHeap -> minHeap
    com.google.common.collect.MinMaxPriorityQueue$Heap maxHeap -> maxHeap
    int maximumSize -> maximumSize
    java.lang.Object[] queue -> queue
    int size -> size
    int modCount -> modCount
    int EVEN_POWERS_OF_TWO -> EVEN_POWERS_OF_TWO
    int ODD_POWERS_OF_TWO -> ODD_POWERS_OF_TWO
    int DEFAULT_CAPACITY -> DEFAULT_CAPACITY
    com.google.common.collect.MinMaxPriorityQueue create() -> create
    com.google.common.collect.MinMaxPriorityQueue create(java.lang.Iterable) -> create
    com.google.common.collect.MinMaxPriorityQueue$Builder orderedBy(java.util.Comparator) -> orderedBy
    com.google.common.collect.MinMaxPriorityQueue$Builder expectedSize(int) -> expectedSize
    com.google.common.collect.MinMaxPriorityQueue$Builder maximumSize(int) -> maximumSize
    int size() -> size
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean offer(java.lang.Object) -> offer
    java.lang.Object poll() -> poll
    java.lang.Object elementData(int) -> elementData
    java.lang.Object peek() -> peek
    int getMaxElementIndex() -> getMaxElementIndex
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object removeLast() -> removeLast
    java.lang.Object peekLast() -> peekLast
    com.google.common.collect.MinMaxPriorityQueue$MoveDesc removeAt(int) -> removeAt
    com.google.common.collect.MinMaxPriorityQueue$MoveDesc fillHole(int,java.lang.Object) -> fillHole
    java.lang.Object removeAndGet(int) -> removeAndGet
    com.google.common.collect.MinMaxPriorityQueue$Heap heapForIndex(int) -> heapForIndex
    boolean isEvenLevel(int) -> isEvenLevel
    boolean isIntact() -> isIntact
    java.util.Iterator iterator() -> iterator
    void clear() -> clear
    java.lang.Object[] toArray() -> toArray
    java.util.Comparator comparator() -> comparator
    int capacity() -> capacity
    int initialQueueSize(int,int,java.lang.Iterable) -> initialQueueSize
    void growIfNeeded() -> growIfNeeded
    int calculateNewCapacity() -> calculateNewCapacity
    int capAtMaximumSize(int,int) -> capAtMaximumSize
    java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue) -> access$500
    int access$600(com.google.common.collect.MinMaxPriorityQueue) -> access$600
    int access$700(com.google.common.collect.MinMaxPriorityQueue) -> access$700
com.google.common.collect.MinMaxPriorityQueue$1 -> com.google.common.collect.MinMaxPriorityQueue$1:
com.google.common.collect.MinMaxPriorityQueue$Builder -> com.google.common.collect.MinMaxPriorityQueue$Builder:
    int UNSET_EXPECTED_SIZE -> UNSET_EXPECTED_SIZE
    java.util.Comparator comparator -> comparator
    int expectedSize -> expectedSize
    int maximumSize -> maximumSize
    com.google.common.collect.MinMaxPriorityQueue$Builder expectedSize(int) -> expectedSize
    com.google.common.collect.MinMaxPriorityQueue$Builder maximumSize(int) -> maximumSize
    com.google.common.collect.MinMaxPriorityQueue create() -> create
    com.google.common.collect.MinMaxPriorityQueue create(java.lang.Iterable) -> create
    com.google.common.collect.Ordering ordering() -> ordering
    com.google.common.collect.Ordering access$200(com.google.common.collect.MinMaxPriorityQueue$Builder) -> access$200
    int access$300(com.google.common.collect.MinMaxPriorityQueue$Builder) -> access$300
com.google.common.collect.MinMaxPriorityQueue$Heap -> com.google.common.collect.MinMaxPriorityQueue$Heap:
    com.google.common.collect.Ordering ordering -> ordering
    com.google.common.collect.MinMaxPriorityQueue$Heap otherHeap -> otherHeap
    com.google.common.collect.MinMaxPriorityQueue this$0 -> this$0
    int compareElements(int,int) -> compareElements
    com.google.common.collect.MinMaxPriorityQueue$MoveDesc tryCrossOverAndBubbleUp(int,int,java.lang.Object) -> tryCrossOverAndBubbleUp
    void bubbleUp(int,java.lang.Object) -> bubbleUp
    int bubbleUpAlternatingLevels(int,java.lang.Object) -> bubbleUpAlternatingLevels
    int findMin(int,int) -> findMin
    int findMinChild(int) -> findMinChild
    int findMinGrandChild(int) -> findMinGrandChild
    int crossOverUp(int,java.lang.Object) -> crossOverUp
    int getCorrectLastElement(java.lang.Object) -> getCorrectLastElement
    int crossOver(int,java.lang.Object) -> crossOver
    int fillHoleAt(int) -> fillHoleAt
    boolean verifyIndex(int) -> verifyIndex
    int getLeftChildIndex(int) -> getLeftChildIndex
    int getRightChildIndex(int) -> getRightChildIndex
    int getParentIndex(int) -> getParentIndex
    int getGrandparentIndex(int) -> getGrandparentIndex
    boolean access$400(com.google.common.collect.MinMaxPriorityQueue$Heap,int) -> access$400
com.google.common.collect.MinMaxPriorityQueue$MoveDesc -> com.google.common.collect.MinMaxPriorityQueue$MoveDesc:
    java.lang.Object toTrickle -> toTrickle
    java.lang.Object replaced -> replaced
com.google.common.collect.MinMaxPriorityQueue$QueueIterator -> com.google.common.collect.MinMaxPriorityQueue$QueueIterator:
    int cursor -> cursor
    int expectedModCount -> expectedModCount
    java.util.Queue forgetMeNot -> forgetMeNot
    java.util.List skipMe -> skipMe
    java.lang.Object lastFromForgetMeNot -> lastFromForgetMeNot
    boolean canRemove -> canRemove
    com.google.common.collect.MinMaxPriorityQueue this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    boolean containsExact(java.lang.Iterable,java.lang.Object) -> containsExact
    boolean removeExact(java.lang.Object) -> removeExact
    void checkModCount() -> checkModCount
    int nextNotInSkipMe(int) -> nextNotInSkipMe
com.google.common.collect.Multimap -> com.google.common.collect.Multimap:
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    void clear() -> clear
    java.util.Collection get(java.lang.Object) -> get
    java.util.Set keySet() -> keySet
    com.google.common.collect.Multiset keys() -> keys
    java.util.Collection values() -> values
    java.util.Collection entries() -> entries
    java.util.Map asMap() -> asMap
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.Multimaps -> com.google.common.collect.Multimaps:
    com.google.common.collect.Multimap newMultimap(java.util.Map,com.google.common.base.Supplier) -> newMultimap
    com.google.common.collect.ListMultimap newListMultimap(java.util.Map,com.google.common.base.Supplier) -> newListMultimap
    com.google.common.collect.SetMultimap newSetMultimap(java.util.Map,com.google.common.base.Supplier) -> newSetMultimap
    com.google.common.collect.SortedSetMultimap newSortedSetMultimap(java.util.Map,com.google.common.base.Supplier) -> newSortedSetMultimap
    com.google.common.collect.Multimap invertFrom(com.google.common.collect.Multimap,com.google.common.collect.Multimap) -> invertFrom
    com.google.common.collect.Multimap synchronizedMultimap(com.google.common.collect.Multimap) -> synchronizedMultimap
    com.google.common.collect.Multimap unmodifiableMultimap(com.google.common.collect.Multimap) -> unmodifiableMultimap
    com.google.common.collect.SetMultimap synchronizedSetMultimap(com.google.common.collect.SetMultimap) -> synchronizedSetMultimap
    com.google.common.collect.SetMultimap unmodifiableSetMultimap(com.google.common.collect.SetMultimap) -> unmodifiableSetMultimap
    com.google.common.collect.SortedSetMultimap synchronizedSortedSetMultimap(com.google.common.collect.SortedSetMultimap) -> synchronizedSortedSetMultimap
    com.google.common.collect.SortedSetMultimap unmodifiableSortedSetMultimap(com.google.common.collect.SortedSetMultimap) -> unmodifiableSortedSetMultimap
    com.google.common.collect.ListMultimap synchronizedListMultimap(com.google.common.collect.ListMultimap) -> synchronizedListMultimap
    com.google.common.collect.ListMultimap unmodifiableListMultimap(com.google.common.collect.ListMultimap) -> unmodifiableListMultimap
    java.util.Collection unmodifiableValueCollection(java.util.Collection) -> unmodifiableValueCollection
    java.util.Map$Entry unmodifiableAsMapEntry(java.util.Map$Entry) -> unmodifiableAsMapEntry
    java.util.Collection unmodifiableEntries(java.util.Collection) -> unmodifiableEntries
    java.util.Set unmodifiableAsMapEntries(java.util.Set) -> unmodifiableAsMapEntries
    com.google.common.collect.SetMultimap forMap(java.util.Map) -> forMap
    com.google.common.collect.Multimap transformValues(com.google.common.collect.Multimap,com.google.common.base.Function) -> transformValues
    com.google.common.collect.Multimap transformEntries(com.google.common.collect.Multimap,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    com.google.common.collect.ListMultimap transformValues(com.google.common.collect.ListMultimap,com.google.common.base.Function) -> transformValues
    com.google.common.collect.ListMultimap transformEntries(com.google.common.collect.ListMultimap,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    com.google.common.collect.ImmutableListMultimap index(java.lang.Iterable,com.google.common.base.Function) -> index
    java.util.Set access$000(java.util.Set) -> access$000
    java.util.Collection access$100(java.util.Collection) -> access$100
    java.util.Collection access$200(java.util.Collection) -> access$200
    java.util.Map$Entry access$300(java.util.Map$Entry) -> access$300
com.google.common.collect.Multimaps$1 -> com.google.common.collect.Multimaps$1:
    java.util.Map$Entry val$entry -> val$entry
    java.lang.Object getKey() -> getKey
    java.util.Collection getValue() -> getValue
    java.lang.Object getValue() -> getValue
com.google.common.collect.Multimaps$2 -> com.google.common.collect.Multimaps$2:
    com.google.common.base.Function val$function -> val$function
    java.lang.Object transformEntry(java.lang.Object,java.lang.Object) -> transformEntry
com.google.common.collect.Multimaps$3 -> com.google.common.collect.Multimaps$3:
    com.google.common.base.Function val$function -> val$function
    java.lang.Object transformEntry(java.lang.Object,java.lang.Object) -> transformEntry
com.google.common.collect.Multimaps$CustomListMultimap -> com.google.common.collect.Multimaps$CustomListMultimap:
    com.google.common.base.Supplier factory -> factory
    long serialVersionUID -> serialVersionUID
    java.util.List createCollection() -> createCollection
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.util.Collection createCollection() -> createCollection
com.google.common.collect.Multimaps$CustomMultimap -> com.google.common.collect.Multimaps$CustomMultimap:
    com.google.common.base.Supplier factory -> factory
    long serialVersionUID -> serialVersionUID
    java.util.Collection createCollection() -> createCollection
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.google.common.collect.Multimaps$CustomSetMultimap -> com.google.common.collect.Multimaps$CustomSetMultimap:
    com.google.common.base.Supplier factory -> factory
    long serialVersionUID -> serialVersionUID
    java.util.Set createCollection() -> createCollection
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.util.Collection createCollection() -> createCollection
com.google.common.collect.Multimaps$CustomSortedSetMultimap -> com.google.common.collect.Multimaps$CustomSortedSetMultimap:
    com.google.common.base.Supplier factory -> factory
    java.util.Comparator valueComparator -> valueComparator
    long serialVersionUID -> serialVersionUID
    java.util.SortedSet createCollection() -> createCollection
    java.util.Comparator valueComparator() -> valueComparator
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.util.Set createCollection() -> createCollection
    java.util.Collection createCollection() -> createCollection
com.google.common.collect.Multimaps$MapMultimap -> com.google.common.collect.Multimaps$MapMultimap:
    java.util.Map map -> map
    java.util.Map asMap -> asMap
    com.google.common.base.Joiner$MapJoiner JOINER -> JOINER
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    java.util.Set get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Set removeAll(java.lang.Object) -> removeAll
    void clear() -> clear
    java.util.Set keySet() -> keySet
    com.google.common.collect.Multiset keys() -> keys
    java.util.Collection values() -> values
    java.util.Set entries() -> entries
    java.util.Map asMap() -> asMap
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.util.Collection entries() -> entries
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
com.google.common.collect.Multimaps$MapMultimap$1 -> com.google.common.collect.Multimaps$MapMultimap$1:
    java.lang.Object val$key -> val$key
    com.google.common.collect.Multimaps$MapMultimap this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
com.google.common.collect.Multimaps$MapMultimap$1$1 -> com.google.common.collect.Multimaps$MapMultimap$1$1:
    int i -> i
    com.google.common.collect.Multimaps$MapMultimap$1 this$1 -> this$1
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Multimaps$MapMultimap$AsMap -> com.google.common.collect.Multimaps$MapMultimap$AsMap:
    com.google.common.collect.Multimaps$MapMultimap this$0 -> this$0
    java.util.Set createEntrySet() -> createEntrySet
    boolean containsKey(java.lang.Object) -> containsKey
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection remove(java.lang.Object) -> remove
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
com.google.common.collect.Multimaps$MapMultimap$AsMapEntries -> com.google.common.collect.Multimaps$MapMultimap$AsMapEntries:
    com.google.common.collect.Multimaps$MapMultimap this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.Multimaps$MapMultimap$AsMapEntries$1 -> com.google.common.collect.Multimaps$MapMultimap$AsMapEntries$1:
    java.util.Iterator keys -> keys
    com.google.common.collect.Multimaps$MapMultimap$AsMapEntries this$1 -> this$1
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.Multimaps$MapMultimap$AsMapEntries$1$1 -> com.google.common.collect.Multimaps$MapMultimap$AsMapEntries$1$1:
    java.lang.Object val$key -> val$key
    com.google.common.collect.Multimaps$MapMultimap$AsMapEntries$1 this$2 -> this$2
    java.lang.Object getKey() -> getKey
    java.util.Collection getValue() -> getValue
    java.lang.Object getValue() -> getValue
com.google.common.collect.Multimaps$TransformedEntriesListMultimap -> com.google.common.collect.Multimaps$TransformedEntriesListMultimap:
    java.util.List transform(java.lang.Object,java.util.Collection) -> transform
    java.util.List get(java.lang.Object) -> get
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection transform(java.lang.Object,java.util.Collection) -> transform
com.google.common.collect.Multimaps$TransformedEntriesListMultimap$1 -> com.google.common.collect.Multimaps$TransformedEntriesListMultimap$1:
    java.lang.Object val$key -> val$key
    com.google.common.collect.Multimaps$TransformedEntriesListMultimap this$0 -> this$0
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Multimaps$TransformedEntriesMultimap -> com.google.common.collect.Multimaps$TransformedEntriesMultimap:
    com.google.common.collect.Multimap fromMultimap -> fromMultimap
    com.google.common.collect.Maps$EntryTransformer transformer -> transformer
    java.util.Map asMap -> asMap
    java.util.Collection entries -> entries
    java.util.Collection values -> values
    java.util.Collection transform(java.lang.Object,java.util.Collection) -> transform
    java.util.Map asMap() -> asMap
    void clear() -> clear
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.util.Collection entries() -> entries
    java.util.Collection get(java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    java.util.Set keySet() -> keySet
    com.google.common.collect.Multiset keys() -> keys
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    int size() -> size
    java.util.Collection values() -> values
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.Multimaps$TransformedEntriesMultimap$1 -> com.google.common.collect.Multimaps$TransformedEntriesMultimap$1:
    java.lang.Object val$key -> val$key
    com.google.common.collect.Multimaps$TransformedEntriesMultimap this$0 -> this$0
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Multimaps$TransformedEntriesMultimap$2 -> com.google.common.collect.Multimaps$TransformedEntriesMultimap$2:
    com.google.common.collect.Multimaps$TransformedEntriesMultimap this$0 -> this$0
    java.util.Collection transformEntry(java.lang.Object,java.util.Collection) -> transformEntry
    java.lang.Object transformEntry(java.lang.Object,java.lang.Object) -> transformEntry
com.google.common.collect.Multimaps$TransformedEntriesMultimap$3 -> com.google.common.collect.Multimaps$TransformedEntriesMultimap$3:
    com.google.common.collect.Multimaps$TransformedEntriesMultimap this$0 -> this$0
    java.lang.Object apply(java.util.Map$Entry) -> apply
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Multimaps$TransformedEntriesMultimap$TransformedEntries -> com.google.common.collect.Multimaps$TransformedEntriesMultimap$TransformedEntries:
    com.google.common.collect.Multimaps$TransformedEntriesMultimap this$0 -> this$0
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.Multimaps$TransformedEntriesMultimap$TransformedEntries$1 -> com.google.common.collect.Multimaps$TransformedEntriesMultimap$TransformedEntries$1:
    com.google.common.collect.Multimaps$TransformedEntriesMultimap val$this$0 -> val$this$0
    com.google.common.collect.Maps$EntryTransformer val$transformer -> val$transformer
    java.util.Map$Entry apply(java.util.Map$Entry) -> apply
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Multimaps$TransformedEntriesMultimap$TransformedEntries$1$1 -> com.google.common.collect.Multimaps$TransformedEntriesMultimap$TransformedEntries$1$1:
    java.util.Map$Entry val$entry -> val$entry
    com.google.common.collect.Multimaps$TransformedEntriesMultimap$TransformedEntries$1 this$2 -> this$2
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
com.google.common.collect.Multimaps$UnmodifiableAsMapEntries -> com.google.common.collect.Multimaps$UnmodifiableAsMapEntries:
    java.util.Set delegate -> delegate
    java.util.Set delegate() -> delegate
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean equals(java.lang.Object) -> equals
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Multimaps$UnmodifiableAsMapEntries$1 -> com.google.common.collect.Multimaps$UnmodifiableAsMapEntries$1:
    java.util.Iterator val$iterator -> val$iterator
    com.google.common.collect.Multimaps$UnmodifiableAsMapEntries this$0 -> this$0
    java.util.Iterator delegate() -> delegate
    java.util.Map$Entry next() -> next
    java.lang.Object next() -> next
    java.lang.Object delegate() -> delegate
com.google.common.collect.Multimaps$UnmodifiableAsMapValues -> com.google.common.collect.Multimaps$UnmodifiableAsMapValues:
    java.util.Collection delegate -> delegate
    java.util.Collection delegate() -> delegate
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    java.lang.Object delegate() -> delegate
com.google.common.collect.Multimaps$UnmodifiableAsMapValues$1 -> com.google.common.collect.Multimaps$UnmodifiableAsMapValues$1:
    java.util.Iterator val$iterator -> val$iterator
    com.google.common.collect.Multimaps$UnmodifiableAsMapValues this$0 -> this$0
    boolean hasNext() -> hasNext
    java.util.Collection next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.Multimaps$UnmodifiableListMultimap -> com.google.common.collect.Multimaps$UnmodifiableListMultimap:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ListMultimap delegate() -> delegate
    java.util.List get(java.lang.Object) -> get
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection get(java.lang.Object) -> get
    com.google.common.collect.Multimap delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Multimaps$UnmodifiableMultimap -> com.google.common.collect.Multimaps$UnmodifiableMultimap:
    com.google.common.collect.Multimap delegate -> delegate
    java.util.Collection entries -> entries
    com.google.common.collect.Multiset keys -> keys
    java.util.Set keySet -> keySet
    java.util.Collection values -> values
    java.util.Map map -> map
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.Multimap delegate() -> delegate
    void clear() -> clear
    java.util.Map asMap() -> asMap
    java.util.Collection entries() -> entries
    java.util.Collection get(java.lang.Object) -> get
    com.google.common.collect.Multiset keys() -> keys
    java.util.Set keySet() -> keySet
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection values() -> values
    java.lang.Object delegate() -> delegate
com.google.common.collect.Multimaps$UnmodifiableMultimap$1 -> com.google.common.collect.Multimaps$UnmodifiableMultimap$1:
    java.util.Set entrySet -> entrySet
    java.util.Collection asMapValues -> asMapValues
    java.util.Map val$unmodifiableMap -> val$unmodifiableMap
    com.google.common.collect.Multimaps$UnmodifiableMultimap this$0 -> this$0
    java.util.Map delegate() -> delegate
    java.util.Set entrySet() -> entrySet
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection values() -> values
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object delegate() -> delegate
com.google.common.collect.Multimaps$UnmodifiableSetMultimap -> com.google.common.collect.Multimaps$UnmodifiableSetMultimap:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.SetMultimap delegate() -> delegate
    java.util.Set get(java.lang.Object) -> get
    java.util.Set entries() -> entries
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection entries() -> entries
    com.google.common.collect.Multimap delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Multimaps$UnmodifiableSortedSetMultimap -> com.google.common.collect.Multimaps$UnmodifiableSortedSetMultimap:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.SortedSetMultimap delegate() -> delegate
    java.util.SortedSet get(java.lang.Object) -> get
    java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Comparator valueComparator() -> valueComparator
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set get(java.lang.Object) -> get
    com.google.common.collect.SetMultimap delegate() -> delegate
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    com.google.common.collect.Multimap delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Multiset -> com.google.common.collect.Multiset:
    int count(java.lang.Object) -> count
    int add(java.lang.Object,int) -> add
    int remove(java.lang.Object,int) -> remove
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    java.util.Set elementSet() -> elementSet
    java.util.Set entrySet() -> entrySet
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean add(java.lang.Object) -> add
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.Multiset$Entry -> com.google.common.collect.Multiset$Entry:
    java.lang.Object getElement() -> getElement
    int getCount() -> getCount
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.Multisets -> com.google.common.collect.Multisets:
    com.google.common.collect.Multiset unmodifiableMultiset(com.google.common.collect.Multiset) -> unmodifiableMultiset
    com.google.common.collect.Multiset$Entry immutableEntry(java.lang.Object,int) -> immutableEntry
    com.google.common.collect.Multiset forSet(java.util.Set) -> forSet
    int inferDistinctElements(java.lang.Iterable) -> inferDistinctElements
    com.google.common.collect.Multiset intersection(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> intersection
    boolean equalsImpl(com.google.common.collect.Multiset,java.lang.Object) -> equalsImpl
    boolean addAllImpl(com.google.common.collect.Multiset,java.util.Collection) -> addAllImpl
    boolean removeAllImpl(com.google.common.collect.Multiset,java.util.Collection) -> removeAllImpl
    boolean retainAllImpl(com.google.common.collect.Multiset,java.util.Collection) -> retainAllImpl
    int setCountImpl(com.google.common.collect.Multiset,java.lang.Object,int) -> setCountImpl
    boolean setCountImpl(com.google.common.collect.Multiset,java.lang.Object,int,int) -> setCountImpl
    java.util.Set elementSetImpl(com.google.common.collect.Multiset) -> elementSetImpl
    java.util.Iterator iteratorImpl(com.google.common.collect.Multiset) -> iteratorImpl
    int sizeImpl(com.google.common.collect.Multiset) -> sizeImpl
    void checkNonnegative(int,java.lang.String) -> checkNonnegative
    com.google.common.collect.Multiset cast(java.lang.Iterable) -> cast
com.google.common.collect.Multisets$1 -> com.google.common.collect.Multisets$1:
    java.lang.Object val$e -> val$e
    int val$n -> val$n
    java.lang.Object getElement() -> getElement
    int getCount() -> getCount
com.google.common.collect.Multisets$2 -> com.google.common.collect.Multisets$2:
    java.util.Set entrySet -> entrySet
    com.google.common.collect.Multiset val$multiset1 -> val$multiset1
    com.google.common.collect.Multiset val$multiset2 -> val$multiset2
    int count(java.lang.Object) -> count
    java.util.Set createElementSet() -> createElementSet
    java.util.Set entrySet() -> entrySet
com.google.common.collect.Multisets$2$1 -> com.google.common.collect.Multisets$2$1:
    com.google.common.collect.Multisets$2 this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
com.google.common.collect.Multisets$2$1$1 -> com.google.common.collect.Multisets$2$1$1:
    java.util.Iterator val$iterator1 -> val$iterator1
    com.google.common.collect.Multisets$2$1 this$1 -> this$1
    com.google.common.collect.Multiset$Entry computeNext() -> computeNext
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.Multisets$AbstractEntry -> com.google.common.collect.Multisets$AbstractEntry:
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.Multisets$ElementSetImpl -> com.google.common.collect.Multisets$ElementSetImpl:
    com.google.common.collect.Multiset multiset -> multiset
    long serialVersionUID -> serialVersionUID
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    int size() -> size
com.google.common.collect.Multisets$ElementSetImpl$1 -> com.google.common.collect.Multisets$ElementSetImpl$1:
    java.util.Iterator val$entryIterator -> val$entryIterator
    com.google.common.collect.Multisets$ElementSetImpl this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Multisets$MultisetIteratorImpl -> com.google.common.collect.Multisets$MultisetIteratorImpl:
    com.google.common.collect.Multiset multiset -> multiset
    java.util.Iterator entryIterator -> entryIterator
    com.google.common.collect.Multiset$Entry currentEntry -> currentEntry
    int laterCount -> laterCount
    int totalCount -> totalCount
    boolean canRemove -> canRemove
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Multisets$SetMultiset -> com.google.common.collect.Multisets$SetMultiset:
    java.util.Set delegate -> delegate
    java.util.Set elementSet -> elementSet
    java.util.Set entrySet -> entrySet
    long serialVersionUID -> serialVersionUID
    java.util.Set delegate() -> delegate
    int count(java.lang.Object) -> count
    int add(java.lang.Object,int) -> add
    int remove(java.lang.Object,int) -> remove
    java.util.Set elementSet() -> elementSet
    java.util.Set entrySet() -> entrySet
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Multisets$SetMultiset$ElementSet -> com.google.common.collect.Multisets$SetMultiset$ElementSet:
    com.google.common.collect.Multisets$SetMultiset this$0 -> this$0
    java.util.Set delegate() -> delegate
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Multisets$SetMultiset$EntrySet -> com.google.common.collect.Multisets$SetMultiset$EntrySet:
    com.google.common.collect.Multisets$SetMultiset this$0 -> this$0
    int size() -> size
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Multisets$SetMultiset$EntrySet$1 -> com.google.common.collect.Multisets$SetMultiset$EntrySet$1:
    java.util.Iterator elements -> elements
    com.google.common.collect.Multisets$SetMultiset$EntrySet this$1 -> this$1
    boolean hasNext() -> hasNext
    com.google.common.collect.Multiset$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.Multisets$UnmodifiableMultiset -> com.google.common.collect.Multisets$UnmodifiableMultiset:
    com.google.common.collect.Multiset delegate -> delegate
    java.util.Set elementSet -> elementSet
    java.util.Set entrySet -> entrySet
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.Multiset delegate() -> delegate
    java.util.Set elementSet() -> elementSet
    java.util.Set entrySet() -> entrySet
    java.util.Iterator iterator() -> iterator
    boolean add(java.lang.Object) -> add
    int add(java.lang.Object,int) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    int remove(java.lang.Object,int) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.MutableClassToInstanceMap -> com.google.common.collect.MutableClassToInstanceMap:
    com.google.common.collect.MapConstraint VALUE_CAN_BE_CAST_TO_KEY -> VALUE_CAN_BE_CAST_TO_KEY
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.MutableClassToInstanceMap create() -> create
    com.google.common.collect.MutableClassToInstanceMap create(java.util.Map) -> create
    java.lang.Object putInstance(java.lang.Class,java.lang.Object) -> putInstance
    java.lang.Object getInstance(java.lang.Class) -> getInstance
    java.lang.Object cast(java.lang.Class,java.lang.Object) -> cast
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.lang.Object access$000(java.lang.Class,java.lang.Object) -> access$000
com.google.common.collect.MutableClassToInstanceMap$1 -> com.google.common.collect.MutableClassToInstanceMap$1:
    void checkKeyValue(java.lang.Class,java.lang.Object) -> checkKeyValue
    void checkKeyValue(java.lang.Object,java.lang.Object) -> checkKeyValue
com.google.common.collect.NaturalOrdering -> com.google.common.collect.NaturalOrdering:
    com.google.common.collect.NaturalOrdering INSTANCE -> INSTANCE
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    com.google.common.collect.Ordering reverse() -> reverse
    int binarySearch(java.util.List,java.lang.Comparable) -> binarySearch
    java.util.List sortedCopy(java.lang.Iterable) -> sortedCopy
    java.lang.Object readResolve() -> readResolve
    java.lang.String toString() -> toString
    int binarySearch(java.util.List,java.lang.Object) -> binarySearch
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.NullsFirstOrdering -> com.google.common.collect.NullsFirstOrdering:
    com.google.common.collect.Ordering ordering -> ordering
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Object,java.lang.Object) -> compare
    com.google.common.collect.Ordering reverse() -> reverse
    com.google.common.collect.Ordering nullsFirst() -> nullsFirst
    com.google.common.collect.Ordering nullsLast() -> nullsLast
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.NullsLastOrdering -> com.google.common.collect.NullsLastOrdering:
    com.google.common.collect.Ordering ordering -> ordering
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Object,java.lang.Object) -> compare
    com.google.common.collect.Ordering reverse() -> reverse
    com.google.common.collect.Ordering nullsFirst() -> nullsFirst
    com.google.common.collect.Ordering nullsLast() -> nullsLast
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.ObjectArrays -> com.google.common.collect.ObjectArrays:
    java.lang.Object[] newArray(java.lang.Class,int) -> newArray
    java.lang.Object[] newArray(java.lang.Object[],int) -> newArray
    java.lang.Object[] concat(java.lang.Object[],java.lang.Object[],java.lang.Class) -> concat
    java.lang.Object[] concat(java.lang.Object,java.lang.Object[]) -> concat
    java.lang.Object[] concat(java.lang.Object[],java.lang.Object) -> concat
    java.lang.Object[] arraysCopyOf(java.lang.Object[],int) -> arraysCopyOf
    java.lang.Object[] toArrayImpl(java.util.Collection,java.lang.Object[]) -> toArrayImpl
    java.lang.Object[] toArrayImpl(java.util.Collection) -> toArrayImpl
    java.lang.Object[] fillArray(java.lang.Iterable,java.lang.Object[]) -> fillArray
    void swap(java.lang.Object[],int,int) -> swap
com.google.common.collect.Ordering -> com.google.common.collect.Ordering:
    int LEFT_IS_GREATER -> LEFT_IS_GREATER
    int RIGHT_IS_GREATER -> RIGHT_IS_GREATER
    com.google.common.collect.Ordering natural() -> natural
    com.google.common.collect.Ordering from(java.util.Comparator) -> from
    com.google.common.collect.Ordering from(com.google.common.collect.Ordering) -> from
    com.google.common.collect.Ordering explicit(java.util.List) -> explicit
    com.google.common.collect.Ordering explicit(java.lang.Object,java.lang.Object[]) -> explicit
    com.google.common.collect.Ordering arbitrary() -> arbitrary
    com.google.common.collect.Ordering usingToString() -> usingToString
    com.google.common.collect.Ordering compound(java.lang.Iterable) -> compound
    com.google.common.collect.Ordering compound(java.util.Comparator) -> compound
    com.google.common.collect.Ordering reverse() -> reverse
    com.google.common.collect.Ordering onResultOf(com.google.common.base.Function) -> onResultOf
    com.google.common.collect.Ordering lexicographical() -> lexicographical
    com.google.common.collect.Ordering nullsFirst() -> nullsFirst
    com.google.common.collect.Ordering nullsLast() -> nullsLast
    int compare(java.lang.Object,java.lang.Object) -> compare
    java.util.List leastOf(java.lang.Iterable,int) -> leastOf
    java.util.List greatestOf(java.lang.Iterable,int) -> greatestOf
    void quicksortLeastK(java.lang.Object[],int,int,int) -> quicksortLeastK
    int partition(java.lang.Object[],int,int,int) -> partition
    int binarySearch(java.util.List,java.lang.Object) -> binarySearch
    java.util.List sortedCopy(java.lang.Iterable) -> sortedCopy
    com.google.common.collect.ImmutableList immutableSortedCopy(java.lang.Iterable) -> immutableSortedCopy
    boolean isOrdered(java.lang.Iterable) -> isOrdered
    boolean isStrictlyOrdered(java.lang.Iterable) -> isStrictlyOrdered
    java.lang.Object max(java.lang.Iterable) -> max
    java.lang.Object max(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> max
    java.lang.Object max(java.lang.Object,java.lang.Object) -> max
    java.lang.Object min(java.lang.Iterable) -> min
    java.lang.Object min(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> min
    java.lang.Object min(java.lang.Object,java.lang.Object) -> min
com.google.common.collect.Ordering$ArbitraryOrdering -> com.google.common.collect.Ordering$ArbitraryOrdering:
    java.util.Map uids -> uids
    int compare(java.lang.Object,java.lang.Object) -> compare
    java.lang.String toString() -> toString
    int identityHashCode(java.lang.Object) -> identityHashCode
com.google.common.collect.Ordering$ArbitraryOrdering$1 -> com.google.common.collect.Ordering$ArbitraryOrdering$1:
    java.util.concurrent.atomic.AtomicInteger counter -> counter
    com.google.common.collect.Ordering$ArbitraryOrdering this$0 -> this$0
    java.lang.Integer apply(java.lang.Object) -> apply
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Ordering$ArbitraryOrderingHolder -> com.google.common.collect.Ordering$ArbitraryOrderingHolder:
    com.google.common.collect.Ordering ARBITRARY_ORDERING -> ARBITRARY_ORDERING
com.google.common.collect.Ordering$IncomparableValueException -> com.google.common.collect.Ordering$IncomparableValueException:
    java.lang.Object value -> value
    long serialVersionUID -> serialVersionUID
com.google.common.collect.PeekingIterator -> com.google.common.collect.PeekingIterator:
    java.lang.Object peek() -> peek
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Platform -> com.google.common.collect.Platform:
    java.util.logging.Logger logger -> logger
    java.lang.Object[] clone(java.lang.Object[]) -> clone
    void unsafeArrayCopy(java.lang.Object[],int,java.lang.Object[],int,int) -> unsafeArrayCopy
    java.lang.Object[] newArray(java.lang.Class,int) -> newArray
    java.lang.Object[] newArray(java.lang.Object[],int) -> newArray
    com.google.common.collect.MapMaker tryWeakKeys(com.google.common.collect.MapMaker) -> tryWeakKeys
com.google.common.collect.RegularImmutableBiMap -> com.google.common.collect.RegularImmutableBiMap:
    com.google.common.collect.ImmutableMap delegate -> delegate
    com.google.common.collect.ImmutableBiMap inverse -> inverse
    com.google.common.collect.ImmutableMap delegate() -> delegate
    com.google.common.collect.ImmutableBiMap inverse() -> inverse
    boolean isPartialView() -> isPartialView
    com.google.common.collect.BiMap inverse() -> inverse
com.google.common.collect.RegularImmutableList -> com.google.common.collect.RegularImmutableList:
    int offset -> offset
    int size -> size
    java.lang.Object[] array -> array
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean isPartialView() -> isPartialView
    boolean contains(java.lang.Object) -> contains
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.Object get(int) -> get
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    com.google.common.collect.ImmutableList subList(int,int) -> subList
    com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int offset() -> offset
    java.lang.Object[] array() -> array
    java.util.List subList(int,int) -> subList
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] access$000(com.google.common.collect.RegularImmutableList) -> access$000
    int access$100(com.google.common.collect.RegularImmutableList) -> access$100
com.google.common.collect.RegularImmutableList$1 -> com.google.common.collect.RegularImmutableList$1:
    com.google.common.collect.RegularImmutableList this$0 -> this$0
    java.lang.Object get(int) -> get
com.google.common.collect.RegularImmutableMap -> com.google.common.collect.RegularImmutableMap:
    com.google.common.collect.RegularImmutableMap$LinkedEntry[] entries -> entries
    com.google.common.collect.RegularImmutableMap$LinkedEntry[] table -> table
    int mask -> mask
    int keySetHashCode -> keySetHashCode
    com.google.common.collect.ImmutableSet entrySet -> entrySet
    com.google.common.collect.ImmutableSet keySet -> keySet
    com.google.common.collect.ImmutableCollection values -> values
    long serialVersionUID -> serialVersionUID
    int chooseTableSize(int) -> chooseTableSize
    com.google.common.collect.RegularImmutableMap$LinkedEntry[] createEntryArray(int) -> createEntryArray
    com.google.common.collect.RegularImmutableMap$LinkedEntry newLinkedEntry(java.lang.Object,java.lang.Object,com.google.common.collect.RegularImmutableMap$LinkedEntry) -> newLinkedEntry
    java.lang.Object get(java.lang.Object) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsValue(java.lang.Object) -> containsValue
    boolean isPartialView() -> isPartialView
    com.google.common.collect.ImmutableSet entrySet() -> entrySet
    com.google.common.collect.ImmutableSet keySet() -> keySet
    com.google.common.collect.ImmutableCollection values() -> values
    java.lang.String toString() -> toString
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    java.util.Set keySet() -> keySet
    com.google.common.collect.RegularImmutableMap$LinkedEntry[] access$000(com.google.common.collect.RegularImmutableMap) -> access$000
    int access$100(com.google.common.collect.RegularImmutableMap) -> access$100
com.google.common.collect.RegularImmutableMap$EntrySet -> com.google.common.collect.RegularImmutableMap$EntrySet:
    com.google.common.collect.RegularImmutableMap map -> map
    boolean contains(java.lang.Object) -> contains
com.google.common.collect.RegularImmutableMap$KeySet -> com.google.common.collect.RegularImmutableMap$KeySet:
    com.google.common.collect.RegularImmutableMap map -> map
    java.lang.Object transform(java.util.Map$Entry) -> transform
    boolean contains(java.lang.Object) -> contains
    boolean isPartialView() -> isPartialView
    java.lang.Object transform(java.lang.Object) -> transform
com.google.common.collect.RegularImmutableMap$LinkedEntry -> com.google.common.collect.RegularImmutableMap$LinkedEntry:
    com.google.common.collect.RegularImmutableMap$LinkedEntry next() -> next
com.google.common.collect.RegularImmutableMap$NonTerminalEntry -> com.google.common.collect.RegularImmutableMap$NonTerminalEntry:
    com.google.common.collect.RegularImmutableMap$LinkedEntry next -> next
    com.google.common.collect.RegularImmutableMap$LinkedEntry next() -> next
com.google.common.collect.RegularImmutableMap$TerminalEntry -> com.google.common.collect.RegularImmutableMap$TerminalEntry:
    com.google.common.collect.RegularImmutableMap$LinkedEntry next() -> next
com.google.common.collect.RegularImmutableMap$Values -> com.google.common.collect.RegularImmutableMap$Values:
    com.google.common.collect.RegularImmutableMap map -> map
    int size() -> size
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean isPartialView() -> isPartialView
    java.util.Iterator iterator() -> iterator
com.google.common.collect.RegularImmutableMap$Values$1 -> com.google.common.collect.RegularImmutableMap$Values$1:
    com.google.common.collect.RegularImmutableMap$Values this$0 -> this$0
    java.lang.Object get(int) -> get
com.google.common.collect.RegularImmutableSet -> com.google.common.collect.RegularImmutableSet:
    java.lang.Object[] table -> table
    int mask -> mask
    int hashCode -> hashCode
    boolean contains(java.lang.Object) -> contains
    int hashCode() -> hashCode
    boolean isHashCodeFast() -> isHashCodeFast
com.google.common.collect.RegularImmutableSortedSet -> com.google.common.collect.RegularImmutableSortedSet:
    com.google.common.collect.ImmutableList elements -> elements
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean isEmpty() -> isEmpty
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    int binarySearch(java.lang.Object) -> binarySearch
    boolean isPartialView() -> isPartialView
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.Object first() -> first
    java.lang.Object last() -> last
    com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object) -> headSetImpl
    com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,java.lang.Object) -> subSetImpl
    com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object) -> tailSetImpl
    int findSubsetIndex(java.lang.Object) -> findSubsetIndex
    com.google.common.collect.ImmutableSortedSet createSubset(int,int) -> createSubset
    int indexOf(java.lang.Object) -> indexOf
    com.google.common.collect.ImmutableList createAsList() -> createAsList
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ReverseNaturalOrdering -> com.google.common.collect.ReverseNaturalOrdering:
    com.google.common.collect.ReverseNaturalOrdering INSTANCE -> INSTANCE
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    com.google.common.collect.Ordering reverse() -> reverse
    java.lang.Comparable min(java.lang.Comparable,java.lang.Comparable) -> min
    java.lang.Comparable min(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable[]) -> min
    java.lang.Comparable min(java.lang.Iterable) -> min
    java.lang.Comparable max(java.lang.Comparable,java.lang.Comparable) -> max
    java.lang.Comparable max(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable[]) -> max
    java.lang.Comparable max(java.lang.Iterable) -> max
    java.lang.Object readResolve() -> readResolve
    java.lang.String toString() -> toString
    java.lang.Object min(java.lang.Object,java.lang.Object) -> min
    java.lang.Object min(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> min
    java.lang.Object min(java.lang.Iterable) -> min
    java.lang.Object max(java.lang.Object,java.lang.Object) -> max
    java.lang.Object max(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> max
    java.lang.Object max(java.lang.Iterable) -> max
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.ReverseOrdering -> com.google.common.collect.ReverseOrdering:
    com.google.common.collect.Ordering forwardOrder -> forwardOrder
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Object,java.lang.Object) -> compare
    com.google.common.collect.Ordering reverse() -> reverse
    java.lang.Object min(java.lang.Object,java.lang.Object) -> min
    java.lang.Object min(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> min
    java.lang.Object min(java.lang.Iterable) -> min
    java.lang.Object max(java.lang.Object,java.lang.Object) -> max
    java.lang.Object max(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> max
    java.lang.Object max(java.lang.Iterable) -> max
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.common.collect.RowSortedTable -> com.google.common.collect.RowSortedTable:
    java.util.SortedSet rowKeySet() -> rowKeySet
    java.util.SortedMap rowMap() -> rowMap
com.google.common.collect.Serialization -> com.google.common.collect.Serialization:
    int readCount(java.io.ObjectInputStream) -> readCount
    void writeMap(java.util.Map,java.io.ObjectOutputStream) -> writeMap
    void populateMap(java.util.Map,java.io.ObjectInputStream) -> populateMap
    void populateMap(java.util.Map,java.io.ObjectInputStream,int) -> populateMap
    void writeMultiset(com.google.common.collect.Multiset,java.io.ObjectOutputStream) -> writeMultiset
    void populateMultiset(com.google.common.collect.Multiset,java.io.ObjectInputStream) -> populateMultiset
    void populateMultiset(com.google.common.collect.Multiset,java.io.ObjectInputStream,int) -> populateMultiset
    void writeMultimap(com.google.common.collect.Multimap,java.io.ObjectOutputStream) -> writeMultimap
    void populateMultimap(com.google.common.collect.Multimap,java.io.ObjectInputStream) -> populateMultimap
    void populateMultimap(com.google.common.collect.Multimap,java.io.ObjectInputStream,int) -> populateMultimap
    com.google.common.collect.Serialization$FieldSetter getFieldSetter(java.lang.Class,java.lang.String) -> getFieldSetter
com.google.common.collect.Serialization$1 -> com.google.common.collect.Serialization$1:
com.google.common.collect.Serialization$FieldSetter -> com.google.common.collect.Serialization$FieldSetter:
    java.lang.reflect.Field field -> field
    void set(java.lang.Object,java.lang.Object) -> set
    void set(java.lang.Object,int) -> set
com.google.common.collect.SetMultimap -> com.google.common.collect.SetMultimap:
    java.util.Set get(java.lang.Object) -> get
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set entries() -> entries
    java.util.Map asMap() -> asMap
    boolean equals(java.lang.Object) -> equals
com.google.common.collect.Sets -> com.google.common.collect.Sets:
    com.google.common.collect.ImmutableSet immutableEnumSet(java.lang.Enum,java.lang.Enum[]) -> immutableEnumSet
    com.google.common.collect.ImmutableSet immutableEnumSet(java.lang.Iterable) -> immutableEnumSet
    java.util.EnumSet newEnumSet(java.lang.Iterable,java.lang.Class) -> newEnumSet
    java.util.HashSet newHashSet() -> newHashSet
    java.util.HashSet newHashSet(java.lang.Object[]) -> newHashSet
    java.util.HashSet newHashSetWithExpectedSize(int) -> newHashSetWithExpectedSize
    java.util.HashSet newHashSet(java.lang.Iterable) -> newHashSet
    java.util.HashSet newHashSet(java.util.Iterator) -> newHashSet
    java.util.LinkedHashSet newLinkedHashSet() -> newLinkedHashSet
    java.util.LinkedHashSet newLinkedHashSet(java.lang.Iterable) -> newLinkedHashSet
    java.util.TreeSet newTreeSet() -> newTreeSet
    java.util.TreeSet newTreeSet(java.lang.Iterable) -> newTreeSet
    java.util.TreeSet newTreeSet(java.util.Comparator) -> newTreeSet
    java.util.Set newIdentityHashSet() -> newIdentityHashSet
    java.util.EnumSet complementOf(java.util.Collection) -> complementOf
    java.util.EnumSet complementOf(java.util.Collection,java.lang.Class) -> complementOf
    java.util.EnumSet makeComplementByHand(java.util.Collection,java.lang.Class) -> makeComplementByHand
    java.util.Set newSetFromMap(java.util.Map) -> newSetFromMap
    com.google.common.collect.Sets$SetView union(java.util.Set,java.util.Set) -> union
    com.google.common.collect.Sets$SetView intersection(java.util.Set,java.util.Set) -> intersection
    com.google.common.collect.Sets$SetView difference(java.util.Set,java.util.Set) -> difference
    com.google.common.collect.Sets$SetView symmetricDifference(java.util.Set,java.util.Set) -> symmetricDifference
    java.util.Set filter(java.util.Set,com.google.common.base.Predicate) -> filter
    java.util.Set cartesianProduct(java.util.List) -> cartesianProduct
    java.util.Set cartesianProduct(java.util.Set[]) -> cartesianProduct
    java.util.Set powerSet(java.util.Set) -> powerSet
    int hashCodeImpl(java.util.Set) -> hashCodeImpl
    boolean equalsImpl(java.util.Set,java.lang.Object) -> equalsImpl
    java.util.Set transform(java.util.Set,com.google.common.collect.Sets$InvertibleFunction) -> transform
com.google.common.collect.Sets$1 -> com.google.common.collect.Sets$1:
    java.util.Set val$set1 -> val$set1
    java.util.Set val$set2minus1 -> val$set2minus1
    java.util.Set val$set2 -> val$set2
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    java.util.Set copyInto(java.util.Set) -> copyInto
    com.google.common.collect.ImmutableSet immutableCopy() -> immutableCopy
com.google.common.collect.Sets$2 -> com.google.common.collect.Sets$2:
    java.util.Set val$set1 -> val$set1
    com.google.common.base.Predicate val$inSet2 -> val$inSet2
    java.util.Set val$set2 -> val$set2
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
com.google.common.collect.Sets$3 -> com.google.common.collect.Sets$3:
    java.util.Set val$set1 -> val$set1
    com.google.common.base.Predicate val$notInSet2 -> val$notInSet2
    java.util.Set val$set2 -> val$set2
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
com.google.common.collect.Sets$CartesianSet -> com.google.common.collect.Sets$CartesianSet:
    com.google.common.collect.ImmutableList axes -> axes
    int size -> size
    int size() -> size
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Sets$CartesianSet$1 -> com.google.common.collect.Sets$CartesianSet$1:
    int index -> index
    com.google.common.collect.Sets$CartesianSet this$0 -> this$0
    boolean hasNext() -> hasNext
    java.util.List next() -> next
    java.lang.Object next() -> next
com.google.common.collect.Sets$CartesianSet$Axis -> com.google.common.collect.Sets$CartesianSet$Axis:
    com.google.common.collect.ImmutableSet choices -> choices
    com.google.common.collect.ImmutableList choicesList -> choicesList
    int dividend -> dividend
    com.google.common.collect.Sets$CartesianSet this$0 -> this$0
    int size() -> size
    java.lang.Object getForIndex(int) -> getForIndex
    boolean contains(java.lang.Object) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.Sets$FilteredSet -> com.google.common.collect.Sets$FilteredSet:
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.Sets$InvertibleFunction -> com.google.common.collect.Sets$InvertibleFunction:
    java.lang.Object invert(java.lang.Object) -> invert
    com.google.common.collect.Sets$InvertibleFunction inverse() -> inverse
com.google.common.collect.Sets$InvertibleFunction$1 -> com.google.common.collect.Sets$InvertibleFunction$1:
    com.google.common.collect.Sets$InvertibleFunction this$0 -> this$0
    java.lang.Object apply(java.lang.Object) -> apply
    java.lang.Object invert(java.lang.Object) -> invert
    com.google.common.collect.Sets$InvertibleFunction inverse() -> inverse
com.google.common.collect.Sets$PowerSet -> com.google.common.collect.Sets$PowerSet:
    com.google.common.collect.ImmutableSet inputSet -> inputSet
    com.google.common.collect.ImmutableList inputList -> inputList
    int powerSetSize -> powerSetSize
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.Sets$PowerSet$1 -> com.google.common.collect.Sets$PowerSet$1:
    com.google.common.collect.Sets$PowerSet this$0 -> this$0
    java.util.Set get(int) -> get
    java.lang.Object get(int) -> get
com.google.common.collect.Sets$PowerSet$1$1 -> com.google.common.collect.Sets$PowerSet$1$1:
    int val$setBits -> val$setBits
    com.google.common.collect.Sets$PowerSet$1 this$1 -> this$1
    int size() -> size
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Sets$PowerSet$BitFilteredSetIterator -> com.google.common.collect.Sets$PowerSet$BitFilteredSetIterator:
    com.google.common.collect.ImmutableList input -> input
    int remainingSetBits -> remainingSetBits
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Sets$SetFromMap -> com.google.common.collect.Sets$SetFromMap:
    java.util.Map m -> m
    java.util.Set s -> s
    long serialVersionUID -> serialVersionUID
    void clear() -> clear
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    boolean add(java.lang.Object) -> add
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean containsAll(java.util.Collection) -> containsAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void readObject(java.io.ObjectInputStream) -> readObject
com.google.common.collect.Sets$SetView -> com.google.common.collect.Sets$SetView:
    com.google.common.collect.ImmutableSet immutableCopy() -> immutableCopy
    java.util.Set copyInto(java.util.Set) -> copyInto
com.google.common.collect.Sets$TransformedSet -> com.google.common.collect.Sets$TransformedSet:
    java.util.Set delegate -> delegate
    com.google.common.collect.Sets$InvertibleFunction bijection -> bijection
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean add(java.lang.Object) -> add
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.common.collect.SingletonImmutableList -> com.google.common.collect.SingletonImmutableList:
    java.lang.Object element -> element
    java.lang.Object get(int) -> get
    int indexOf(java.lang.Object) -> indexOf
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    int size() -> size
    com.google.common.collect.ImmutableList subList(int,int) -> subList
    com.google.common.collect.ImmutableList reverse() -> reverse
    boolean contains(java.lang.Object) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean isEmpty() -> isEmpty
    boolean isPartialView() -> isPartialView
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.util.List subList(int,int) -> subList
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.Iterator iterator() -> iterator
com.google.common.collect.SingletonImmutableList$1 -> com.google.common.collect.SingletonImmutableList$1:
    boolean hasNext -> hasNext
    int val$start -> val$start
    com.google.common.collect.SingletonImmutableList this$0 -> this$0
    boolean hasNext() -> hasNext
    boolean hasPrevious() -> hasPrevious
    java.lang.Object next() -> next
    int nextIndex() -> nextIndex
    java.lang.Object previous() -> previous
    int previousIndex() -> previousIndex
com.google.common.collect.SingletonImmutableMap -> com.google.common.collect.SingletonImmutableMap:
    java.lang.Object singleKey -> singleKey
    java.lang.Object singleValue -> singleValue
    java.util.Map$Entry entry -> entry
    com.google.common.collect.ImmutableSet entrySet -> entrySet
    com.google.common.collect.ImmutableSet keySet -> keySet
    com.google.common.collect.ImmutableCollection values -> values
    java.util.Map$Entry entry() -> entry
    java.lang.Object get(java.lang.Object) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    boolean isPartialView() -> isPartialView
    com.google.common.collect.ImmutableSet entrySet() -> entrySet
    com.google.common.collect.ImmutableSet keySet() -> keySet
    com.google.common.collect.ImmutableCollection values() -> values
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    java.util.Set keySet() -> keySet
com.google.common.collect.SingletonImmutableMap$Values -> com.google.common.collect.SingletonImmutableMap$Values:
    java.lang.Object singleValue -> singleValue
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
    int size() -> size
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean isPartialView() -> isPartialView
    java.util.Iterator iterator() -> iterator
com.google.common.collect.SingletonImmutableSet -> com.google.common.collect.SingletonImmutableSet:
    java.lang.Object element -> element
    java.lang.Integer cachedHashCode -> cachedHashCode
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean isPartialView() -> isPartialView
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean isHashCodeFast() -> isHashCodeFast
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
com.google.common.collect.SortedLists -> com.google.common.collect.SortedLists:
    int binarySearch(java.util.List,java.lang.Object,java.util.Comparator,com.google.common.collect.SortedLists$Relation) -> binarySearch
    int binarySearch(java.util.List,java.lang.Object,java.util.Comparator,com.google.common.collect.SortedLists$Relation,boolean) -> binarySearch
com.google.common.collect.SortedLists$1 -> com.google.common.collect.SortedLists$1:
com.google.common.collect.SortedLists$Relation -> com.google.common.collect.SortedLists$Relation:
    com.google.common.collect.SortedLists$Relation LOWER -> LOWER
    com.google.common.collect.SortedLists$Relation FLOOR -> FLOOR
    com.google.common.collect.SortedLists$Relation EQUAL -> EQUAL
    com.google.common.collect.SortedLists$Relation CEILING -> CEILING
    com.google.common.collect.SortedLists$Relation HIGHER -> HIGHER
    com.google.common.collect.SortedLists$Relation[] $VALUES -> $VALUES
    com.google.common.collect.SortedLists$Relation[] values() -> values
    com.google.common.collect.SortedLists$Relation valueOf(java.lang.String) -> valueOf
    com.google.common.collect.SortedLists$Relation reverse() -> reverse
    int exactMatchFound(java.util.List,java.lang.Object,int,int,int,java.util.Comparator,boolean) -> exactMatchFound
    int exactMatchNotFound(java.util.List,java.lang.Object,int,java.util.Comparator) -> exactMatchNotFound
com.google.common.collect.SortedLists$Relation$1 -> com.google.common.collect.SortedLists$Relation$1:
    com.google.common.collect.SortedLists$Relation reverse() -> reverse
    int exactMatchFound(java.util.List,java.lang.Object,int,int,int,java.util.Comparator,boolean) -> exactMatchFound
    int exactMatchNotFound(java.util.List,java.lang.Object,int,java.util.Comparator) -> exactMatchNotFound
com.google.common.collect.SortedLists$Relation$2 -> com.google.common.collect.SortedLists$Relation$2:
    com.google.common.collect.SortedLists$Relation reverse() -> reverse
    int exactMatchFound(java.util.List,java.lang.Object,int,int,int,java.util.Comparator,boolean) -> exactMatchFound
    int exactMatchNotFound(java.util.List,java.lang.Object,int,java.util.Comparator) -> exactMatchNotFound
com.google.common.collect.SortedLists$Relation$3 -> com.google.common.collect.SortedLists$Relation$3:
    com.google.common.collect.SortedLists$Relation reverse() -> reverse
    int exactMatchFound(java.util.List,java.lang.Object,int,int,int,java.util.Comparator,boolean) -> exactMatchFound
    int exactMatchNotFound(java.util.List,java.lang.Object,int,java.util.Comparator) -> exactMatchNotFound
com.google.common.collect.SortedLists$Relation$4 -> com.google.common.collect.SortedLists$Relation$4:
    com.google.common.collect.SortedLists$Relation reverse() -> reverse
    int exactMatchFound(java.util.List,java.lang.Object,int,int,int,java.util.Comparator,boolean) -> exactMatchFound
    int exactMatchNotFound(java.util.List,java.lang.Object,int,java.util.Comparator) -> exactMatchNotFound
com.google.common.collect.SortedLists$Relation$5 -> com.google.common.collect.SortedLists$Relation$5:
    com.google.common.collect.SortedLists$Relation reverse() -> reverse
    int exactMatchFound(java.util.List,java.lang.Object,int,int,int,java.util.Comparator,boolean) -> exactMatchFound
    int exactMatchNotFound(java.util.List,java.lang.Object,int,java.util.Comparator) -> exactMatchNotFound
com.google.common.collect.SortedMapDifference -> com.google.common.collect.SortedMapDifference:
    java.util.SortedMap entriesOnlyOnLeft() -> entriesOnlyOnLeft
    java.util.SortedMap entriesOnlyOnRight() -> entriesOnlyOnRight
    java.util.SortedMap entriesInCommon() -> entriesInCommon
    java.util.SortedMap entriesDiffering() -> entriesDiffering
com.google.common.collect.SortedMaps -> com.google.common.collect.SortedMaps:
    java.util.SortedMap transformValues(java.util.SortedMap,com.google.common.base.Function) -> transformValues
    java.util.SortedMap transformEntries(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    com.google.common.collect.SortedMapDifference difference(java.util.SortedMap,java.util.Map) -> difference
    com.google.common.collect.SortedMapDifference sortedMapDifference(boolean,java.util.SortedMap,java.util.SortedMap,java.util.SortedMap,java.util.SortedMap) -> sortedMapDifference
    java.util.Comparator orNaturalOrder(java.util.Comparator) -> orNaturalOrder
    java.util.SortedMap filterKeys(java.util.SortedMap,com.google.common.base.Predicate) -> filterKeys
    java.util.SortedMap filterValues(java.util.SortedMap,com.google.common.base.Predicate) -> filterValues
    java.util.SortedMap filterEntries(java.util.SortedMap,com.google.common.base.Predicate) -> filterEntries
    java.util.SortedMap filterFiltered(com.google.common.collect.SortedMaps$FilteredSortedMap,com.google.common.base.Predicate) -> filterFiltered
com.google.common.collect.SortedMaps$1 -> com.google.common.collect.SortedMaps$1:
    com.google.common.base.Function val$function -> val$function
    java.lang.Object transformEntry(java.lang.Object,java.lang.Object) -> transformEntry
com.google.common.collect.SortedMaps$2 -> com.google.common.collect.SortedMaps$2:
    com.google.common.base.Predicate val$keyPredicate -> val$keyPredicate
    boolean apply(java.util.Map$Entry) -> apply
    boolean apply(java.lang.Object) -> apply
com.google.common.collect.SortedMaps$3 -> com.google.common.collect.SortedMaps$3:
    com.google.common.base.Predicate val$valuePredicate -> val$valuePredicate
    boolean apply(java.util.Map$Entry) -> apply
    boolean apply(java.lang.Object) -> apply
com.google.common.collect.SortedMaps$FilteredSortedMap -> com.google.common.collect.SortedMaps$FilteredSortedMap:
    java.util.SortedMap sortedMap() -> sortedMap
    java.util.Comparator comparator() -> comparator
    java.lang.Object firstKey() -> firstKey
    java.lang.Object lastKey() -> lastKey
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.SortedMaps$SortedMapDifferenceImpl -> com.google.common.collect.SortedMaps$SortedMapDifferenceImpl:
    java.util.SortedMap entriesDiffering() -> entriesDiffering
    java.util.SortedMap entriesInCommon() -> entriesInCommon
    java.util.SortedMap entriesOnlyOnLeft() -> entriesOnlyOnLeft
    java.util.SortedMap entriesOnlyOnRight() -> entriesOnlyOnRight
    java.util.Map entriesDiffering() -> entriesDiffering
    java.util.Map entriesInCommon() -> entriesInCommon
    java.util.Map entriesOnlyOnRight() -> entriesOnlyOnRight
    java.util.Map entriesOnlyOnLeft() -> entriesOnlyOnLeft
com.google.common.collect.SortedMaps$TransformedEntriesSortedMap -> com.google.common.collect.SortedMaps$TransformedEntriesSortedMap:
    java.util.SortedMap fromMap() -> fromMap
    java.util.Comparator comparator() -> comparator
    java.lang.Object firstKey() -> firstKey
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.lang.Object lastKey() -> lastKey
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.SortedSetMultimap -> com.google.common.collect.SortedSetMultimap:
    java.util.SortedSet get(java.lang.Object) -> get
    java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Map asMap() -> asMap
    java.util.Comparator valueComparator() -> valueComparator
com.google.common.collect.StandardRowSortedTable -> com.google.common.collect.StandardRowSortedTable:
    java.util.SortedSet rowKeySet -> rowKeySet
    com.google.common.collect.StandardRowSortedTable$RowSortedMap rowMap -> rowMap
    long serialVersionUID -> serialVersionUID
    java.util.SortedMap sortedBackingMap() -> sortedBackingMap
    java.util.SortedSet rowKeySet() -> rowKeySet
    java.util.SortedMap rowMap() -> rowMap
    java.util.Map rowMap() -> rowMap
    java.util.Set rowKeySet() -> rowKeySet
    java.util.SortedMap access$100(com.google.common.collect.StandardRowSortedTable) -> access$100
com.google.common.collect.StandardRowSortedTable$1 -> com.google.common.collect.StandardRowSortedTable$1:
com.google.common.collect.StandardRowSortedTable$RowKeySortedSet -> com.google.common.collect.StandardRowSortedTable$RowKeySortedSet:
    com.google.common.collect.StandardRowSortedTable this$0 -> this$0
    java.util.Comparator comparator() -> comparator
    java.lang.Object first() -> first
    java.lang.Object last() -> last
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.StandardRowSortedTable$RowSortedMap -> com.google.common.collect.StandardRowSortedTable$RowSortedMap:
    com.google.common.collect.StandardRowSortedTable this$0 -> this$0
    java.util.Comparator comparator() -> comparator
    java.lang.Object firstKey() -> firstKey
    java.lang.Object lastKey() -> lastKey
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.StandardTable -> com.google.common.collect.StandardTable:
    java.util.Map backingMap -> backingMap
    com.google.common.base.Supplier factory -> factory
    com.google.common.collect.StandardTable$CellSet cellSet -> cellSet
    com.google.common.collect.StandardTable$RowKeySet rowKeySet -> rowKeySet
    java.util.Set columnKeySet -> columnKeySet
    com.google.common.collect.StandardTable$Values values -> values
    com.google.common.collect.StandardTable$RowMap rowMap -> rowMap
    com.google.common.collect.StandardTable$ColumnMap columnMap -> columnMap
    long serialVersionUID -> serialVersionUID
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    boolean containsColumn(java.lang.Object) -> containsColumn
    boolean containsRow(java.lang.Object) -> containsRow
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void clear() -> clear
    java.util.Map getOrCreate(java.lang.Object) -> getOrCreate
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    void putAll(com.google.common.collect.Table) -> putAll
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Map removeColumn(java.lang.Object) -> removeColumn
    boolean containsMapping(java.lang.Object,java.lang.Object,java.lang.Object) -> containsMapping
    boolean removeMapping(java.lang.Object,java.lang.Object,java.lang.Object) -> removeMapping
    java.util.Set cellSet() -> cellSet
    java.util.Map row(java.lang.Object) -> row
    java.util.Map column(java.lang.Object) -> column
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Iterator createColumnKeyIterator() -> createColumnKeyIterator
    java.util.Collection values() -> values
    java.util.Map rowMap() -> rowMap
    java.util.Map columnMap() -> columnMap
    java.util.Iterator keyIteratorImpl(java.util.Map) -> keyIteratorImpl
    java.util.Iterator valueIteratorImpl(java.util.Map) -> valueIteratorImpl
    boolean access$300(com.google.common.collect.StandardTable,java.lang.Object,java.lang.Object,java.lang.Object) -> access$300
    boolean access$400(com.google.common.collect.StandardTable,java.lang.Object,java.lang.Object,java.lang.Object) -> access$400
    java.util.Map access$1100(com.google.common.collect.StandardTable,java.lang.Object) -> access$1100
com.google.common.collect.StandardTable$1 -> com.google.common.collect.StandardTable$1:
    java.util.Iterator val$entryIterator -> val$entryIterator
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.StandardTable$2 -> com.google.common.collect.StandardTable$2:
    java.util.Iterator val$entryIterator -> val$entryIterator
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.StandardTable$CellIterator -> com.google.common.collect.StandardTable$CellIterator:
    java.util.Iterator rowIterator -> rowIterator
    java.util.Map$Entry rowEntry -> rowEntry
    java.util.Iterator columnIterator -> columnIterator
    com.google.common.collect.StandardTable this$0 -> this$0
    boolean hasNext() -> hasNext
    com.google.common.collect.Table$Cell next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.StandardTable$CellSet -> com.google.common.collect.StandardTable$CellSet:
    com.google.common.collect.StandardTable this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.StandardTable$Column -> com.google.common.collect.StandardTable$Column:
    java.lang.Object columnKey -> columnKey
    com.google.common.collect.StandardTable$Column$Values columnValues -> columnValues
    com.google.common.collect.StandardTable$Column$KeySet keySet -> keySet
    com.google.common.collect.StandardTable this$0 -> this$0
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object remove(java.lang.Object) -> remove
    java.util.Set createEntrySet() -> createEntrySet
    java.util.Collection values() -> values
    boolean removePredicate(com.google.common.base.Predicate) -> removePredicate
    java.util.Set keySet() -> keySet
com.google.common.collect.StandardTable$Column$EntrySet -> com.google.common.collect.StandardTable$Column$EntrySet:
    com.google.common.collect.StandardTable$Column this$1 -> this$1
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.StandardTable$Column$EntrySetIterator -> com.google.common.collect.StandardTable$Column$EntrySetIterator:
    java.util.Iterator iterator -> iterator
    com.google.common.collect.StandardTable$Column this$1 -> this$1
    java.util.Map$Entry computeNext() -> computeNext
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.StandardTable$Column$EntrySetIterator$1 -> com.google.common.collect.StandardTable$Column$EntrySetIterator$1:
    java.util.Map$Entry val$entry -> val$entry
    com.google.common.collect.StandardTable$Column$EntrySetIterator this$2 -> this$2
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.StandardTable$Column$KeySet -> com.google.common.collect.StandardTable$Column$KeySet:
    com.google.common.collect.StandardTable$Column this$1 -> this$1
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.StandardTable$Column$KeySet$1 -> com.google.common.collect.StandardTable$Column$KeySet$1:
    java.util.Collection val$c -> val$c
    com.google.common.collect.StandardTable$Column$KeySet this$2 -> this$2
    boolean apply(java.util.Map$Entry) -> apply
    boolean apply(java.lang.Object) -> apply
com.google.common.collect.StandardTable$Column$Values -> com.google.common.collect.StandardTable$Column$Values:
    com.google.common.collect.StandardTable$Column this$1 -> this$1
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    void clear() -> clear
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.StandardTable$Column$Values$1 -> com.google.common.collect.StandardTable$Column$Values$1:
    java.util.Collection val$c -> val$c
    com.google.common.collect.StandardTable$Column$Values this$2 -> this$2
    boolean apply(java.util.Map$Entry) -> apply
    boolean apply(java.lang.Object) -> apply
com.google.common.collect.StandardTable$Column$Values$2 -> com.google.common.collect.StandardTable$Column$Values$2:
    java.util.Collection val$c -> val$c
    com.google.common.collect.StandardTable$Column$Values this$2 -> this$2
    boolean apply(java.util.Map$Entry) -> apply
    boolean apply(java.lang.Object) -> apply
com.google.common.collect.StandardTable$ColumnKeyIterator -> com.google.common.collect.StandardTable$ColumnKeyIterator:
    java.util.Map seen -> seen
    java.util.Iterator mapIterator -> mapIterator
    java.util.Iterator entryIterator -> entryIterator
    com.google.common.collect.StandardTable this$0 -> this$0
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.StandardTable$ColumnKeySet -> com.google.common.collect.StandardTable$ColumnKeySet:
    com.google.common.collect.StandardTable this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    boolean contains(java.lang.Object) -> contains
com.google.common.collect.StandardTable$ColumnMap -> com.google.common.collect.StandardTable$ColumnMap:
    com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues columnMapValues -> columnMapValues
    com.google.common.collect.StandardTable this$0 -> this$0
    java.util.Map get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    java.util.Map remove(java.lang.Object) -> remove
    java.util.Set createEntrySet() -> createEntrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet -> com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet:
    com.google.common.collect.StandardTable$ColumnMap this$1 -> this$1
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet$1 -> com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet$1:
    java.util.Iterator val$columnIterator -> val$columnIterator
    com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet this$2 -> this$2
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    java.lang.Object next() -> next
com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues -> com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues:
    com.google.common.collect.StandardTable$ColumnMap this$1 -> this$1
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
com.google.common.collect.StandardTable$Row -> com.google.common.collect.StandardTable$Row:
    java.lang.Object rowKey -> rowKey
    com.google.common.collect.StandardTable this$0 -> this$0
    java.util.Set createEntrySet() -> createEntrySet
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
com.google.common.collect.StandardTable$Row$RowEntrySet -> com.google.common.collect.StandardTable$Row$RowEntrySet:
    com.google.common.collect.StandardTable$Row this$1 -> this$1
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    int size() -> size
    java.util.Iterator iterator() -> iterator
com.google.common.collect.StandardTable$Row$RowEntrySet$1 -> com.google.common.collect.StandardTable$Row$RowEntrySet$1:
    java.util.Iterator val$iterator -> val$iterator
    java.util.Map val$map -> val$map
    com.google.common.collect.StandardTable$Row$RowEntrySet this$2 -> this$2
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.StandardTable$Row$RowEntrySet$1$1 -> com.google.common.collect.StandardTable$Row$RowEntrySet$1$1:
    java.util.Map$Entry val$entry -> val$entry
    com.google.common.collect.StandardTable$Row$RowEntrySet$1 this$3 -> this$3
    java.util.Map$Entry delegate() -> delegate
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object delegate() -> delegate
com.google.common.collect.StandardTable$RowKeySet -> com.google.common.collect.StandardTable$RowKeySet:
    com.google.common.collect.StandardTable this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.StandardTable$RowMap -> com.google.common.collect.StandardTable$RowMap:
    com.google.common.collect.StandardTable this$0 -> this$0
    boolean containsKey(java.lang.Object) -> containsKey
    java.util.Map get(java.lang.Object) -> get
    java.util.Set keySet() -> keySet
    java.util.Map remove(java.lang.Object) -> remove
    java.util.Set createEntrySet() -> createEntrySet
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
com.google.common.collect.StandardTable$RowMap$EntryIterator -> com.google.common.collect.StandardTable$RowMap$EntryIterator:
    java.util.Iterator delegate -> delegate
    com.google.common.collect.StandardTable$RowMap this$1 -> this$1
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.StandardTable$RowMap$EntrySet -> com.google.common.collect.StandardTable$RowMap$EntrySet:
    com.google.common.collect.StandardTable$RowMap this$1 -> this$1
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.StandardTable$TableCollection -> com.google.common.collect.StandardTable$TableCollection:
    com.google.common.collect.StandardTable this$0 -> this$0
    boolean isEmpty() -> isEmpty
    void clear() -> clear
com.google.common.collect.StandardTable$TableSet -> com.google.common.collect.StandardTable$TableSet:
    com.google.common.collect.StandardTable this$0 -> this$0
    boolean isEmpty() -> isEmpty
    void clear() -> clear
com.google.common.collect.StandardTable$Values -> com.google.common.collect.StandardTable$Values:
    com.google.common.collect.StandardTable this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
com.google.common.collect.StandardTable$Values$1 -> com.google.common.collect.StandardTable$Values$1:
    java.util.Iterator val$cellIterator -> val$cellIterator
    com.google.common.collect.StandardTable$Values this$1 -> this$1
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Synchronized -> com.google.common.collect.Synchronized:
    java.util.Collection collection(java.util.Collection,java.lang.Object) -> collection
    java.util.Set set(java.util.Set,java.lang.Object) -> set
    java.util.SortedSet sortedSet(java.util.SortedSet,java.lang.Object) -> sortedSet
    java.util.List list(java.util.List,java.lang.Object) -> list
    com.google.common.collect.Multiset multiset(com.google.common.collect.Multiset,java.lang.Object) -> multiset
    com.google.common.collect.Multimap multimap(com.google.common.collect.Multimap,java.lang.Object) -> multimap
    com.google.common.collect.ListMultimap listMultimap(com.google.common.collect.ListMultimap,java.lang.Object) -> listMultimap
    com.google.common.collect.SetMultimap setMultimap(com.google.common.collect.SetMultimap,java.lang.Object) -> setMultimap
    com.google.common.collect.SortedSetMultimap sortedSetMultimap(com.google.common.collect.SortedSetMultimap,java.lang.Object) -> sortedSetMultimap
    java.util.Collection typePreservingCollection(java.util.Collection,java.lang.Object) -> typePreservingCollection
    java.util.Set typePreservingSet(java.util.Set,java.lang.Object) -> typePreservingSet
    java.util.Map map(java.util.Map,java.lang.Object) -> map
    java.util.SortedMap sortedMap(java.util.SortedMap,java.lang.Object) -> sortedMap
    com.google.common.collect.BiMap biMap(com.google.common.collect.BiMap,java.lang.Object) -> biMap
    java.util.SortedSet access$100(java.util.SortedSet,java.lang.Object) -> access$100
    java.util.List access$200(java.util.List,java.lang.Object) -> access$200
    java.util.Set access$300(java.util.Set,java.lang.Object) -> access$300
    java.util.Collection access$400(java.util.Collection,java.lang.Object) -> access$400
    java.util.Collection access$500(java.util.Collection,java.lang.Object) -> access$500
com.google.common.collect.Synchronized$1 -> com.google.common.collect.Synchronized$1:
com.google.common.collect.Synchronized$SynchronizedAsMap -> com.google.common.collect.Synchronized$SynchronizedAsMap:
    java.util.Set asMapEntrySet -> asMapEntrySet
    java.util.Collection asMapValues -> asMapValues
    long serialVersionUID -> serialVersionUID
    java.util.Collection get(java.lang.Object) -> get
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
com.google.common.collect.Synchronized$SynchronizedAsMapEntries -> com.google.common.collect.Synchronized$SynchronizedAsMapEntries:
    long serialVersionUID -> serialVersionUID
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean equals(java.lang.Object) -> equals
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1 -> com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1:
    java.util.Iterator val$iterator -> val$iterator
    com.google.common.collect.Synchronized$SynchronizedAsMapEntries this$0 -> this$0
    java.util.Iterator delegate() -> delegate
    java.util.Map$Entry next() -> next
    java.lang.Object next() -> next
    java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1$1 -> com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1$1:
    java.util.Map$Entry val$entry -> val$entry
    com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1 this$1 -> this$1
    java.util.Map$Entry delegate() -> delegate
    java.util.Collection getValue() -> getValue
    java.lang.Object getValue() -> getValue
    java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedAsMapValues -> com.google.common.collect.Synchronized$SynchronizedAsMapValues:
    long serialVersionUID -> serialVersionUID
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Synchronized$SynchronizedAsMapValues$1 -> com.google.common.collect.Synchronized$SynchronizedAsMapValues$1:
    java.util.Iterator val$iterator -> val$iterator
    com.google.common.collect.Synchronized$SynchronizedAsMapValues this$0 -> this$0
    java.util.Iterator delegate() -> delegate
    java.util.Collection next() -> next
    java.lang.Object next() -> next
    java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedBiMap -> com.google.common.collect.Synchronized$SynchronizedBiMap:
    java.util.Set valueSet -> valueSet
    com.google.common.collect.BiMap inverse -> inverse
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.BiMap delegate() -> delegate
    java.util.Set values() -> values
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    com.google.common.collect.BiMap inverse() -> inverse
    java.util.Collection values() -> values
    java.util.Map delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedCollection -> com.google.common.collect.Synchronized$SynchronizedCollection:
    long serialVersionUID -> serialVersionUID
    java.util.Collection delegate() -> delegate
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedList -> com.google.common.collect.Synchronized$SynchronizedList:
    long serialVersionUID -> serialVersionUID
    java.util.List delegate() -> delegate
    void add(int,java.lang.Object) -> add
    boolean addAll(int,java.util.Collection) -> addAll
    java.lang.Object get(int) -> get
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    java.lang.Object remove(int) -> remove
    java.lang.Object set(int,java.lang.Object) -> set
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedListMultimap -> com.google.common.collect.Synchronized$SynchronizedListMultimap:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ListMultimap delegate() -> delegate
    java.util.List get(java.lang.Object) -> get
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection get(java.lang.Object) -> get
    com.google.common.collect.Multimap delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedMap -> com.google.common.collect.Synchronized$SynchronizedMap:
    java.util.Set keySet -> keySet
    java.util.Collection values -> values
    java.util.Set entrySet -> entrySet
    long serialVersionUID -> serialVersionUID
    java.util.Map delegate() -> delegate
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.util.Set entrySet() -> entrySet
    java.lang.Object get(java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    java.util.Set keySet() -> keySet
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    int size() -> size
    java.util.Collection values() -> values
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedMultimap -> com.google.common.collect.Synchronized$SynchronizedMultimap:
    java.util.Set keySet -> keySet
    java.util.Collection valuesCollection -> valuesCollection
    java.util.Collection entries -> entries
    java.util.Map asMap -> asMap
    com.google.common.collect.Multiset keys -> keys
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.Multimap delegate() -> delegate
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    java.util.Collection get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    void clear() -> clear
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Collection entries() -> entries
    java.util.Map asMap() -> asMap
    com.google.common.collect.Multiset keys() -> keys
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedMultiset -> com.google.common.collect.Synchronized$SynchronizedMultiset:
    java.util.Set elementSet -> elementSet
    java.util.Set entrySet -> entrySet
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.Multiset delegate() -> delegate
    int count(java.lang.Object) -> count
    int add(java.lang.Object,int) -> add
    int remove(java.lang.Object,int) -> remove
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    java.util.Set elementSet() -> elementSet
    java.util.Set entrySet() -> entrySet
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedObject -> com.google.common.collect.Synchronized$SynchronizedObject:
    java.lang.Object delegate -> delegate
    java.lang.Object mutex -> mutex
    long serialVersionUID -> serialVersionUID
    java.lang.Object delegate() -> delegate
    java.lang.String toString() -> toString
    void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.Synchronized$SynchronizedRandomAccessList -> com.google.common.collect.Synchronized$SynchronizedRandomAccessList:
    long serialVersionUID -> serialVersionUID
com.google.common.collect.Synchronized$SynchronizedSet -> com.google.common.collect.Synchronized$SynchronizedSet:
    long serialVersionUID -> serialVersionUID
    java.util.Set delegate() -> delegate
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedSetMultimap -> com.google.common.collect.Synchronized$SynchronizedSetMultimap:
    java.util.Set entrySet -> entrySet
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.SetMultimap delegate() -> delegate
    java.util.Set get(java.lang.Object) -> get
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set entries() -> entries
    java.util.Collection entries() -> entries
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection get(java.lang.Object) -> get
    com.google.common.collect.Multimap delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedSortedMap -> com.google.common.collect.Synchronized$SynchronizedSortedMap:
    long serialVersionUID -> serialVersionUID
    java.util.SortedMap delegate() -> delegate
    java.util.Comparator comparator() -> comparator
    java.lang.Object firstKey() -> firstKey
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.lang.Object lastKey() -> lastKey
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.Map delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedSortedSet -> com.google.common.collect.Synchronized$SynchronizedSortedSet:
    long serialVersionUID -> serialVersionUID
    java.util.SortedSet delegate() -> delegate
    java.util.Comparator comparator() -> comparator
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    java.lang.Object first() -> first
    java.lang.Object last() -> last
    java.util.Set delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap -> com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.SortedSetMultimap delegate() -> delegate
    java.util.SortedSet get(java.lang.Object) -> get
    java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Comparator valueComparator() -> valueComparator
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set get(java.lang.Object) -> get
    com.google.common.collect.SetMultimap delegate() -> delegate
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    com.google.common.collect.Multimap delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Table -> com.google.common.collect.Table:
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    boolean containsRow(java.lang.Object) -> containsRow
    boolean containsColumn(java.lang.Object) -> containsColumn
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void clear() -> clear
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    void putAll(com.google.common.collect.Table) -> putAll
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Map row(java.lang.Object) -> row
    java.util.Map column(java.lang.Object) -> column
    java.util.Set cellSet() -> cellSet
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Collection values() -> values
    java.util.Map rowMap() -> rowMap
    java.util.Map columnMap() -> columnMap
com.google.common.collect.Table$Cell -> com.google.common.collect.Table$Cell:
    java.lang.Object getRowKey() -> getRowKey
    java.lang.Object getColumnKey() -> getColumnKey
    java.lang.Object getValue() -> getValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.Tables -> com.google.common.collect.Tables:
    com.google.common.collect.Table$Cell immutableCell(java.lang.Object,java.lang.Object,java.lang.Object) -> immutableCell
    com.google.common.collect.Table transpose(com.google.common.collect.Table) -> transpose
com.google.common.collect.Tables$AbstractCell -> com.google.common.collect.Tables$AbstractCell:
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.Tables$ImmutableCell -> com.google.common.collect.Tables$ImmutableCell:
    java.lang.Object rowKey -> rowKey
    java.lang.Object columnKey -> columnKey
    java.lang.Object value -> value
    long serialVersionUID -> serialVersionUID
    java.lang.Object getRowKey() -> getRowKey
    java.lang.Object getColumnKey() -> getColumnKey
    java.lang.Object getValue() -> getValue
com.google.common.collect.Tables$TransposeTable -> com.google.common.collect.Tables$TransposeTable:
    com.google.common.collect.Table original -> original
    com.google.common.base.Function TRANSPOSE_CELL -> TRANSPOSE_CELL
    com.google.common.collect.Tables$TransposeTable$CellSet cellSet -> cellSet
    void clear() -> clear
    java.util.Map column(java.lang.Object) -> column
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Map columnMap() -> columnMap
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    boolean containsColumn(java.lang.Object) -> containsColumn
    boolean containsRow(java.lang.Object) -> containsRow
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    void putAll(com.google.common.collect.Table) -> putAll
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Map row(java.lang.Object) -> row
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Map rowMap() -> rowMap
    int size() -> size
    java.util.Collection values() -> values
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.util.Set cellSet() -> cellSet
    com.google.common.base.Function access$000() -> access$000
com.google.common.collect.Tables$TransposeTable$1 -> com.google.common.collect.Tables$TransposeTable$1:
    com.google.common.collect.Table$Cell apply(com.google.common.collect.Table$Cell) -> apply
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Tables$TransposeTable$CellSet -> com.google.common.collect.Tables$TransposeTable$CellSet:
    com.google.common.collect.Tables$TransposeTable this$0 -> this$0
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.TransformedImmutableList -> com.google.common.collect.TransformedImmutableList:
    com.google.common.collect.ImmutableList backingList -> backingList
    java.lang.Object transform(java.lang.Object) -> transform
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.lang.Object get(int) -> get
    com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    int size() -> size
    com.google.common.collect.ImmutableList subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean isPartialView() -> isPartialView
    java.util.List subList(int,int) -> subList
    java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.TransformedImmutableList$1 -> com.google.common.collect.TransformedImmutableList$1:
    com.google.common.collect.TransformedImmutableList this$0 -> this$0
    java.lang.Object get(int) -> get
com.google.common.collect.TransformedImmutableList$TransformedView -> com.google.common.collect.TransformedImmutableList$TransformedView:
    com.google.common.collect.TransformedImmutableList this$0 -> this$0
    java.lang.Object transform(java.lang.Object) -> transform
    java.util.List subList(int,int) -> subList
    java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.TreeBasedTable -> com.google.common.collect.TreeBasedTable:
    java.util.Comparator columnComparator -> columnComparator
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.TreeBasedTable create() -> create
    com.google.common.collect.TreeBasedTable create(java.util.Comparator,java.util.Comparator) -> create
    com.google.common.collect.TreeBasedTable create(com.google.common.collect.TreeBasedTable) -> create
    java.util.Comparator rowComparator() -> rowComparator
    java.util.Comparator columnComparator() -> columnComparator
    java.util.SortedSet rowKeySet() -> rowKeySet
    java.util.SortedMap rowMap() -> rowMap
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    boolean containsColumn(java.lang.Object) -> containsColumn
    boolean containsRow(java.lang.Object) -> containsRow
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    boolean equals(java.lang.Object) -> equals
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Iterator createColumnKeyIterator() -> createColumnKeyIterator
    java.util.Map rowMap() -> rowMap
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Map columnMap() -> columnMap
    java.util.Collection values() -> values
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Map column(java.lang.Object) -> column
    java.util.Map row(java.lang.Object) -> row
    java.util.Set cellSet() -> cellSet
    void putAll(com.google.common.collect.Table) -> putAll
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    void clear() -> clear
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    int size() -> size
    boolean isEmpty() -> isEmpty
com.google.common.collect.TreeBasedTable$1 -> com.google.common.collect.TreeBasedTable$1:
    com.google.common.collect.TreeBasedTable this$0 -> this$0
    java.util.Iterator apply(java.util.Map) -> apply
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.TreeBasedTable$Factory -> com.google.common.collect.TreeBasedTable$Factory:
    java.util.Comparator comparator -> comparator
    long serialVersionUID -> serialVersionUID
    java.util.TreeMap get() -> get
    java.lang.Object get() -> get
com.google.common.collect.TreeBasedTable$MergingIterator -> com.google.common.collect.TreeBasedTable$MergingIterator:
    java.util.Queue queue -> queue
    java.util.Comparator comparator -> comparator
    java.lang.Object lastValue -> lastValue
    java.lang.Object computeNext() -> computeNext
    java.util.Comparator access$000(com.google.common.collect.TreeBasedTable$MergingIterator) -> access$000
com.google.common.collect.TreeBasedTable$MergingIterator$1 -> com.google.common.collect.TreeBasedTable$MergingIterator$1:
    com.google.common.collect.TreeBasedTable$MergingIterator this$0 -> this$0
    int compare(com.google.common.collect.PeekingIterator,com.google.common.collect.PeekingIterator) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.TreeMultimap -> com.google.common.collect.TreeMultimap:
    java.util.Comparator keyComparator -> keyComparator
    java.util.Comparator valueComparator -> valueComparator
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.TreeMultimap create() -> create
    com.google.common.collect.TreeMultimap create(java.util.Comparator,java.util.Comparator) -> create
    com.google.common.collect.TreeMultimap create(com.google.common.collect.Multimap) -> create
    java.util.SortedSet createCollection() -> createCollection
    java.util.Comparator keyComparator() -> keyComparator
    java.util.Comparator valueComparator() -> valueComparator
    java.util.SortedSet keySet() -> keySet
    java.util.SortedMap asMap() -> asMap
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.util.Collection values() -> values
    java.util.Map asMap() -> asMap
    java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    java.util.SortedSet get(java.lang.Object) -> get
    java.util.Set keySet() -> keySet
    boolean equals(java.lang.Object) -> equals
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.util.Set entries() -> entries
    java.util.Set createCollection() -> createCollection
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    com.google.common.collect.Multiset keys() -> keys
    void clear() -> clear
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean containsValue(java.lang.Object) -> containsValue
    boolean containsKey(java.lang.Object) -> containsKey
    boolean isEmpty() -> isEmpty
    int size() -> size
    java.util.Collection createCollection() -> createCollection
com.google.common.collect.TreeMultiset -> com.google.common.collect.TreeMultiset:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.TreeMultiset create() -> create
    com.google.common.collect.TreeMultiset create(java.util.Comparator) -> create
    com.google.common.collect.TreeMultiset create(java.lang.Iterable) -> create
    java.util.SortedSet elementSet() -> elementSet
    int count(java.lang.Object) -> count
    java.util.Set createElementSet() -> createElementSet
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    int setCount(java.lang.Object,int) -> setCount
    int remove(java.lang.Object,int) -> remove
    int add(java.lang.Object,int) -> add
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
    int size() -> size
    java.util.Set entrySet() -> entrySet
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.util.Set elementSet() -> elementSet
    void clear() -> clear
    boolean retainAll(java.util.Collection) -> retainAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean addAll(java.util.Collection) -> addAll
    boolean setCount(java.lang.Object,int,int) -> setCount
    boolean remove(java.lang.Object) -> remove
    boolean add(java.lang.Object) -> add
    boolean isEmpty() -> isEmpty
com.google.common.collect.TreeMultiset$SortedMapBasedElementSet -> com.google.common.collect.TreeMultiset$SortedMapBasedElementSet:
    com.google.common.collect.TreeMultiset this$0 -> this$0
    java.util.SortedMap sortedMap() -> sortedMap
    java.util.Comparator comparator() -> comparator
    java.lang.Object first() -> first
    java.lang.Object last() -> last
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.UnmodifiableIterator -> com.google.common.collect.UnmodifiableIterator:
    void remove() -> remove
com.google.common.collect.UnmodifiableListIterator -> com.google.common.collect.UnmodifiableListIterator:
    void add(java.lang.Object) -> add
    void set(java.lang.Object) -> set
com.google.common.collect.UsingToStringOrdering -> com.google.common.collect.UsingToStringOrdering:
    com.google.common.collect.UsingToStringOrdering INSTANCE -> INSTANCE
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Object,java.lang.Object) -> compare
    java.lang.Object readResolve() -> readResolve
    java.lang.String toString() -> toString
com.google.common.collect.WellBehavedMap -> com.google.common.collect.WellBehavedMap:
    java.util.Map delegate -> delegate
    java.util.Set entrySet -> entrySet
    com.google.common.collect.WellBehavedMap wrap(java.util.Map) -> wrap
    java.util.Map delegate() -> delegate
    java.util.Set entrySet() -> entrySet
    java.lang.Object delegate() -> delegate
com.google.common.collect.WellBehavedMap$KeyToEntryConverter -> com.google.common.collect.WellBehavedMap$KeyToEntryConverter:
    java.util.Map map -> map
    java.util.Map$Entry apply(java.lang.Object) -> apply
    java.lang.Object invert(java.util.Map$Entry) -> invert
    java.lang.Object invert(java.lang.Object) -> invert
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.WellBehavedMap$KeyToEntryConverter$1 -> com.google.common.collect.WellBehavedMap$KeyToEntryConverter$1:
    java.lang.Object val$key -> val$key
    com.google.common.collect.WellBehavedMap$KeyToEntryConverter this$0 -> this$0
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.package-info -> com.google.common.collect.package-info:
com.google.common.io.AppendableWriter -> com.google.common.io.AppendableWriter:
    java.lang.Appendable target -> target
    boolean closed -> closed
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
    void write(int) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    java.io.Writer append(char) -> append
    java.io.Writer append(java.lang.CharSequence) -> append
    java.io.Writer append(java.lang.CharSequence,int,int) -> append
    void checkNotClosed() -> checkNotClosed
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
com.google.common.io.ByteArrayDataInput -> com.google.common.io.ByteArrayDataInput:
    void readFully(byte[]) -> readFully
    void readFully(byte[],int,int) -> readFully
    int skipBytes(int) -> skipBytes
    boolean readBoolean() -> readBoolean
    byte readByte() -> readByte
    int readUnsignedByte() -> readUnsignedByte
    short readShort() -> readShort
    int readUnsignedShort() -> readUnsignedShort
    char readChar() -> readChar
    int readInt() -> readInt
    long readLong() -> readLong
    float readFloat() -> readFloat
    double readDouble() -> readDouble
    java.lang.String readLine() -> readLine
    java.lang.String readUTF() -> readUTF
com.google.common.io.ByteArrayDataOutput -> com.google.common.io.ByteArrayDataOutput:
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void writeBoolean(boolean) -> writeBoolean
    void writeByte(int) -> writeByte
    void writeShort(int) -> writeShort
    void writeChar(int) -> writeChar
    void writeInt(int) -> writeInt
    void writeLong(long) -> writeLong
    void writeFloat(float) -> writeFloat
    void writeDouble(double) -> writeDouble
    void writeChars(java.lang.String) -> writeChars
    void writeUTF(java.lang.String) -> writeUTF
    void writeBytes(java.lang.String) -> writeBytes
    byte[] toByteArray() -> toByteArray
com.google.common.io.ByteProcessor -> com.google.common.io.ByteProcessor:
    boolean processBytes(byte[],int,int) -> processBytes
    java.lang.Object getResult() -> getResult
com.google.common.io.ByteStreams -> com.google.common.io.ByteStreams:
    int BUF_SIZE -> BUF_SIZE
    com.google.common.io.InputSupplier newInputStreamSupplier(byte[]) -> newInputStreamSupplier
    com.google.common.io.InputSupplier newInputStreamSupplier(byte[],int,int) -> newInputStreamSupplier
    void write(byte[],com.google.common.io.OutputSupplier) -> write
    long copy(com.google.common.io.InputSupplier,com.google.common.io.OutputSupplier) -> copy
    long copy(com.google.common.io.InputSupplier,java.io.OutputStream) -> copy
    long copy(java.io.InputStream,java.io.OutputStream) -> copy
    long copy(java.nio.channels.ReadableByteChannel,java.nio.channels.WritableByteChannel) -> copy
    byte[] toByteArray(java.io.InputStream) -> toByteArray
    byte[] toByteArray(com.google.common.io.InputSupplier) -> toByteArray
    com.google.common.io.ByteArrayDataInput newDataInput(byte[]) -> newDataInput
    com.google.common.io.ByteArrayDataInput newDataInput(byte[],int) -> newDataInput
    com.google.common.io.ByteArrayDataOutput newDataOutput() -> newDataOutput
    com.google.common.io.ByteArrayDataOutput newDataOutput(int) -> newDataOutput
    long length(com.google.common.io.InputSupplier) -> length
    boolean equal(com.google.common.io.InputSupplier,com.google.common.io.InputSupplier) -> equal
    void readFully(java.io.InputStream,byte[]) -> readFully
    void readFully(java.io.InputStream,byte[],int,int) -> readFully
    void skipFully(java.io.InputStream,long) -> skipFully
    java.lang.Object readBytes(com.google.common.io.InputSupplier,com.google.common.io.ByteProcessor) -> readBytes
    long getChecksum(com.google.common.io.InputSupplier,java.util.zip.Checksum) -> getChecksum
    byte[] getDigest(com.google.common.io.InputSupplier,java.security.MessageDigest) -> getDigest
    int read(java.io.InputStream,byte[],int,int) -> read
    com.google.common.io.InputSupplier slice(com.google.common.io.InputSupplier,long,long) -> slice
    com.google.common.io.InputSupplier join(java.lang.Iterable) -> join
    com.google.common.io.InputSupplier join(com.google.common.io.InputSupplier[]) -> join
com.google.common.io.ByteStreams$1 -> com.google.common.io.ByteStreams$1:
    byte[] val$b -> val$b
    int val$off -> val$off
    int val$len -> val$len
    java.io.ByteArrayInputStream getInput() -> getInput
    java.lang.Object getInput() -> getInput
com.google.common.io.ByteStreams$2 -> com.google.common.io.ByteStreams$2:
    java.util.zip.Checksum val$checksum -> val$checksum
    boolean processBytes(byte[],int,int) -> processBytes
    java.lang.Long getResult() -> getResult
    java.lang.Object getResult() -> getResult
com.google.common.io.ByteStreams$3 -> com.google.common.io.ByteStreams$3:
    java.security.MessageDigest val$md -> val$md
    boolean processBytes(byte[],int,int) -> processBytes
    byte[] getResult() -> getResult
    java.lang.Object getResult() -> getResult
com.google.common.io.ByteStreams$4 -> com.google.common.io.ByteStreams$4:
    com.google.common.io.InputSupplier val$supplier -> val$supplier
    long val$offset -> val$offset
    long val$length -> val$length
    java.io.InputStream getInput() -> getInput
    java.lang.Object getInput() -> getInput
com.google.common.io.ByteStreams$5 -> com.google.common.io.ByteStreams$5:
    java.lang.Iterable val$suppliers -> val$suppliers
    java.io.InputStream getInput() -> getInput
    java.lang.Object getInput() -> getInput
com.google.common.io.ByteStreams$ByteArrayDataInputStream -> com.google.common.io.ByteStreams$ByteArrayDataInputStream:
    java.io.DataInput input -> input
    void readFully(byte[]) -> readFully
    void readFully(byte[],int,int) -> readFully
    int skipBytes(int) -> skipBytes
    boolean readBoolean() -> readBoolean
    byte readByte() -> readByte
    int readUnsignedByte() -> readUnsignedByte
    short readShort() -> readShort
    int readUnsignedShort() -> readUnsignedShort
    char readChar() -> readChar
    int readInt() -> readInt
    long readLong() -> readLong
    float readFloat() -> readFloat
    double readDouble() -> readDouble
    java.lang.String readLine() -> readLine
    java.lang.String readUTF() -> readUTF
com.google.common.io.ByteStreams$ByteArrayDataOutputStream -> com.google.common.io.ByteStreams$ByteArrayDataOutputStream:
    java.io.DataOutput output -> output
    java.io.ByteArrayOutputStream byteArrayOutputSteam -> byteArrayOutputSteam
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void writeBoolean(boolean) -> writeBoolean
    void writeByte(int) -> writeByte
    void writeBytes(java.lang.String) -> writeBytes
    void writeChar(int) -> writeChar
    void writeChars(java.lang.String) -> writeChars
    void writeDouble(double) -> writeDouble
    void writeFloat(float) -> writeFloat
    void writeInt(int) -> writeInt
    void writeLong(long) -> writeLong
    void writeShort(int) -> writeShort
    void writeUTF(java.lang.String) -> writeUTF
    byte[] toByteArray() -> toByteArray
com.google.common.io.CharStreams -> com.google.common.io.CharStreams:
    int BUF_SIZE -> BUF_SIZE
    com.google.common.io.InputSupplier newReaderSupplier(java.lang.String) -> newReaderSupplier
    com.google.common.io.InputSupplier newReaderSupplier(com.google.common.io.InputSupplier,java.nio.charset.Charset) -> newReaderSupplier
    com.google.common.io.OutputSupplier newWriterSupplier(com.google.common.io.OutputSupplier,java.nio.charset.Charset) -> newWriterSupplier
    void write(java.lang.CharSequence,com.google.common.io.OutputSupplier) -> write
    long copy(com.google.common.io.InputSupplier,com.google.common.io.OutputSupplier) -> copy
    long copy(com.google.common.io.InputSupplier,java.lang.Appendable) -> copy
    long copy(java.lang.Readable,java.lang.Appendable) -> copy
    java.lang.String toString(java.lang.Readable) -> toString
    java.lang.String toString(com.google.common.io.InputSupplier) -> toString
    java.lang.StringBuilder toStringBuilder(java.lang.Readable) -> toStringBuilder
    java.lang.StringBuilder toStringBuilder(com.google.common.io.InputSupplier) -> toStringBuilder
    java.lang.String readFirstLine(com.google.common.io.InputSupplier) -> readFirstLine
    java.util.List readLines(com.google.common.io.InputSupplier) -> readLines
    java.util.List readLines(java.lang.Readable) -> readLines
    java.lang.Object readLines(com.google.common.io.InputSupplier,com.google.common.io.LineProcessor) -> readLines
    com.google.common.io.InputSupplier join(java.lang.Iterable) -> join
    com.google.common.io.InputSupplier join(com.google.common.io.InputSupplier[]) -> join
    void skipFully(java.io.Reader,long) -> skipFully
    java.io.Writer asWriter(java.lang.Appendable) -> asWriter
com.google.common.io.CharStreams$1 -> com.google.common.io.CharStreams$1:
    java.lang.String val$value -> val$value
    java.io.StringReader getInput() -> getInput
    java.lang.Object getInput() -> getInput
com.google.common.io.CharStreams$2 -> com.google.common.io.CharStreams$2:
    com.google.common.io.InputSupplier val$in -> val$in
    java.nio.charset.Charset val$charset -> val$charset
    java.io.InputStreamReader getInput() -> getInput
    java.lang.Object getInput() -> getInput
com.google.common.io.CharStreams$3 -> com.google.common.io.CharStreams$3:
    com.google.common.io.OutputSupplier val$out -> val$out
    java.nio.charset.Charset val$charset -> val$charset
    java.io.OutputStreamWriter getOutput() -> getOutput
    java.lang.Object getOutput() -> getOutput
com.google.common.io.CharStreams$4 -> com.google.common.io.CharStreams$4:
    java.lang.Iterable val$suppliers -> val$suppliers
    java.io.Reader getInput() -> getInput
    java.lang.Object getInput() -> getInput
com.google.common.io.Closeables -> com.google.common.io.Closeables:
    java.util.logging.Logger logger -> logger
    void close(java.io.Closeable,boolean) -> close
    void closeQuietly(java.io.Closeable) -> closeQuietly
com.google.common.io.CountingInputStream -> com.google.common.io.CountingInputStream:
    long count -> count
    long mark -> mark
    long getCount() -> getCount
    int read() -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    void mark(int) -> mark
    void reset() -> reset
com.google.common.io.CountingOutputStream -> com.google.common.io.CountingOutputStream:
    long count -> count
    long getCount() -> getCount
    void write(byte[],int,int) -> write
    void write(int) -> write
com.google.common.io.FileBackedOutputStream -> com.google.common.io.FileBackedOutputStream:
    int fileThreshold -> fileThreshold
    boolean resetOnFinalize -> resetOnFinalize
    com.google.common.io.InputSupplier supplier -> supplier
    java.io.OutputStream out -> out
    com.google.common.io.FileBackedOutputStream$MemoryOutput memory -> memory
    java.io.File file -> file
    java.io.File getFile() -> getFile
    com.google.common.io.InputSupplier getSupplier() -> getSupplier
    java.io.InputStream openStream() -> openStream
    void reset() -> reset
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
    void update(int) -> update
    java.io.InputStream access$100(com.google.common.io.FileBackedOutputStream) -> access$100
com.google.common.io.FileBackedOutputStream$1 -> com.google.common.io.FileBackedOutputStream$1:
    com.google.common.io.FileBackedOutputStream this$0 -> this$0
    java.io.InputStream getInput() -> getInput
    void finalize() -> finalize
    java.lang.Object getInput() -> getInput
com.google.common.io.FileBackedOutputStream$2 -> com.google.common.io.FileBackedOutputStream$2:
    com.google.common.io.FileBackedOutputStream this$0 -> this$0
    java.io.InputStream getInput() -> getInput
    java.lang.Object getInput() -> getInput
com.google.common.io.FileBackedOutputStream$MemoryOutput -> com.google.common.io.FileBackedOutputStream$MemoryOutput:
    byte[] getBuffer() -> getBuffer
    int getCount() -> getCount
com.google.common.io.Files -> com.google.common.io.Files:
    int TEMP_DIR_ATTEMPTS -> TEMP_DIR_ATTEMPTS
    java.io.BufferedReader newReader(java.io.File,java.nio.charset.Charset) -> newReader
    java.io.BufferedWriter newWriter(java.io.File,java.nio.charset.Charset) -> newWriter
    com.google.common.io.InputSupplier newInputStreamSupplier(java.io.File) -> newInputStreamSupplier
    com.google.common.io.OutputSupplier newOutputStreamSupplier(java.io.File) -> newOutputStreamSupplier
    com.google.common.io.OutputSupplier newOutputStreamSupplier(java.io.File,boolean) -> newOutputStreamSupplier
    com.google.common.io.InputSupplier newReaderSupplier(java.io.File,java.nio.charset.Charset) -> newReaderSupplier
    com.google.common.io.OutputSupplier newWriterSupplier(java.io.File,java.nio.charset.Charset) -> newWriterSupplier
    com.google.common.io.OutputSupplier newWriterSupplier(java.io.File,java.nio.charset.Charset,boolean) -> newWriterSupplier
    byte[] toByteArray(java.io.File) -> toByteArray
    java.lang.String toString(java.io.File,java.nio.charset.Charset) -> toString
    void copy(com.google.common.io.InputSupplier,java.io.File) -> copy
    void write(byte[],java.io.File) -> write
    void copy(java.io.File,com.google.common.io.OutputSupplier) -> copy
    void copy(java.io.File,java.io.OutputStream) -> copy
    void copy(java.io.File,java.io.File) -> copy
    void copy(com.google.common.io.InputSupplier,java.io.File,java.nio.charset.Charset) -> copy
    void write(java.lang.CharSequence,java.io.File,java.nio.charset.Charset) -> write
    void append(java.lang.CharSequence,java.io.File,java.nio.charset.Charset) -> append
    void write(java.lang.CharSequence,java.io.File,java.nio.charset.Charset,boolean) -> write
    void copy(java.io.File,java.nio.charset.Charset,com.google.common.io.OutputSupplier) -> copy
    void copy(java.io.File,java.nio.charset.Charset,java.lang.Appendable) -> copy
    boolean equal(java.io.File,java.io.File) -> equal
    java.io.File createTempDir() -> createTempDir
    void touch(java.io.File) -> touch
    void createParentDirs(java.io.File) -> createParentDirs
    void move(java.io.File,java.io.File) -> move
    void deleteDirectoryContents(java.io.File) -> deleteDirectoryContents
    void deleteRecursively(java.io.File) -> deleteRecursively
    java.lang.String readFirstLine(java.io.File,java.nio.charset.Charset) -> readFirstLine
    java.util.List readLines(java.io.File,java.nio.charset.Charset) -> readLines
    java.lang.Object readLines(java.io.File,java.nio.charset.Charset,com.google.common.io.LineProcessor) -> readLines
    java.lang.Object readBytes(java.io.File,com.google.common.io.ByteProcessor) -> readBytes
    long getChecksum(java.io.File,java.util.zip.Checksum) -> getChecksum
    byte[] getDigest(java.io.File,java.security.MessageDigest) -> getDigest
    java.nio.MappedByteBuffer map(java.io.File) -> map
    java.nio.MappedByteBuffer map(java.io.File,java.nio.channels.FileChannel$MapMode) -> map
    java.nio.MappedByteBuffer map(java.io.File,java.nio.channels.FileChannel$MapMode,long) -> map
    java.nio.MappedByteBuffer map(java.io.RandomAccessFile,java.nio.channels.FileChannel$MapMode,long) -> map
com.google.common.io.Files$1 -> com.google.common.io.Files$1:
    java.io.File val$file -> val$file
    java.io.FileInputStream getInput() -> getInput
    java.lang.Object getInput() -> getInput
com.google.common.io.Files$2 -> com.google.common.io.Files$2:
    java.io.File val$file -> val$file
    boolean val$append -> val$append
    java.io.FileOutputStream getOutput() -> getOutput
    java.lang.Object getOutput() -> getOutput
com.google.common.io.Flushables -> com.google.common.io.Flushables:
    java.util.logging.Logger logger -> logger
    void flush(java.io.Flushable,boolean) -> flush
    void flushQuietly(java.io.Flushable) -> flushQuietly
com.google.common.io.InputSupplier -> com.google.common.io.InputSupplier:
    java.lang.Object getInput() -> getInput
com.google.common.io.LimitInputStream -> com.google.common.io.LimitInputStream:
    long left -> left
    long mark -> mark
    int available() -> available
    void mark(int) -> mark
    int read() -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
com.google.common.io.LineBuffer -> com.google.common.io.LineBuffer:
    java.lang.StringBuilder line -> line
    boolean sawReturn -> sawReturn
    void add(char[],int,int) -> add
    boolean finishLine(boolean) -> finishLine
    void finish() -> finish
    void handleLine(java.lang.String,java.lang.String) -> handleLine
com.google.common.io.LineProcessor -> com.google.common.io.LineProcessor:
    boolean processLine(java.lang.String) -> processLine
    java.lang.Object getResult() -> getResult
com.google.common.io.LineReader -> com.google.common.io.LineReader:
    java.lang.Readable readable -> readable
    java.io.Reader reader -> reader
    char[] buf -> buf
    java.nio.CharBuffer cbuf -> cbuf
    java.util.Queue lines -> lines
    com.google.common.io.LineBuffer lineBuf -> lineBuf
    java.lang.String readLine() -> readLine
    java.util.Queue access$000(com.google.common.io.LineReader) -> access$000
com.google.common.io.LineReader$1 -> com.google.common.io.LineReader$1:
    com.google.common.io.LineReader this$0 -> this$0
    void handleLine(java.lang.String,java.lang.String) -> handleLine
com.google.common.io.LittleEndianDataInputStream -> com.google.common.io.LittleEndianDataInputStream:
    java.lang.String readLine() -> readLine
    void readFully(byte[]) -> readFully
    void readFully(byte[],int,int) -> readFully
    int skipBytes(int) -> skipBytes
    int readUnsignedByte() -> readUnsignedByte
    int readUnsignedShort() -> readUnsignedShort
    int readInt() -> readInt
    long readLong() -> readLong
    float readFloat() -> readFloat
    double readDouble() -> readDouble
    java.lang.String readUTF() -> readUTF
    short readShort() -> readShort
    char readChar() -> readChar
    byte readByte() -> readByte
    boolean readBoolean() -> readBoolean
    byte readAndCheckByte() -> readAndCheckByte
com.google.common.io.LittleEndianDataOutputStream -> com.google.common.io.LittleEndianDataOutputStream:
    void write(byte[],int,int) -> write
    void writeBoolean(boolean) -> writeBoolean
    void writeByte(int) -> writeByte
    void writeBytes(java.lang.String) -> writeBytes
    void writeChar(int) -> writeChar
    void writeChars(java.lang.String) -> writeChars
    void writeDouble(double) -> writeDouble
    void writeFloat(float) -> writeFloat
    void writeInt(int) -> writeInt
    void writeLong(long) -> writeLong
    void writeShort(int) -> writeShort
    void writeUTF(java.lang.String) -> writeUTF
com.google.common.io.MultiInputStream -> com.google.common.io.MultiInputStream:
    java.util.Iterator it -> it
    java.io.InputStream in -> in
    void close() -> close
    void advance() -> advance
    int available() -> available
    boolean markSupported() -> markSupported
    int read() -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
com.google.common.io.MultiReader -> com.google.common.io.MultiReader:
    java.util.Iterator it -> it
    java.io.Reader current -> current
    void advance() -> advance
    int read(char[],int,int) -> read
    long skip(long) -> skip
    boolean ready() -> ready
    void close() -> close
com.google.common.io.NullOutputStream -> com.google.common.io.NullOutputStream:
    void write(int) -> write
    void write(byte[],int,int) -> write
com.google.common.io.OutputSupplier -> com.google.common.io.OutputSupplier:
    java.lang.Object getOutput() -> getOutput
com.google.common.io.PatternFilenameFilter -> com.google.common.io.PatternFilenameFilter:
    java.util.regex.Pattern pattern -> pattern
    boolean accept(java.io.File,java.lang.String) -> accept
com.google.common.io.Resources -> com.google.common.io.Resources:
    com.google.common.io.InputSupplier newInputStreamSupplier(java.net.URL) -> newInputStreamSupplier
    com.google.common.io.InputSupplier newReaderSupplier(java.net.URL,java.nio.charset.Charset) -> newReaderSupplier
    byte[] toByteArray(java.net.URL) -> toByteArray
    java.lang.String toString(java.net.URL,java.nio.charset.Charset) -> toString
    java.lang.Object readLines(java.net.URL,java.nio.charset.Charset,com.google.common.io.LineProcessor) -> readLines
    java.util.List readLines(java.net.URL,java.nio.charset.Charset) -> readLines
    void copy(java.net.URL,java.io.OutputStream) -> copy
    java.net.URL getResource(java.lang.String) -> getResource
    java.net.URL getResource(java.lang.Class,java.lang.String) -> getResource
com.google.common.io.Resources$1 -> com.google.common.io.Resources$1:
    java.net.URL val$url -> val$url
    java.io.InputStream getInput() -> getInput
    java.lang.Object getInput() -> getInput
com.google.common.io.package-info -> com.google.common.io.package-info:
com.google.common.net.HostSpecifier -> com.google.common.net.HostSpecifier:
    java.lang.String canonicalForm -> canonicalForm
    com.google.common.net.HostSpecifier fromValid(java.lang.String) -> fromValid
    com.google.common.net.HostSpecifier from(java.lang.String) -> from
    boolean isValid(java.lang.String) -> isValid
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.net.InetAddresses -> com.google.common.net.InetAddresses:
    int IPV4_PART_COUNT -> IPV4_PART_COUNT
    int IPV6_PART_COUNT -> IPV6_PART_COUNT
    java.net.Inet4Address LOOPBACK4 -> LOOPBACK4
    java.net.Inet4Address ANY4 -> ANY4
    java.net.Inet4Address getInet4Address(byte[]) -> getInet4Address
    java.net.InetAddress forString(java.lang.String) -> forString
    boolean isInetAddress(java.lang.String) -> isInetAddress
    byte[] textToNumericFormatV4(java.lang.String) -> textToNumericFormatV4
    byte[] textToNumericFormatV6(java.lang.String) -> textToNumericFormatV6
    java.lang.String convertDottedQuadToHex(java.lang.String) -> convertDottedQuadToHex
    java.lang.String toUriString(java.net.InetAddress) -> toUriString
    java.net.InetAddress forUriString(java.lang.String) -> forUriString
    boolean isUriInetAddress(java.lang.String) -> isUriInetAddress
    boolean isCompatIPv4Address(java.net.Inet6Address) -> isCompatIPv4Address
    java.net.Inet4Address getCompatIPv4Address(java.net.Inet6Address) -> getCompatIPv4Address
    boolean is6to4Address(java.net.Inet6Address) -> is6to4Address
    java.net.Inet4Address get6to4IPv4Address(java.net.Inet6Address) -> get6to4IPv4Address
    boolean isTeredoAddress(java.net.Inet6Address) -> isTeredoAddress
    com.google.common.net.InetAddresses$TeredoInfo getTeredoInfo(java.net.Inet6Address) -> getTeredoInfo
    boolean isIsatapAddress(java.net.Inet6Address) -> isIsatapAddress
    java.net.Inet4Address getIsatapIPv4Address(java.net.Inet6Address) -> getIsatapIPv4Address
    boolean hasEmbeddedIPv4ClientAddress(java.net.Inet6Address) -> hasEmbeddedIPv4ClientAddress
    java.net.Inet4Address getEmbeddedIPv4ClientAddress(java.net.Inet6Address) -> getEmbeddedIPv4ClientAddress
    java.net.Inet4Address getCoercedIPv4Address(java.net.InetAddress) -> getCoercedIPv4Address
    int hash64To32(long) -> hash64To32
    int coerceToInteger(java.net.InetAddress) -> coerceToInteger
    java.net.Inet4Address fromInteger(int) -> fromInteger
    java.net.InetAddress fromLittleEndianByteArray(byte[]) -> fromLittleEndianByteArray
    byte[] copyOfRange(byte[],int,int) -> copyOfRange
    java.net.Inet4Address access$000() -> access$000
com.google.common.net.InetAddresses$TeredoInfo -> com.google.common.net.InetAddresses$TeredoInfo:
    java.net.Inet4Address server -> server
    java.net.Inet4Address client -> client
    int port -> port
    int flags -> flags
    java.net.Inet4Address getServer() -> getServer
    java.net.Inet4Address getClient() -> getClient
    int getPort() -> getPort
    int getFlags() -> getFlags
com.google.common.net.InternetDomainName -> com.google.common.net.InternetDomainName:
    com.google.common.base.CharMatcher DOTS_MATCHER -> DOTS_MATCHER
    com.google.common.base.Splitter DOT_SPLITTER -> DOT_SPLITTER
    com.google.common.base.Joiner DOT_JOINER -> DOT_JOINER
    int NO_PUBLIC_SUFFIX_FOUND -> NO_PUBLIC_SUFFIX_FOUND
    java.lang.String DOT_REGEX -> DOT_REGEX
    int MAX_PARTS -> MAX_PARTS
    int MAX_LENGTH -> MAX_LENGTH
    int MAX_DOMAIN_PART_LENGTH -> MAX_DOMAIN_PART_LENGTH
    java.lang.String name -> name
    com.google.common.collect.ImmutableList parts -> parts
    int publicSuffixIndex -> publicSuffixIndex
    com.google.common.base.CharMatcher DASH_MATCHER -> DASH_MATCHER
    com.google.common.base.CharMatcher PART_CHAR_MATCHER -> PART_CHAR_MATCHER
    int findPublicSuffix() -> findPublicSuffix
    com.google.common.net.InternetDomainName fromLenient(java.lang.String) -> fromLenient
    boolean validateSyntax(java.util.List) -> validateSyntax
    boolean validatePart(java.lang.String,boolean) -> validatePart
    java.lang.String name() -> name
    com.google.common.collect.ImmutableList parts() -> parts
    boolean isPublicSuffix() -> isPublicSuffix
    boolean hasPublicSuffix() -> hasPublicSuffix
    com.google.common.net.InternetDomainName publicSuffix() -> publicSuffix
    boolean isUnderPublicSuffix() -> isUnderPublicSuffix
    boolean isTopPrivateDomain() -> isTopPrivateDomain
    com.google.common.net.InternetDomainName topPrivateDomain() -> topPrivateDomain
    boolean hasParent() -> hasParent
    com.google.common.net.InternetDomainName parent() -> parent
    com.google.common.net.InternetDomainName ancestor(int) -> ancestor
    com.google.common.net.InternetDomainName child(java.lang.String) -> child
    com.google.common.net.InternetDomainName fromInternal(java.lang.String) -> fromInternal
    boolean isValidLenient(java.lang.String) -> isValidLenient
    boolean matchesWildcardPublicSuffix(java.lang.String) -> matchesWildcardPublicSuffix
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.net.TldPatterns -> com.google.common.net.TldPatterns:
    java.util.Set EXACT -> EXACT
    java.util.Set UNDER -> UNDER
    java.util.Set EXCLUDED -> EXCLUDED
com.google.common.net.package-info -> com.google.common.net.package-info:
com.google.common.primitives.Booleans -> com.google.common.primitives.Booleans:
    int hashCode(boolean) -> hashCode
    int compare(boolean,boolean) -> compare
    boolean contains(boolean[],boolean) -> contains
    int indexOf(boolean[],boolean) -> indexOf
    int indexOf(boolean[],boolean,int,int) -> indexOf
    int indexOf(boolean[],boolean[]) -> indexOf
    int lastIndexOf(boolean[],boolean) -> lastIndexOf
    int lastIndexOf(boolean[],boolean,int,int) -> lastIndexOf
    boolean[] concat(boolean[][]) -> concat
    boolean[] ensureCapacity(boolean[],int,int) -> ensureCapacity
    boolean[] copyOf(boolean[],int) -> copyOf
    java.lang.String join(java.lang.String,boolean[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    boolean[] toArray(java.util.Collection) -> toArray
    java.util.List asList(boolean[]) -> asList
    int access$000(boolean[],boolean,int,int) -> access$000
    int access$100(boolean[],boolean,int,int) -> access$100
com.google.common.primitives.Booleans$BooleanArrayAsList -> com.google.common.primitives.Booleans$BooleanArrayAsList:
    boolean[] array -> array
    int start -> start
    int end -> end
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.lang.Boolean get(int) -> get
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.lang.Boolean set(int,java.lang.Boolean) -> set
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean[] toBooleanArray() -> toBooleanArray
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
com.google.common.primitives.Booleans$LexicographicalComparator -> com.google.common.primitives.Booleans$LexicographicalComparator:
    com.google.common.primitives.Booleans$LexicographicalComparator INSTANCE -> INSTANCE
    com.google.common.primitives.Booleans$LexicographicalComparator[] $VALUES -> $VALUES
    com.google.common.primitives.Booleans$LexicographicalComparator[] values() -> values
    com.google.common.primitives.Booleans$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(boolean[],boolean[]) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.Bytes -> com.google.common.primitives.Bytes:
    int hashCode(byte) -> hashCode
    boolean contains(byte[],byte) -> contains
    int indexOf(byte[],byte) -> indexOf
    int indexOf(byte[],byte,int,int) -> indexOf
    int indexOf(byte[],byte[]) -> indexOf
    int lastIndexOf(byte[],byte) -> lastIndexOf
    int lastIndexOf(byte[],byte,int,int) -> lastIndexOf
    byte[] concat(byte[][]) -> concat
    byte[] ensureCapacity(byte[],int,int) -> ensureCapacity
    byte[] copyOf(byte[],int) -> copyOf
    byte[] toArray(java.util.Collection) -> toArray
    java.util.List asList(byte[]) -> asList
    int access$000(byte[],byte,int,int) -> access$000
    int access$100(byte[],byte,int,int) -> access$100
com.google.common.primitives.Bytes$ByteArrayAsList -> com.google.common.primitives.Bytes$ByteArrayAsList:
    byte[] array -> array
    int start -> start
    int end -> end
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.lang.Byte get(int) -> get
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.lang.Byte set(int,java.lang.Byte) -> set
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    byte[] toByteArray() -> toByteArray
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
com.google.common.primitives.Chars -> com.google.common.primitives.Chars:
    int BYTES -> BYTES
    int hashCode(char) -> hashCode
    char checkedCast(long) -> checkedCast
    char saturatedCast(long) -> saturatedCast
    int compare(char,char) -> compare
    boolean contains(char[],char) -> contains
    int indexOf(char[],char) -> indexOf
    int indexOf(char[],char,int,int) -> indexOf
    int indexOf(char[],char[]) -> indexOf
    int lastIndexOf(char[],char) -> lastIndexOf
    int lastIndexOf(char[],char,int,int) -> lastIndexOf
    char min(char[]) -> min
    char max(char[]) -> max
    char[] concat(char[][]) -> concat
    byte[] toByteArray(char) -> toByteArray
    char fromByteArray(byte[]) -> fromByteArray
    char fromBytes(byte,byte) -> fromBytes
    char[] ensureCapacity(char[],int,int) -> ensureCapacity
    char[] copyOf(char[],int) -> copyOf
    java.lang.String join(java.lang.String,char[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    char[] toArray(java.util.Collection) -> toArray
    java.util.List asList(char[]) -> asList
    int access$000(char[],char,int,int) -> access$000
    int access$100(char[],char,int,int) -> access$100
com.google.common.primitives.Chars$CharArrayAsList -> com.google.common.primitives.Chars$CharArrayAsList:
    char[] array -> array
    int start -> start
    int end -> end
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.lang.Character get(int) -> get
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.lang.Character set(int,java.lang.Character) -> set
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    char[] toCharArray() -> toCharArray
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
com.google.common.primitives.Chars$LexicographicalComparator -> com.google.common.primitives.Chars$LexicographicalComparator:
    com.google.common.primitives.Chars$LexicographicalComparator INSTANCE -> INSTANCE
    com.google.common.primitives.Chars$LexicographicalComparator[] $VALUES -> $VALUES
    com.google.common.primitives.Chars$LexicographicalComparator[] values() -> values
    com.google.common.primitives.Chars$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(char[],char[]) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.Doubles -> com.google.common.primitives.Doubles:
    int hashCode(double) -> hashCode
    int compare(double,double) -> compare
    boolean contains(double[],double) -> contains
    int indexOf(double[],double) -> indexOf
    int indexOf(double[],double,int,int) -> indexOf
    int indexOf(double[],double[]) -> indexOf
    int lastIndexOf(double[],double) -> lastIndexOf
    int lastIndexOf(double[],double,int,int) -> lastIndexOf
    double min(double[]) -> min
    double max(double[]) -> max
    double[] concat(double[][]) -> concat
    double[] ensureCapacity(double[],int,int) -> ensureCapacity
    double[] copyOf(double[],int) -> copyOf
    java.lang.String join(java.lang.String,double[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    double[] toArray(java.util.Collection) -> toArray
    java.util.List asList(double[]) -> asList
    int access$000(double[],double,int,int) -> access$000
    int access$100(double[],double,int,int) -> access$100
com.google.common.primitives.Doubles$DoubleArrayAsList -> com.google.common.primitives.Doubles$DoubleArrayAsList:
    double[] array -> array
    int start -> start
    int end -> end
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.lang.Double get(int) -> get
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.lang.Double set(int,java.lang.Double) -> set
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    double[] toDoubleArray() -> toDoubleArray
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
com.google.common.primitives.Doubles$LexicographicalComparator -> com.google.common.primitives.Doubles$LexicographicalComparator:
    com.google.common.primitives.Doubles$LexicographicalComparator INSTANCE -> INSTANCE
    com.google.common.primitives.Doubles$LexicographicalComparator[] $VALUES -> $VALUES
    com.google.common.primitives.Doubles$LexicographicalComparator[] values() -> values
    com.google.common.primitives.Doubles$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(double[],double[]) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.Floats -> com.google.common.primitives.Floats:
    int hashCode(float) -> hashCode
    int compare(float,float) -> compare
    boolean contains(float[],float) -> contains
    int indexOf(float[],float) -> indexOf
    int indexOf(float[],float,int,int) -> indexOf
    int indexOf(float[],float[]) -> indexOf
    int lastIndexOf(float[],float) -> lastIndexOf
    int lastIndexOf(float[],float,int,int) -> lastIndexOf
    float min(float[]) -> min
    float max(float[]) -> max
    float[] concat(float[][]) -> concat
    float[] ensureCapacity(float[],int,int) -> ensureCapacity
    float[] copyOf(float[],int) -> copyOf
    java.lang.String join(java.lang.String,float[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    float[] toArray(java.util.Collection) -> toArray
    java.util.List asList(float[]) -> asList
    int access$000(float[],float,int,int) -> access$000
    int access$100(float[],float,int,int) -> access$100
com.google.common.primitives.Floats$FloatArrayAsList -> com.google.common.primitives.Floats$FloatArrayAsList:
    float[] array -> array
    int start -> start
    int end -> end
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.lang.Float get(int) -> get
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.lang.Float set(int,java.lang.Float) -> set
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    float[] toFloatArray() -> toFloatArray
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
com.google.common.primitives.Floats$LexicographicalComparator -> com.google.common.primitives.Floats$LexicographicalComparator:
    com.google.common.primitives.Floats$LexicographicalComparator INSTANCE -> INSTANCE
    com.google.common.primitives.Floats$LexicographicalComparator[] $VALUES -> $VALUES
    com.google.common.primitives.Floats$LexicographicalComparator[] values() -> values
    com.google.common.primitives.Floats$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(float[],float[]) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.Ints -> com.google.common.primitives.Ints:
    int BYTES -> BYTES
    int hashCode(int) -> hashCode
    int checkedCast(long) -> checkedCast
    int saturatedCast(long) -> saturatedCast
    int compare(int,int) -> compare
    boolean contains(int[],int) -> contains
    int indexOf(int[],int) -> indexOf
    int indexOf(int[],int,int,int) -> indexOf
    int indexOf(int[],int[]) -> indexOf
    int lastIndexOf(int[],int) -> lastIndexOf
    int lastIndexOf(int[],int,int,int) -> lastIndexOf
    int min(int[]) -> min
    int max(int[]) -> max
    int[] concat(int[][]) -> concat
    byte[] toByteArray(int) -> toByteArray
    int fromByteArray(byte[]) -> fromByteArray
    int fromBytes(byte,byte,byte,byte) -> fromBytes
    int[] ensureCapacity(int[],int,int) -> ensureCapacity
    int[] copyOf(int[],int) -> copyOf
    java.lang.String join(java.lang.String,int[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    int[] toArray(java.util.Collection) -> toArray
    java.util.List asList(int[]) -> asList
    int access$000(int[],int,int,int) -> access$000
    int access$100(int[],int,int,int) -> access$100
com.google.common.primitives.Ints$IntArrayAsList -> com.google.common.primitives.Ints$IntArrayAsList:
    int[] array -> array
    int start -> start
    int end -> end
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.lang.Integer get(int) -> get
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.lang.Integer set(int,java.lang.Integer) -> set
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int[] toIntArray() -> toIntArray
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
com.google.common.primitives.Ints$LexicographicalComparator -> com.google.common.primitives.Ints$LexicographicalComparator:
    com.google.common.primitives.Ints$LexicographicalComparator INSTANCE -> INSTANCE
    com.google.common.primitives.Ints$LexicographicalComparator[] $VALUES -> $VALUES
    com.google.common.primitives.Ints$LexicographicalComparator[] values() -> values
    com.google.common.primitives.Ints$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(int[],int[]) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.Longs -> com.google.common.primitives.Longs:
    int BYTES -> BYTES
    int hashCode(long) -> hashCode
    int compare(long,long) -> compare
    boolean contains(long[],long) -> contains
    int indexOf(long[],long) -> indexOf
    int indexOf(long[],long,int,int) -> indexOf
    int indexOf(long[],long[]) -> indexOf
    int lastIndexOf(long[],long) -> lastIndexOf
    int lastIndexOf(long[],long,int,int) -> lastIndexOf
    long min(long[]) -> min
    long max(long[]) -> max
    long[] concat(long[][]) -> concat
    byte[] toByteArray(long) -> toByteArray
    long fromByteArray(byte[]) -> fromByteArray
    long fromBytes(byte,byte,byte,byte,byte,byte,byte,byte) -> fromBytes
    long[] ensureCapacity(long[],int,int) -> ensureCapacity
    long[] copyOf(long[],int) -> copyOf
    java.lang.String join(java.lang.String,long[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    long[] toArray(java.util.Collection) -> toArray
    java.util.List asList(long[]) -> asList
    int access$000(long[],long,int,int) -> access$000
    int access$100(long[],long,int,int) -> access$100
com.google.common.primitives.Longs$LexicographicalComparator -> com.google.common.primitives.Longs$LexicographicalComparator:
    com.google.common.primitives.Longs$LexicographicalComparator INSTANCE -> INSTANCE
    com.google.common.primitives.Longs$LexicographicalComparator[] $VALUES -> $VALUES
    com.google.common.primitives.Longs$LexicographicalComparator[] values() -> values
    com.google.common.primitives.Longs$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(long[],long[]) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.Longs$LongArrayAsList -> com.google.common.primitives.Longs$LongArrayAsList:
    long[] array -> array
    int start -> start
    int end -> end
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.lang.Long get(int) -> get
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.lang.Long set(int,java.lang.Long) -> set
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    long[] toLongArray() -> toLongArray
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
com.google.common.primitives.Primitives -> com.google.common.primitives.Primitives:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> PRIMITIVE_TO_WRAPPER_TYPE
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> WRAPPER_TO_PRIMITIVE_TYPE
    void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> add
    java.util.Set allPrimitiveTypes() -> allPrimitiveTypes
    java.util.Set allWrapperTypes() -> allWrapperTypes
    boolean isWrapperType(java.lang.Class) -> isWrapperType
    java.lang.Class wrap(java.lang.Class) -> wrap
    java.lang.Class unwrap(java.lang.Class) -> unwrap
com.google.common.primitives.Shorts -> com.google.common.primitives.Shorts:
    int BYTES -> BYTES
    int hashCode(short) -> hashCode
    short checkedCast(long) -> checkedCast
    short saturatedCast(long) -> saturatedCast
    int compare(short,short) -> compare
    boolean contains(short[],short) -> contains
    int indexOf(short[],short) -> indexOf
    int indexOf(short[],short,int,int) -> indexOf
    int indexOf(short[],short[]) -> indexOf
    int lastIndexOf(short[],short) -> lastIndexOf
    int lastIndexOf(short[],short,int,int) -> lastIndexOf
    short min(short[]) -> min
    short max(short[]) -> max
    short[] concat(short[][]) -> concat
    byte[] toByteArray(short) -> toByteArray
    short fromByteArray(byte[]) -> fromByteArray
    short fromBytes(byte,byte) -> fromBytes
    short[] ensureCapacity(short[],int,int) -> ensureCapacity
    short[] copyOf(short[],int) -> copyOf
    java.lang.String join(java.lang.String,short[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    short[] toArray(java.util.Collection) -> toArray
    java.util.List asList(short[]) -> asList
    int access$000(short[],short,int,int) -> access$000
    int access$100(short[],short,int,int) -> access$100
com.google.common.primitives.Shorts$LexicographicalComparator -> com.google.common.primitives.Shorts$LexicographicalComparator:
    com.google.common.primitives.Shorts$LexicographicalComparator INSTANCE -> INSTANCE
    com.google.common.primitives.Shorts$LexicographicalComparator[] $VALUES -> $VALUES
    com.google.common.primitives.Shorts$LexicographicalComparator[] values() -> values
    com.google.common.primitives.Shorts$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(short[],short[]) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.Shorts$ShortArrayAsList -> com.google.common.primitives.Shorts$ShortArrayAsList:
    short[] array -> array
    int start -> start
    int end -> end
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.lang.Short get(int) -> get
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.lang.Short set(int,java.lang.Short) -> set
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    short[] toShortArray() -> toShortArray
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
com.google.common.primitives.SignedBytes -> com.google.common.primitives.SignedBytes:
    byte checkedCast(long) -> checkedCast
    byte saturatedCast(long) -> saturatedCast
    int compare(byte,byte) -> compare
    byte min(byte[]) -> min
    byte max(byte[]) -> max
    java.lang.String join(java.lang.String,byte[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
com.google.common.primitives.SignedBytes$LexicographicalComparator -> com.google.common.primitives.SignedBytes$LexicographicalComparator:
    com.google.common.primitives.SignedBytes$LexicographicalComparator INSTANCE -> INSTANCE
    com.google.common.primitives.SignedBytes$LexicographicalComparator[] $VALUES -> $VALUES
    com.google.common.primitives.SignedBytes$LexicographicalComparator[] values() -> values
    com.google.common.primitives.SignedBytes$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(byte[],byte[]) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.UnsignedBytes -> com.google.common.primitives.UnsignedBytes:
    int toInt(byte) -> toInt
    byte checkedCast(long) -> checkedCast
    byte saturatedCast(long) -> saturatedCast
    int compare(byte,byte) -> compare
    byte min(byte[]) -> min
    byte max(byte[]) -> max
    java.lang.String join(java.lang.String,byte[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    java.util.Comparator lexicographicalComparatorJavaImpl() -> lexicographicalComparatorJavaImpl
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder:
    java.lang.String UNSAFE_COMPARATOR_NAME -> UNSAFE_COMPARATOR_NAME
    java.util.Comparator BEST_COMPARATOR -> BEST_COMPARATOR
    java.util.Comparator getBestComparator() -> getBestComparator
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator:
    com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator INSTANCE -> INSTANCE
    com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator[] $VALUES -> $VALUES
    com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator[] values() -> values
    com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator valueOf(java.lang.String) -> valueOf
    int compare(byte[],byte[]) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator:
    com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator INSTANCE -> INSTANCE
    boolean littleEndian -> littleEndian
    sun.misc.Unsafe theUnsafe -> theUnsafe
    int BYTE_ARRAY_BASE_OFFSET -> BYTE_ARRAY_BASE_OFFSET
    com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator[] $VALUES -> $VALUES
    com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator[] values() -> values
    com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator valueOf(java.lang.String) -> valueOf
    boolean lessThanUnsigned(long,long) -> lessThanUnsigned
    int compare(byte[],byte[]) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator$1 -> com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator$1:
    java.lang.Object run() -> run
com.google.common.primitives.package-info -> com.google.common.primitives.package-info:
com.google.common.util.concurrent.AbstractCheckedFuture -> com.google.common.util.concurrent.AbstractCheckedFuture:
    com.google.common.util.concurrent.ListenableFuture delegate -> delegate
    java.lang.Exception mapException(java.lang.Exception) -> mapException
    java.lang.Object checkedGet() -> checkedGet
    java.lang.Object checkedGet(long,java.util.concurrent.TimeUnit) -> checkedGet
    boolean cancel(boolean) -> cancel
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
com.google.common.util.concurrent.AbstractExecutionThreadService -> com.google.common.util.concurrent.AbstractExecutionThreadService:
    com.google.common.util.concurrent.Service delegate -> delegate
    void startUp() -> startUp
    void run() -> run
    void shutDown() -> shutDown
    void triggerShutdown() -> triggerShutdown
    java.util.concurrent.Executor executor() -> executor
    java.lang.String toString() -> toString
    com.google.common.util.concurrent.ListenableFuture start() -> start
    com.google.common.util.concurrent.Service$State startAndWait() -> startAndWait
    boolean isRunning() -> isRunning
    com.google.common.util.concurrent.Service$State state() -> state
    com.google.common.util.concurrent.ListenableFuture stop() -> stop
    com.google.common.util.concurrent.Service$State stopAndWait() -> stopAndWait
    java.lang.String getServiceName() -> getServiceName
    java.lang.String access$000(com.google.common.util.concurrent.AbstractExecutionThreadService) -> access$000
com.google.common.util.concurrent.AbstractExecutionThreadService$1 -> com.google.common.util.concurrent.AbstractExecutionThreadService$1:
    com.google.common.util.concurrent.AbstractExecutionThreadService this$0 -> this$0
    void doStart() -> doStart
    void doStop() -> doStop
com.google.common.util.concurrent.AbstractExecutionThreadService$1$1 -> com.google.common.util.concurrent.AbstractExecutionThreadService$1$1:
    com.google.common.util.concurrent.AbstractExecutionThreadService$1 this$1 -> this$1
    void run() -> run
com.google.common.util.concurrent.AbstractExecutionThreadService$2 -> com.google.common.util.concurrent.AbstractExecutionThreadService$2:
    com.google.common.util.concurrent.AbstractExecutionThreadService this$0 -> this$0
    void execute(java.lang.Runnable) -> execute
com.google.common.util.concurrent.AbstractFuture -> com.google.common.util.concurrent.AbstractFuture:
    com.google.common.util.concurrent.AbstractFuture$Sync sync -> sync
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    java.lang.Object get() -> get
    boolean isDone() -> isDone
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    boolean set(java.lang.Object) -> set
    boolean setException(java.lang.Throwable) -> setException
    boolean cancel() -> cancel
    void done() -> done
com.google.common.util.concurrent.AbstractFuture$Sync -> com.google.common.util.concurrent.AbstractFuture$Sync:
    long serialVersionUID -> serialVersionUID
    int RUNNING -> RUNNING
    int COMPLETING -> COMPLETING
    int COMPLETED -> COMPLETED
    int CANCELLED -> CANCELLED
    java.lang.Object value -> value
    java.lang.Throwable exception -> exception
    int tryAcquireShared(int) -> tryAcquireShared
    boolean tryReleaseShared(int) -> tryReleaseShared
    java.lang.Object get(long) -> get
    java.lang.Object get() -> get
    java.lang.Object getValue() -> getValue
    boolean isDone() -> isDone
    boolean isCancelled() -> isCancelled
    boolean set(java.lang.Object) -> set
    boolean setException(java.lang.Throwable) -> setException
    boolean cancel() -> cancel
    boolean complete(java.lang.Object,java.lang.Throwable,int) -> complete
com.google.common.util.concurrent.AbstractIdleService -> com.google.common.util.concurrent.AbstractIdleService:
    com.google.common.util.concurrent.Service delegate -> delegate
    void startUp() -> startUp
    void shutDown() -> shutDown
    java.util.concurrent.Executor executor(com.google.common.util.concurrent.Service$State) -> executor
    java.lang.String toString() -> toString
    com.google.common.util.concurrent.ListenableFuture start() -> start
    com.google.common.util.concurrent.Service$State startAndWait() -> startAndWait
    boolean isRunning() -> isRunning
    com.google.common.util.concurrent.Service$State state() -> state
    com.google.common.util.concurrent.ListenableFuture stop() -> stop
    com.google.common.util.concurrent.Service$State stopAndWait() -> stopAndWait
    java.lang.String getServiceName() -> getServiceName
    java.lang.String access$000(com.google.common.util.concurrent.AbstractIdleService) -> access$000
com.google.common.util.concurrent.AbstractIdleService$1 -> com.google.common.util.concurrent.AbstractIdleService$1:
    com.google.common.util.concurrent.AbstractIdleService this$0 -> this$0
    void doStart() -> doStart
    void doStop() -> doStop
com.google.common.util.concurrent.AbstractIdleService$1$1 -> com.google.common.util.concurrent.AbstractIdleService$1$1:
    com.google.common.util.concurrent.AbstractIdleService$1 this$1 -> this$1
    void run() -> run
com.google.common.util.concurrent.AbstractIdleService$1$2 -> com.google.common.util.concurrent.AbstractIdleService$1$2:
    com.google.common.util.concurrent.AbstractIdleService$1 this$1 -> this$1
    void run() -> run
com.google.common.util.concurrent.AbstractIdleService$2 -> com.google.common.util.concurrent.AbstractIdleService$2:
    com.google.common.util.concurrent.Service$State val$state -> val$state
    com.google.common.util.concurrent.AbstractIdleService this$0 -> this$0
    void execute(java.lang.Runnable) -> execute
com.google.common.util.concurrent.AbstractListenableFuture -> com.google.common.util.concurrent.AbstractListenableFuture:
    com.google.common.util.concurrent.ExecutionList executionList -> executionList
    void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    void done() -> done
com.google.common.util.concurrent.AbstractService -> com.google.common.util.concurrent.AbstractService:
    java.util.concurrent.locks.ReentrantLock lock -> lock
    com.google.common.util.concurrent.AbstractService$Transition startup -> startup
    com.google.common.util.concurrent.AbstractService$Transition shutdown -> shutdown
    com.google.common.util.concurrent.Service$State state -> state
    boolean shutdownWhenStartupFinishes -> shutdownWhenStartupFinishes
    void doStart() -> doStart
    void doStop() -> doStop
    com.google.common.util.concurrent.ListenableFuture start() -> start
    com.google.common.util.concurrent.ListenableFuture stop() -> stop
    com.google.common.util.concurrent.Service$State startAndWait() -> startAndWait
    com.google.common.util.concurrent.Service$State stopAndWait() -> stopAndWait
    void notifyStarted() -> notifyStarted
    void notifyStopped() -> notifyStopped
    void notifyFailed(java.lang.Throwable) -> notifyFailed
    boolean isRunning() -> isRunning
    com.google.common.util.concurrent.Service$State state() -> state
    java.lang.String toString() -> toString
com.google.common.util.concurrent.AbstractService$1 -> com.google.common.util.concurrent.AbstractService$1:
com.google.common.util.concurrent.AbstractService$Transition -> com.google.common.util.concurrent.AbstractService$Transition:
    com.google.common.util.concurrent.AbstractService this$0 -> this$0
    com.google.common.util.concurrent.Service$State get(long,java.util.concurrent.TimeUnit) -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
com.google.common.util.concurrent.Callables -> com.google.common.util.concurrent.Callables:
    java.util.concurrent.Callable returning(java.lang.Object) -> returning
com.google.common.util.concurrent.Callables$1 -> com.google.common.util.concurrent.Callables$1:
    java.lang.Object val$value -> val$value
    java.lang.Object call() -> call
com.google.common.util.concurrent.CheckedFuture -> com.google.common.util.concurrent.CheckedFuture:
    java.lang.Object checkedGet() -> checkedGet
    java.lang.Object checkedGet(long,java.util.concurrent.TimeUnit) -> checkedGet
com.google.common.util.concurrent.ExecutionList -> com.google.common.util.concurrent.ExecutionList:
    java.util.logging.Logger log -> log
    java.util.Queue runnables -> runnables
    boolean executed -> executed
    void add(java.lang.Runnable,java.util.concurrent.Executor) -> add
    void run() -> run
    java.util.logging.Logger access$000() -> access$000
com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair -> com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair:
    java.lang.Runnable runnable -> runnable
    java.util.concurrent.Executor executor -> executor
    void execute() -> execute
com.google.common.util.concurrent.FakeTimeLimiter -> com.google.common.util.concurrent.FakeTimeLimiter:
    java.lang.Object newProxy(java.lang.Object,java.lang.Class,long,java.util.concurrent.TimeUnit) -> newProxy
    java.lang.Object callWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit,boolean) -> callWithTimeout
com.google.common.util.concurrent.ForwardingBlockingQueue -> com.google.common.util.concurrent.ForwardingBlockingQueue:
    java.util.concurrent.BlockingQueue delegate() -> delegate
    int drainTo(java.util.Collection,int) -> drainTo
    int drainTo(java.util.Collection) -> drainTo
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    void put(java.lang.Object) -> put
    int remainingCapacity() -> remainingCapacity
    java.lang.Object take() -> take
    java.util.Queue delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingCheckedFuture -> com.google.common.util.concurrent.ForwardingCheckedFuture:
    java.lang.Object checkedGet() -> checkedGet
    java.lang.Object checkedGet(long,java.util.concurrent.TimeUnit) -> checkedGet
    com.google.common.util.concurrent.CheckedFuture delegate() -> delegate
    com.google.common.util.concurrent.ListenableFuture delegate() -> delegate
    java.util.concurrent.Future delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture -> com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture:
    com.google.common.util.concurrent.CheckedFuture delegate -> delegate
    com.google.common.util.concurrent.CheckedFuture delegate() -> delegate
    com.google.common.util.concurrent.ListenableFuture delegate() -> delegate
    java.util.concurrent.Future delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingFuture -> com.google.common.util.concurrent.ForwardingFuture:
    java.util.concurrent.Future delegate() -> delegate
    boolean cancel(boolean) -> cancel
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingFuture$SimpleForwardingFuture -> com.google.common.util.concurrent.ForwardingFuture$SimpleForwardingFuture:
    java.util.concurrent.Future delegate -> delegate
    java.util.concurrent.Future delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingListenableFuture -> com.google.common.util.concurrent.ForwardingListenableFuture:
    com.google.common.util.concurrent.ListenableFuture delegate() -> delegate
    void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    java.util.concurrent.Future delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture -> com.google.common.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture:
    com.google.common.util.concurrent.ListenableFuture delegate -> delegate
    com.google.common.util.concurrent.ListenableFuture delegate() -> delegate
    java.util.concurrent.Future delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingService -> com.google.common.util.concurrent.ForwardingService:
    com.google.common.util.concurrent.Service delegate() -> delegate
    com.google.common.util.concurrent.ListenableFuture start() -> start
    com.google.common.util.concurrent.Service$State state() -> state
    com.google.common.util.concurrent.ListenableFuture stop() -> stop
    com.google.common.util.concurrent.Service$State startAndWait() -> startAndWait
    com.google.common.util.concurrent.Service$State stopAndWait() -> stopAndWait
    boolean isRunning() -> isRunning
    com.google.common.util.concurrent.Service$State standardStartAndWait() -> standardStartAndWait
    com.google.common.util.concurrent.Service$State standardStopAndWait() -> standardStopAndWait
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.Futures -> com.google.common.util.concurrent.Futures:
    com.google.common.util.concurrent.UninterruptibleFuture makeUninterruptible(java.util.concurrent.Future) -> makeUninterruptible
    com.google.common.util.concurrent.ListenableFuture makeListenable(java.util.concurrent.Future) -> makeListenable
    com.google.common.util.concurrent.ListenableFuture makeListenable(java.util.concurrent.Future,java.util.concurrent.Executor) -> makeListenable
    com.google.common.util.concurrent.CheckedFuture makeChecked(java.util.concurrent.Future,com.google.common.base.Function) -> makeChecked
    com.google.common.util.concurrent.CheckedFuture makeChecked(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function) -> makeChecked
    com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object) -> immediateFuture
    com.google.common.util.concurrent.CheckedFuture immediateCheckedFuture(java.lang.Object) -> immediateCheckedFuture
    com.google.common.util.concurrent.ListenableFuture immediateFailedFuture(java.lang.Throwable) -> immediateFailedFuture
    com.google.common.util.concurrent.CheckedFuture immediateFailedCheckedFuture(java.lang.Exception) -> immediateFailedCheckedFuture
    com.google.common.util.concurrent.ListenableFuture chain(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function) -> chain
    com.google.common.util.concurrent.ListenableFuture chain(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function,java.util.concurrent.Executor) -> chain
    com.google.common.util.concurrent.ListenableFuture transform(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function) -> transform
    com.google.common.util.concurrent.ListenableFuture transform(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function,java.util.concurrent.Executor) -> transform
    java.util.concurrent.Future transform(java.util.concurrent.Future,com.google.common.base.Function) -> transform
com.google.common.util.concurrent.Futures$1 -> com.google.common.util.concurrent.Futures$1:
    java.util.concurrent.Future val$future -> val$future
    boolean cancel(boolean) -> cancel
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    java.lang.Object get() -> get
com.google.common.util.concurrent.Futures$2 -> com.google.common.util.concurrent.Futures$2:
    java.lang.Exception apply(java.lang.Exception) -> apply
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.util.concurrent.Futures$3 -> com.google.common.util.concurrent.Futures$3:
    java.lang.Exception val$exception -> val$exception
    java.lang.Exception apply(java.lang.Exception) -> apply
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.util.concurrent.Futures$4 -> com.google.common.util.concurrent.Futures$4:
    com.google.common.base.Function val$function -> val$function
    com.google.common.util.concurrent.ListenableFuture apply(java.lang.Object) -> apply
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.util.concurrent.Futures$5 -> com.google.common.util.concurrent.Futures$5:
    java.lang.Object lock -> lock
    boolean set -> set
    java.lang.Object value -> value
    java.util.concurrent.ExecutionException exception -> exception
    java.util.concurrent.Future val$future -> val$future
    com.google.common.base.Function val$function -> val$function
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    java.lang.Object apply(java.lang.Object) -> apply
    boolean cancel(boolean) -> cancel
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
com.google.common.util.concurrent.Futures$ChainingListenableFuture -> com.google.common.util.concurrent.Futures$ChainingListenableFuture:
    com.google.common.base.Function function -> function
    com.google.common.util.concurrent.ListenableFuture inputFuture -> inputFuture
    com.google.common.util.concurrent.ListenableFuture outputFuture -> outputFuture
    java.util.concurrent.BlockingQueue mayInterruptIfRunningChannel -> mayInterruptIfRunningChannel
    java.util.concurrent.CountDownLatch outputCreated -> outputCreated
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    boolean cancel(boolean) -> cancel
    void cancel(java.util.concurrent.Future,boolean) -> cancel
    void run() -> run
    com.google.common.util.concurrent.ListenableFuture access$102(com.google.common.util.concurrent.Futures$ChainingListenableFuture,com.google.common.util.concurrent.ListenableFuture) -> access$102
com.google.common.util.concurrent.Futures$ChainingListenableFuture$1 -> com.google.common.util.concurrent.Futures$ChainingListenableFuture$1:
    com.google.common.util.concurrent.ListenableFuture val$outputFuture -> val$outputFuture
    com.google.common.util.concurrent.Futures$ChainingListenableFuture this$0 -> this$0
    void run() -> run
com.google.common.util.concurrent.Futures$ListenableFutureAdapter -> com.google.common.util.concurrent.Futures$ListenableFutureAdapter:
    java.util.concurrent.ThreadFactory threadFactory -> threadFactory
    java.util.concurrent.Executor defaultAdapterExecutor -> defaultAdapterExecutor
    java.util.concurrent.Executor adapterExecutor -> adapterExecutor
    com.google.common.util.concurrent.ExecutionList executionList -> executionList
    java.util.concurrent.atomic.AtomicBoolean hasListeners -> hasListeners
    java.util.concurrent.Future delegate -> delegate
    java.util.concurrent.Future delegate() -> delegate
    void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    java.lang.Object delegate() -> delegate
    java.util.concurrent.Future access$200(com.google.common.util.concurrent.Futures$ListenableFutureAdapter) -> access$200
    com.google.common.util.concurrent.ExecutionList access$300(com.google.common.util.concurrent.Futures$ListenableFutureAdapter) -> access$300
com.google.common.util.concurrent.Futures$ListenableFutureAdapter$1 -> com.google.common.util.concurrent.Futures$ListenableFutureAdapter$1:
    com.google.common.util.concurrent.Futures$ListenableFutureAdapter this$0 -> this$0
    void run() -> run
com.google.common.util.concurrent.Futures$MappingCheckedFuture -> com.google.common.util.concurrent.Futures$MappingCheckedFuture:
    com.google.common.base.Function mapper -> mapper
    java.lang.Exception mapException(java.lang.Exception) -> mapException
com.google.common.util.concurrent.ListenableFuture -> com.google.common.util.concurrent.ListenableFuture:
    void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
com.google.common.util.concurrent.ListenableFutureTask -> com.google.common.util.concurrent.ListenableFutureTask:
    com.google.common.util.concurrent.ExecutionList executionList -> executionList
    void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    void done() -> done
com.google.common.util.concurrent.MoreExecutors -> com.google.common.util.concurrent.MoreExecutors:
    java.util.concurrent.ExecutorService getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor,long,java.util.concurrent.TimeUnit) -> getExitingExecutorService
    java.util.concurrent.ScheduledExecutorService getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor,long,java.util.concurrent.TimeUnit) -> getExitingScheduledExecutorService
    void addDelayedShutdownHook(java.util.concurrent.ExecutorService,long,java.util.concurrent.TimeUnit) -> addDelayedShutdownHook
    java.util.concurrent.ExecutorService getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor) -> getExitingExecutorService
    java.util.concurrent.ScheduledExecutorService getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor) -> getExitingScheduledExecutorService
    java.util.concurrent.ExecutorService sameThreadExecutor() -> sameThreadExecutor
com.google.common.util.concurrent.MoreExecutors$1 -> com.google.common.util.concurrent.MoreExecutors$1:
    java.util.concurrent.ExecutorService val$service -> val$service
    long val$terminationTimeout -> val$terminationTimeout
    java.util.concurrent.TimeUnit val$timeUnit -> val$timeUnit
    void run() -> run
com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService -> com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService:
    java.util.concurrent.locks.Lock lock -> lock
    java.util.concurrent.locks.Condition termination -> termination
    int runningTasks -> runningTasks
    boolean shutdown -> shutdown
    void execute(java.lang.Runnable) -> execute
    boolean isShutdown() -> isShutdown
    void shutdown() -> shutdown
    java.util.List shutdownNow() -> shutdownNow
    boolean isTerminated() -> isTerminated
    boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    void startTask() -> startTask
    void endTask() -> endTask
com.google.common.util.concurrent.Service -> com.google.common.util.concurrent.Service:
    com.google.common.util.concurrent.ListenableFuture start() -> start
    com.google.common.util.concurrent.Service$State startAndWait() -> startAndWait
    boolean isRunning() -> isRunning
    com.google.common.util.concurrent.Service$State state() -> state
    com.google.common.util.concurrent.ListenableFuture stop() -> stop
    com.google.common.util.concurrent.Service$State stopAndWait() -> stopAndWait
com.google.common.util.concurrent.Service$State -> com.google.common.util.concurrent.Service$State:
    com.google.common.util.concurrent.Service$State NEW -> NEW
    com.google.common.util.concurrent.Service$State STARTING -> STARTING
    com.google.common.util.concurrent.Service$State RUNNING -> RUNNING
    com.google.common.util.concurrent.Service$State STOPPING -> STOPPING
    com.google.common.util.concurrent.Service$State TERMINATED -> TERMINATED
    com.google.common.util.concurrent.Service$State FAILED -> FAILED
    com.google.common.util.concurrent.Service$State[] $VALUES -> $VALUES
    com.google.common.util.concurrent.Service$State[] values() -> values
    com.google.common.util.concurrent.Service$State valueOf(java.lang.String) -> valueOf
com.google.common.util.concurrent.SettableFuture -> com.google.common.util.concurrent.SettableFuture:
    com.google.common.util.concurrent.SettableFuture create() -> create
    boolean set(java.lang.Object) -> set
    boolean setException(java.lang.Throwable) -> setException
    boolean cancel(boolean) -> cancel
com.google.common.util.concurrent.SimpleTimeLimiter -> com.google.common.util.concurrent.SimpleTimeLimiter:
    java.util.concurrent.ExecutorService executor -> executor
    java.lang.Object newProxy(java.lang.Object,java.lang.Class,long,java.util.concurrent.TimeUnit) -> newProxy
    java.lang.Object callWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit,boolean) -> callWithTimeout
    java.util.Set findInterruptibleMethods(java.lang.Class) -> findInterruptibleMethods
    boolean declaresInterruptedEx(java.lang.reflect.Method) -> declaresInterruptedEx
    java.lang.Object newProxy(java.lang.Class,java.lang.reflect.InvocationHandler) -> newProxy
com.google.common.util.concurrent.SimpleTimeLimiter$1 -> com.google.common.util.concurrent.SimpleTimeLimiter$1:
    java.lang.Object val$target -> val$target
    long val$timeoutDuration -> val$timeoutDuration
    java.util.concurrent.TimeUnit val$timeoutUnit -> val$timeoutUnit
    java.util.Set val$interruptibleMethods -> val$interruptibleMethods
    com.google.common.util.concurrent.SimpleTimeLimiter this$0 -> this$0
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
com.google.common.util.concurrent.SimpleTimeLimiter$1$1 -> com.google.common.util.concurrent.SimpleTimeLimiter$1$1:
    java.lang.reflect.Method val$method -> val$method
    java.lang.Object[] val$args -> val$args
    com.google.common.util.concurrent.SimpleTimeLimiter$1 this$1 -> this$1
    java.lang.Object call() -> call
com.google.common.util.concurrent.ThreadFactoryBuilder -> com.google.common.util.concurrent.ThreadFactoryBuilder:
    java.lang.String nameFormat -> nameFormat
    java.lang.Boolean daemon -> daemon
    java.lang.Integer priority -> priority
    java.lang.Thread$UncaughtExceptionHandler uncaughtExceptionHandler -> uncaughtExceptionHandler
    java.util.concurrent.ThreadFactory backingThreadFactory -> backingThreadFactory
    com.google.common.util.concurrent.ThreadFactoryBuilder setNameFormat(java.lang.String) -> setNameFormat
    com.google.common.util.concurrent.ThreadFactoryBuilder setDaemon(boolean) -> setDaemon
    com.google.common.util.concurrent.ThreadFactoryBuilder setPriority(int) -> setPriority
    com.google.common.util.concurrent.ThreadFactoryBuilder setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler) -> setUncaughtExceptionHandler
    com.google.common.util.concurrent.ThreadFactoryBuilder setThreadFactory(java.util.concurrent.ThreadFactory) -> setThreadFactory
    java.util.concurrent.ThreadFactory build() -> build
    java.util.concurrent.ThreadFactory build(com.google.common.util.concurrent.ThreadFactoryBuilder) -> build
com.google.common.util.concurrent.ThreadFactoryBuilder$1 -> com.google.common.util.concurrent.ThreadFactoryBuilder$1:
    java.util.concurrent.ThreadFactory val$backingThreadFactory -> val$backingThreadFactory
    java.lang.String val$nameFormat -> val$nameFormat
    java.util.concurrent.atomic.AtomicLong val$count -> val$count
    java.lang.Boolean val$daemon -> val$daemon
    java.lang.Integer val$priority -> val$priority
    java.lang.Thread$UncaughtExceptionHandler val$uncaughtExceptionHandler -> val$uncaughtExceptionHandler
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.google.common.util.concurrent.TimeLimiter -> com.google.common.util.concurrent.TimeLimiter:
    java.lang.Object newProxy(java.lang.Object,java.lang.Class,long,java.util.concurrent.TimeUnit) -> newProxy
    java.lang.Object callWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit,boolean) -> callWithTimeout
com.google.common.util.concurrent.UncaughtExceptionHandlers -> com.google.common.util.concurrent.UncaughtExceptionHandlers:
    java.lang.Thread$UncaughtExceptionHandler systemExit() -> systemExit
com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter -> com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter:
    java.util.logging.Logger logger -> logger
    java.lang.Runtime runtime -> runtime
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.google.common.util.concurrent.UncheckedTimeoutException -> com.google.common.util.concurrent.UncheckedTimeoutException:
    long serialVersionUID -> serialVersionUID
com.google.common.util.concurrent.UninterruptibleFuture -> com.google.common.util.concurrent.UninterruptibleFuture:
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
com.google.common.util.concurrent.package-info -> com.google.common.util.concurrent.package-info:
com.google.protobuf.AbstractMessageLite -> com.google.protobuf.AbstractMessageLite:
    com.google.protobuf.ByteString toByteString() -> toByteString
    byte[] toByteArray() -> toByteArray
    void writeTo(java.io.OutputStream) -> writeTo
    void writeDelimitedTo(java.io.OutputStream) -> writeDelimitedTo
com.google.protobuf.AbstractMessageLite$Builder -> com.google.protobuf.AbstractMessageLite$Builder:
    com.google.protobuf.AbstractMessageLite$Builder clone() -> clone
    com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream) -> mergeFrom
    com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.ByteString) -> mergeFrom
    com.google.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.protobuf.AbstractMessageLite$Builder mergeFrom(byte[]) -> mergeFrom
    com.google.protobuf.AbstractMessageLite$Builder mergeFrom(byte[],int,int) -> mergeFrom
    com.google.protobuf.AbstractMessageLite$Builder mergeFrom(byte[],com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.protobuf.AbstractMessageLite$Builder mergeFrom(byte[],int,int,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.protobuf.AbstractMessageLite$Builder mergeFrom(java.io.InputStream) -> mergeFrom
    com.google.protobuf.AbstractMessageLite$Builder mergeFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    boolean mergeDelimitedFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeDelimitedFrom
    boolean mergeDelimitedFrom(java.io.InputStream) -> mergeDelimitedFrom
    com.google.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.protobuf.MessageLite) -> newUninitializedMessageException
    void addAll(java.lang.Iterable,java.util.Collection) -> addAll
    java.lang.Object clone() -> clone
    com.google.protobuf.MessageLite$Builder mergeFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.protobuf.MessageLite$Builder mergeFrom(java.io.InputStream) -> mergeFrom
    com.google.protobuf.MessageLite$Builder mergeFrom(byte[],int,int,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.protobuf.MessageLite$Builder mergeFrom(byte[],com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.protobuf.MessageLite$Builder mergeFrom(byte[],int,int) -> mergeFrom
    com.google.protobuf.MessageLite$Builder mergeFrom(byte[]) -> mergeFrom
    com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.ByteString) -> mergeFrom
    com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream) -> mergeFrom
    com.google.protobuf.MessageLite$Builder clone() -> clone
com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream -> com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream:
    int limit -> limit
    int available() -> available
    int read() -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
com.google.protobuf.ByteString -> com.google.protobuf.ByteString:
    byte[] bytes -> bytes
    com.google.protobuf.ByteString EMPTY -> EMPTY
    int hash -> hash
    byte byteAt(int) -> byteAt
    int size() -> size
    boolean isEmpty() -> isEmpty
    com.google.protobuf.ByteString copyFrom(byte[],int,int) -> copyFrom
    com.google.protobuf.ByteString copyFrom(byte[]) -> copyFrom
    com.google.protobuf.ByteString copyFrom(java.nio.ByteBuffer,int) -> copyFrom
    com.google.protobuf.ByteString copyFrom(java.nio.ByteBuffer) -> copyFrom
    com.google.protobuf.ByteString copyFrom(java.lang.String,java.lang.String) -> copyFrom
    com.google.protobuf.ByteString copyFromUtf8(java.lang.String) -> copyFromUtf8
    com.google.protobuf.ByteString copyFrom(java.util.List) -> copyFrom
    void copyTo(byte[],int) -> copyTo
    void copyTo(byte[],int,int,int) -> copyTo
    byte[] toByteArray() -> toByteArray
    java.nio.ByteBuffer asReadOnlyByteBuffer() -> asReadOnlyByteBuffer
    java.lang.String toString(java.lang.String) -> toString
    java.lang.String toStringUtf8() -> toStringUtf8
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.io.InputStream newInput() -> newInput
    com.google.protobuf.CodedInputStream newCodedInput() -> newCodedInput
    com.google.protobuf.ByteString$Output newOutput(int) -> newOutput
    com.google.protobuf.ByteString$Output newOutput() -> newOutput
    com.google.protobuf.ByteString$CodedBuilder newCodedBuilder(int) -> newCodedBuilder
com.google.protobuf.ByteString$1 -> com.google.protobuf.ByteString$1:
com.google.protobuf.ByteString$CodedBuilder -> com.google.protobuf.ByteString$CodedBuilder:
    com.google.protobuf.CodedOutputStream output -> output
    byte[] buffer -> buffer
    com.google.protobuf.ByteString build() -> build
    com.google.protobuf.CodedOutputStream getCodedOutput() -> getCodedOutput
com.google.protobuf.ByteString$Output -> com.google.protobuf.ByteString$Output:
    java.io.ByteArrayOutputStream bout -> bout
    com.google.protobuf.ByteString toByteString() -> toByteString
com.google.protobuf.CodedInputStream -> com.google.protobuf.CodedInputStream:
    byte[] buffer -> buffer
    int bufferSize -> bufferSize
    int bufferSizeAfterLimit -> bufferSizeAfterLimit
    int bufferPos -> bufferPos
    java.io.InputStream input -> input
    int lastTag -> lastTag
    int totalBytesRetired -> totalBytesRetired
    int currentLimit -> currentLimit
    int recursionDepth -> recursionDepth
    int recursionLimit -> recursionLimit
    int sizeLimit -> sizeLimit
    int DEFAULT_RECURSION_LIMIT -> DEFAULT_RECURSION_LIMIT
    int DEFAULT_SIZE_LIMIT -> DEFAULT_SIZE_LIMIT
    int BUFFER_SIZE -> BUFFER_SIZE
    com.google.protobuf.CodedInputStream newInstance(java.io.InputStream) -> newInstance
    com.google.protobuf.CodedInputStream newInstance(byte[]) -> newInstance
    com.google.protobuf.CodedInputStream newInstance(byte[],int,int) -> newInstance
    int readTag() -> readTag
    void checkLastTagWas(int) -> checkLastTagWas
    boolean skipField(int) -> skipField
    void skipMessage() -> skipMessage
    double readDouble() -> readDouble
    float readFloat() -> readFloat
    long readUInt64() -> readUInt64
    long readInt64() -> readInt64
    int readInt32() -> readInt32
    long readFixed64() -> readFixed64
    int readFixed32() -> readFixed32
    boolean readBool() -> readBool
    java.lang.String readString() -> readString
    void readGroup(int,com.google.protobuf.MessageLite$Builder,com.google.protobuf.ExtensionRegistryLite) -> readGroup
    void readUnknownGroup(int,com.google.protobuf.MessageLite$Builder) -> readUnknownGroup
    void readMessage(com.google.protobuf.MessageLite$Builder,com.google.protobuf.ExtensionRegistryLite) -> readMessage
    com.google.protobuf.ByteString readBytes() -> readBytes
    int readUInt32() -> readUInt32
    int readEnum() -> readEnum
    int readSFixed32() -> readSFixed32
    long readSFixed64() -> readSFixed64
    int readSInt32() -> readSInt32
    long readSInt64() -> readSInt64
    int readRawVarint32() -> readRawVarint32
    int readRawVarint32(java.io.InputStream) -> readRawVarint32
    int readRawVarint32(int,java.io.InputStream) -> readRawVarint32
    long readRawVarint64() -> readRawVarint64
    int readRawLittleEndian32() -> readRawLittleEndian32
    long readRawLittleEndian64() -> readRawLittleEndian64
    int decodeZigZag32(int) -> decodeZigZag32
    long decodeZigZag64(long) -> decodeZigZag64
    int setRecursionLimit(int) -> setRecursionLimit
    int setSizeLimit(int) -> setSizeLimit
    void resetSizeCounter() -> resetSizeCounter
    int pushLimit(int) -> pushLimit
    void recomputeBufferSizeAfterLimit() -> recomputeBufferSizeAfterLimit
    void popLimit(int) -> popLimit
    int getBytesUntilLimit() -> getBytesUntilLimit
    boolean isAtEnd() -> isAtEnd
    int getTotalBytesRead() -> getTotalBytesRead
    boolean refillBuffer(boolean) -> refillBuffer
    byte readRawByte() -> readRawByte
    byte[] readRawBytes(int) -> readRawBytes
    void skipRawBytes(int) -> skipRawBytes
com.google.protobuf.CodedOutputStream -> com.google.protobuf.CodedOutputStream:
    byte[] buffer -> buffer
    int limit -> limit
    int position -> position
    java.io.OutputStream output -> output
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    int LITTLE_ENDIAN_32_SIZE -> LITTLE_ENDIAN_32_SIZE
    int LITTLE_ENDIAN_64_SIZE -> LITTLE_ENDIAN_64_SIZE
    int computePreferredBufferSize(int) -> computePreferredBufferSize
    com.google.protobuf.CodedOutputStream newInstance(java.io.OutputStream) -> newInstance
    com.google.protobuf.CodedOutputStream newInstance(java.io.OutputStream,int) -> newInstance
    com.google.protobuf.CodedOutputStream newInstance(byte[]) -> newInstance
    com.google.protobuf.CodedOutputStream newInstance(byte[],int,int) -> newInstance
    void writeDouble(int,double) -> writeDouble
    void writeFloat(int,float) -> writeFloat
    void writeUInt64(int,long) -> writeUInt64
    void writeInt64(int,long) -> writeInt64
    void writeInt32(int,int) -> writeInt32
    void writeFixed64(int,long) -> writeFixed64
    void writeFixed32(int,int) -> writeFixed32
    void writeBool(int,boolean) -> writeBool
    void writeString(int,java.lang.String) -> writeString
    void writeGroup(int,com.google.protobuf.MessageLite) -> writeGroup
    void writeUnknownGroup(int,com.google.protobuf.MessageLite) -> writeUnknownGroup
    void writeMessage(int,com.google.protobuf.MessageLite) -> writeMessage
    void writeBytes(int,com.google.protobuf.ByteString) -> writeBytes
    void writeUInt32(int,int) -> writeUInt32
    void writeEnum(int,int) -> writeEnum
    void writeSFixed32(int,int) -> writeSFixed32
    void writeSFixed64(int,long) -> writeSFixed64
    void writeSInt32(int,int) -> writeSInt32
    void writeSInt64(int,long) -> writeSInt64
    void writeMessageSetExtension(int,com.google.protobuf.MessageLite) -> writeMessageSetExtension
    void writeRawMessageSetExtension(int,com.google.protobuf.ByteString) -> writeRawMessageSetExtension
    void writeDoubleNoTag(double) -> writeDoubleNoTag
    void writeFloatNoTag(float) -> writeFloatNoTag
    void writeUInt64NoTag(long) -> writeUInt64NoTag
    void writeInt64NoTag(long) -> writeInt64NoTag
    void writeInt32NoTag(int) -> writeInt32NoTag
    void writeFixed64NoTag(long) -> writeFixed64NoTag
    void writeFixed32NoTag(int) -> writeFixed32NoTag
    void writeBoolNoTag(boolean) -> writeBoolNoTag
    void writeStringNoTag(java.lang.String) -> writeStringNoTag
    void writeGroupNoTag(com.google.protobuf.MessageLite) -> writeGroupNoTag
    void writeUnknownGroupNoTag(com.google.protobuf.MessageLite) -> writeUnknownGroupNoTag
    void writeMessageNoTag(com.google.protobuf.MessageLite) -> writeMessageNoTag
    void writeBytesNoTag(com.google.protobuf.ByteString) -> writeBytesNoTag
    void writeUInt32NoTag(int) -> writeUInt32NoTag
    void writeEnumNoTag(int) -> writeEnumNoTag
    void writeSFixed32NoTag(int) -> writeSFixed32NoTag
    void writeSFixed64NoTag(long) -> writeSFixed64NoTag
    void writeSInt32NoTag(int) -> writeSInt32NoTag
    void writeSInt64NoTag(long) -> writeSInt64NoTag
    int computeDoubleSize(int,double) -> computeDoubleSize
    int computeFloatSize(int,float) -> computeFloatSize
    int computeUInt64Size(int,long) -> computeUInt64Size
    int computeInt64Size(int,long) -> computeInt64Size
    int computeInt32Size(int,int) -> computeInt32Size
    int computeFixed64Size(int,long) -> computeFixed64Size
    int computeFixed32Size(int,int) -> computeFixed32Size
    int computeBoolSize(int,boolean) -> computeBoolSize
    int computeStringSize(int,java.lang.String) -> computeStringSize
    int computeGroupSize(int,com.google.protobuf.MessageLite) -> computeGroupSize
    int computeUnknownGroupSize(int,com.google.protobuf.MessageLite) -> computeUnknownGroupSize
    int computeMessageSize(int,com.google.protobuf.MessageLite) -> computeMessageSize
    int computeBytesSize(int,com.google.protobuf.ByteString) -> computeBytesSize
    int computeUInt32Size(int,int) -> computeUInt32Size
    int computeEnumSize(int,int) -> computeEnumSize
    int computeSFixed32Size(int,int) -> computeSFixed32Size
    int computeSFixed64Size(int,long) -> computeSFixed64Size
    int computeSInt32Size(int,int) -> computeSInt32Size
    int computeSInt64Size(int,long) -> computeSInt64Size
    int computeMessageSetExtensionSize(int,com.google.protobuf.MessageLite) -> computeMessageSetExtensionSize
    int computeRawMessageSetExtensionSize(int,com.google.protobuf.ByteString) -> computeRawMessageSetExtensionSize
    int computeDoubleSizeNoTag(double) -> computeDoubleSizeNoTag
    int computeFloatSizeNoTag(float) -> computeFloatSizeNoTag
    int computeUInt64SizeNoTag(long) -> computeUInt64SizeNoTag
    int computeInt64SizeNoTag(long) -> computeInt64SizeNoTag
    int computeInt32SizeNoTag(int) -> computeInt32SizeNoTag
    int computeFixed64SizeNoTag(long) -> computeFixed64SizeNoTag
    int computeFixed32SizeNoTag(int) -> computeFixed32SizeNoTag
    int computeBoolSizeNoTag(boolean) -> computeBoolSizeNoTag
    int computeStringSizeNoTag(java.lang.String) -> computeStringSizeNoTag
    int computeGroupSizeNoTag(com.google.protobuf.MessageLite) -> computeGroupSizeNoTag
    int computeUnknownGroupSizeNoTag(com.google.protobuf.MessageLite) -> computeUnknownGroupSizeNoTag
    int computeMessageSizeNoTag(com.google.protobuf.MessageLite) -> computeMessageSizeNoTag
    int computeBytesSizeNoTag(com.google.protobuf.ByteString) -> computeBytesSizeNoTag
    int computeUInt32SizeNoTag(int) -> computeUInt32SizeNoTag
    int computeEnumSizeNoTag(int) -> computeEnumSizeNoTag
    int computeSFixed32SizeNoTag(int) -> computeSFixed32SizeNoTag
    int computeSFixed64SizeNoTag(long) -> computeSFixed64SizeNoTag
    int computeSInt32SizeNoTag(int) -> computeSInt32SizeNoTag
    int computeSInt64SizeNoTag(long) -> computeSInt64SizeNoTag
    void refreshBuffer() -> refreshBuffer
    void flush() -> flush
    int spaceLeft() -> spaceLeft
    void checkNoSpaceLeft() -> checkNoSpaceLeft
    void writeRawByte(byte) -> writeRawByte
    void writeRawByte(int) -> writeRawByte
    void writeRawBytes(byte[]) -> writeRawBytes
    void writeRawBytes(byte[],int,int) -> writeRawBytes
    void writeTag(int,int) -> writeTag
    int computeTagSize(int) -> computeTagSize
    void writeRawVarint32(int) -> writeRawVarint32
    int computeRawVarint32Size(int) -> computeRawVarint32Size
    void writeRawVarint64(long) -> writeRawVarint64
    int computeRawVarint64Size(long) -> computeRawVarint64Size
    void writeRawLittleEndian32(int) -> writeRawLittleEndian32
    void writeRawLittleEndian64(long) -> writeRawLittleEndian64
    int encodeZigZag32(int) -> encodeZigZag32
    long encodeZigZag64(long) -> encodeZigZag64
com.google.protobuf.CodedOutputStream$OutOfSpaceException -> com.google.protobuf.CodedOutputStream$OutOfSpaceException:
    long serialVersionUID -> serialVersionUID
com.google.protobuf.ExtensionRegistryLite -> com.google.protobuf.ExtensionRegistryLite:
    java.util.Map extensionsByNumber -> extensionsByNumber
    com.google.protobuf.ExtensionRegistryLite EMPTY -> EMPTY
    com.google.protobuf.ExtensionRegistryLite newInstance() -> newInstance
    com.google.protobuf.ExtensionRegistryLite getEmptyRegistry() -> getEmptyRegistry
    com.google.protobuf.ExtensionRegistryLite getUnmodifiable() -> getUnmodifiable
    com.google.protobuf.GeneratedMessageLite$GeneratedExtension findLiteExtensionByNumber(com.google.protobuf.MessageLite,int) -> findLiteExtensionByNumber
    void add(com.google.protobuf.GeneratedMessageLite$GeneratedExtension) -> add
com.google.protobuf.ExtensionRegistryLite$ObjectIntPair -> com.google.protobuf.ExtensionRegistryLite$ObjectIntPair:
    java.lang.Object object -> object
    int number -> number
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.protobuf.FieldSet -> com.google.protobuf.FieldSet:
    java.util.Map fields -> fields
    com.google.protobuf.FieldSet DEFAULT_INSTANCE -> DEFAULT_INSTANCE
    com.google.protobuf.FieldSet newFieldSet() -> newFieldSet
    com.google.protobuf.FieldSet emptySet() -> emptySet
    void makeImmutable() -> makeImmutable
    void clear() -> clear
    java.util.Map getAllFields() -> getAllFields
    java.util.Iterator iterator() -> iterator
    boolean hasField(com.google.protobuf.FieldSet$FieldDescriptorLite) -> hasField
    java.lang.Object getField(com.google.protobuf.FieldSet$FieldDescriptorLite) -> getField
    void setField(com.google.protobuf.FieldSet$FieldDescriptorLite,java.lang.Object) -> setField
    void clearField(com.google.protobuf.FieldSet$FieldDescriptorLite) -> clearField
    int getRepeatedFieldCount(com.google.protobuf.FieldSet$FieldDescriptorLite) -> getRepeatedFieldCount
    java.lang.Object getRepeatedField(com.google.protobuf.FieldSet$FieldDescriptorLite,int) -> getRepeatedField
    void setRepeatedField(com.google.protobuf.FieldSet$FieldDescriptorLite,int,java.lang.Object) -> setRepeatedField
    void addRepeatedField(com.google.protobuf.FieldSet$FieldDescriptorLite,java.lang.Object) -> addRepeatedField
    void verifyType(com.google.protobuf.WireFormat$FieldType,java.lang.Object) -> verifyType
    boolean isInitialized() -> isInitialized
    int getWireFormatForFieldType(com.google.protobuf.WireFormat$FieldType,boolean) -> getWireFormatForFieldType
    void mergeFrom(com.google.protobuf.FieldSet) -> mergeFrom
    java.lang.Object readPrimitiveField(com.google.protobuf.CodedInputStream,com.google.protobuf.WireFormat$FieldType) -> readPrimitiveField
    void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
    void writeMessageSetTo(com.google.protobuf.CodedOutputStream) -> writeMessageSetTo
    void writeElement(com.google.protobuf.CodedOutputStream,com.google.protobuf.WireFormat$FieldType,int,java.lang.Object) -> writeElement
    void writeElementNoTag(com.google.protobuf.CodedOutputStream,com.google.protobuf.WireFormat$FieldType,java.lang.Object) -> writeElementNoTag
    void writeField(com.google.protobuf.FieldSet$FieldDescriptorLite,java.lang.Object,com.google.protobuf.CodedOutputStream) -> writeField
    int getSerializedSize() -> getSerializedSize
    int getMessageSetSerializedSize() -> getMessageSetSerializedSize
    int computeElementSize(com.google.protobuf.WireFormat$FieldType,int,java.lang.Object) -> computeElementSize
    int computeElementSizeNoTag(com.google.protobuf.WireFormat$FieldType,java.lang.Object) -> computeElementSizeNoTag
    int computeFieldSize(com.google.protobuf.FieldSet$FieldDescriptorLite,java.lang.Object) -> computeFieldSize
com.google.protobuf.FieldSet$1 -> com.google.protobuf.FieldSet$1:
    int[] $SwitchMap$com$google$protobuf$WireFormat$JavaType -> $SwitchMap$com$google$protobuf$WireFormat$JavaType
    int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType -> $SwitchMap$com$google$protobuf$WireFormat$FieldType
com.google.protobuf.FieldSet$FieldDescriptorLite -> com.google.protobuf.FieldSet$FieldDescriptorLite:
    int getNumber() -> getNumber
    com.google.protobuf.WireFormat$FieldType getLiteType() -> getLiteType
    com.google.protobuf.WireFormat$JavaType getLiteJavaType() -> getLiteJavaType
    boolean isRepeated() -> isRepeated
    boolean isPacked() -> isPacked
    com.google.protobuf.Internal$EnumLiteMap getEnumType() -> getEnumType
    com.google.protobuf.MessageLite$Builder internalMergeFrom(com.google.protobuf.MessageLite$Builder,com.google.protobuf.MessageLite) -> internalMergeFrom
com.google.protobuf.GeneratedMessageLite -> com.google.protobuf.GeneratedMessageLite:
    com.google.protobuf.GeneratedMessageLite$GeneratedExtension newGeneratedExtension() -> newGeneratedExtension
com.google.protobuf.GeneratedMessageLite$1 -> com.google.protobuf.GeneratedMessageLite$1:
    int[] $SwitchMap$com$google$protobuf$WireFormat$JavaType -> $SwitchMap$com$google$protobuf$WireFormat$JavaType
com.google.protobuf.GeneratedMessageLite$Builder -> com.google.protobuf.GeneratedMessageLite$Builder:
    com.google.protobuf.GeneratedMessageLite$Builder clone() -> clone
    com.google.protobuf.GeneratedMessageLite$Builder mergeFrom(com.google.protobuf.GeneratedMessageLite) -> mergeFrom
    com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.protobuf.GeneratedMessageLite internalGetResult() -> internalGetResult
    boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,int) -> parseUnknownField
    com.google.protobuf.AbstractMessageLite$Builder clone() -> clone
    com.google.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.protobuf.MessageLite$Builder clone() -> clone
    java.lang.Object clone() -> clone
com.google.protobuf.GeneratedMessageLite$ExtendableBuilder -> com.google.protobuf.GeneratedMessageLite$ExtendableBuilder:
    com.google.protobuf.GeneratedMessageLite$ExtendableBuilder clone() -> clone
    com.google.protobuf.GeneratedMessageLite$ExtendableMessage internalGetResult() -> internalGetResult
    boolean hasExtension(com.google.protobuf.GeneratedMessageLite$GeneratedExtension) -> hasExtension
    int getExtensionCount(com.google.protobuf.GeneratedMessageLite$GeneratedExtension) -> getExtensionCount
    java.lang.Object getExtension(com.google.protobuf.GeneratedMessageLite$GeneratedExtension) -> getExtension
    java.lang.Object getExtension(com.google.protobuf.GeneratedMessageLite$GeneratedExtension,int) -> getExtension
    com.google.protobuf.GeneratedMessageLite$ExtendableBuilder setExtension(com.google.protobuf.GeneratedMessageLite$GeneratedExtension,java.lang.Object) -> setExtension
    com.google.protobuf.GeneratedMessageLite$ExtendableBuilder setExtension(com.google.protobuf.GeneratedMessageLite$GeneratedExtension,int,java.lang.Object) -> setExtension
    com.google.protobuf.GeneratedMessageLite$ExtendableBuilder addExtension(com.google.protobuf.GeneratedMessageLite$GeneratedExtension,java.lang.Object) -> addExtension
    com.google.protobuf.GeneratedMessageLite$ExtendableBuilder clearExtension(com.google.protobuf.GeneratedMessageLite$GeneratedExtension) -> clearExtension
    boolean parseUnknownField(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite,int) -> parseUnknownField
    void mergeExtensionFields(com.google.protobuf.GeneratedMessageLite$ExtendableMessage) -> mergeExtensionFields
    com.google.protobuf.GeneratedMessageLite internalGetResult() -> internalGetResult
    com.google.protobuf.GeneratedMessageLite$Builder clone() -> clone
    com.google.protobuf.AbstractMessageLite$Builder clone() -> clone
    com.google.protobuf.MessageLite$Builder clone() -> clone
    java.lang.Object clone() -> clone
com.google.protobuf.GeneratedMessageLite$ExtendableMessage -> com.google.protobuf.GeneratedMessageLite$ExtendableMessage:
    com.google.protobuf.FieldSet extensions -> extensions
    void verifyExtensionContainingType(com.google.protobuf.GeneratedMessageLite$GeneratedExtension) -> verifyExtensionContainingType
    boolean hasExtension(com.google.protobuf.GeneratedMessageLite$GeneratedExtension) -> hasExtension
    int getExtensionCount(com.google.protobuf.GeneratedMessageLite$GeneratedExtension) -> getExtensionCount
    java.lang.Object getExtension(com.google.protobuf.GeneratedMessageLite$GeneratedExtension) -> getExtension
    java.lang.Object getExtension(com.google.protobuf.GeneratedMessageLite$GeneratedExtension,int) -> getExtension
    boolean extensionsAreInitialized() -> extensionsAreInitialized
    com.google.protobuf.GeneratedMessageLite$ExtendableMessage$ExtensionWriter newExtensionWriter() -> newExtensionWriter
    com.google.protobuf.GeneratedMessageLite$ExtendableMessage$ExtensionWriter newMessageSetExtensionWriter() -> newMessageSetExtensionWriter
    int extensionsSerializedSize() -> extensionsSerializedSize
    int extensionsSerializedSizeAsMessageSet() -> extensionsSerializedSizeAsMessageSet
    com.google.protobuf.FieldSet access$200(com.google.protobuf.GeneratedMessageLite$ExtendableMessage) -> access$200
    void access$400(com.google.protobuf.GeneratedMessageLite$ExtendableMessage,com.google.protobuf.GeneratedMessageLite$GeneratedExtension) -> access$400
com.google.protobuf.GeneratedMessageLite$ExtendableMessage$ExtensionWriter -> com.google.protobuf.GeneratedMessageLite$ExtendableMessage$ExtensionWriter:
    java.util.Iterator iter -> iter
    java.util.Map$Entry next -> next
    boolean messageSetWireFormat -> messageSetWireFormat
    com.google.protobuf.GeneratedMessageLite$ExtendableMessage this$0 -> this$0
    void writeUntil(int,com.google.protobuf.CodedOutputStream) -> writeUntil
com.google.protobuf.GeneratedMessageLite$ExtensionDescriptor -> com.google.protobuf.GeneratedMessageLite$ExtensionDescriptor:
    com.google.protobuf.Internal$EnumLiteMap enumTypeMap -> enumTypeMap
    int number -> number
    com.google.protobuf.WireFormat$FieldType type -> type
    boolean isRepeated -> isRepeated
    boolean isPacked -> isPacked
    int getNumber() -> getNumber
    com.google.protobuf.WireFormat$FieldType getLiteType() -> getLiteType
    com.google.protobuf.WireFormat$JavaType getLiteJavaType() -> getLiteJavaType
    boolean isRepeated() -> isRepeated
    boolean isPacked() -> isPacked
    com.google.protobuf.Internal$EnumLiteMap getEnumType() -> getEnumType
    com.google.protobuf.MessageLite$Builder internalMergeFrom(com.google.protobuf.MessageLite$Builder,com.google.protobuf.MessageLite) -> internalMergeFrom
    int compareTo(com.google.protobuf.GeneratedMessageLite$ExtensionDescriptor) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
    boolean access$500(com.google.protobuf.GeneratedMessageLite$ExtensionDescriptor) -> access$500
    com.google.protobuf.WireFormat$FieldType access$600(com.google.protobuf.GeneratedMessageLite$ExtensionDescriptor) -> access$600
com.google.protobuf.GeneratedMessageLite$GeneratedExtension -> com.google.protobuf.GeneratedMessageLite$GeneratedExtension:
    com.google.protobuf.MessageLite containingTypeDefaultInstance -> containingTypeDefaultInstance
    java.lang.Object defaultValue -> defaultValue
    com.google.protobuf.MessageLite messageDefaultInstance -> messageDefaultInstance
    com.google.protobuf.GeneratedMessageLite$ExtensionDescriptor descriptor -> descriptor
    void internalInit(com.google.protobuf.MessageLite,java.lang.Object,com.google.protobuf.MessageLite,com.google.protobuf.GeneratedMessageLite$ExtensionDescriptor) -> internalInit
    void internalInitSingular(com.google.protobuf.MessageLite,java.lang.Object,com.google.protobuf.MessageLite,com.google.protobuf.Internal$EnumLiteMap,int,com.google.protobuf.WireFormat$FieldType) -> internalInitSingular
    void internalInitRepeated(com.google.protobuf.MessageLite,com.google.protobuf.MessageLite,com.google.protobuf.Internal$EnumLiteMap,int,com.google.protobuf.WireFormat$FieldType,boolean) -> internalInitRepeated
    com.google.protobuf.MessageLite getContainingTypeDefaultInstance() -> getContainingTypeDefaultInstance
    int getNumber() -> getNumber
    com.google.protobuf.MessageLite getMessageDefaultInstance() -> getMessageDefaultInstance
    com.google.protobuf.GeneratedMessageLite$ExtensionDescriptor access$000(com.google.protobuf.GeneratedMessageLite$GeneratedExtension) -> access$000
    java.lang.Object access$100(com.google.protobuf.GeneratedMessageLite$GeneratedExtension) -> access$100
    com.google.protobuf.MessageLite access$700(com.google.protobuf.GeneratedMessageLite$GeneratedExtension) -> access$700
com.google.protobuf.Internal -> com.google.protobuf.Internal:
    java.lang.String stringDefaultValue(java.lang.String) -> stringDefaultValue
    com.google.protobuf.ByteString bytesDefaultValue(java.lang.String) -> bytesDefaultValue
com.google.protobuf.Internal$EnumLite -> com.google.protobuf.Internal$EnumLite:
    int getNumber() -> getNumber
com.google.protobuf.Internal$EnumLiteMap -> com.google.protobuf.Internal$EnumLiteMap:
    com.google.protobuf.Internal$EnumLite findValueByNumber(int) -> findValueByNumber
com.google.protobuf.InvalidProtocolBufferException -> com.google.protobuf.InvalidProtocolBufferException:
    long serialVersionUID -> serialVersionUID
    com.google.protobuf.InvalidProtocolBufferException truncatedMessage() -> truncatedMessage
    com.google.protobuf.InvalidProtocolBufferException negativeSize() -> negativeSize
    com.google.protobuf.InvalidProtocolBufferException malformedVarint() -> malformedVarint
    com.google.protobuf.InvalidProtocolBufferException invalidTag() -> invalidTag
    com.google.protobuf.InvalidProtocolBufferException invalidEndTag() -> invalidEndTag
    com.google.protobuf.InvalidProtocolBufferException invalidWireType() -> invalidWireType
    com.google.protobuf.InvalidProtocolBufferException recursionLimitExceeded() -> recursionLimitExceeded
    com.google.protobuf.InvalidProtocolBufferException sizeLimitExceeded() -> sizeLimitExceeded
com.google.protobuf.MessageLite -> com.google.protobuf.MessageLite:
    com.google.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    boolean isInitialized() -> isInitialized
    void writeTo(com.google.protobuf.CodedOutputStream) -> writeTo
    int getSerializedSize() -> getSerializedSize
    com.google.protobuf.ByteString toByteString() -> toByteString
    byte[] toByteArray() -> toByteArray
    void writeTo(java.io.OutputStream) -> writeTo
    void writeDelimitedTo(java.io.OutputStream) -> writeDelimitedTo
    com.google.protobuf.MessageLite$Builder newBuilderForType() -> newBuilderForType
    com.google.protobuf.MessageLite$Builder toBuilder() -> toBuilder
com.google.protobuf.MessageLite$Builder -> com.google.protobuf.MessageLite$Builder:
    com.google.protobuf.MessageLite$Builder clear() -> clear
    com.google.protobuf.MessageLite build() -> build
    com.google.protobuf.MessageLite buildPartial() -> buildPartial
    com.google.protobuf.MessageLite$Builder clone() -> clone
    boolean isInitialized() -> isInitialized
    com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream) -> mergeFrom
    com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.ByteString) -> mergeFrom
    com.google.protobuf.MessageLite$Builder mergeFrom(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.protobuf.MessageLite$Builder mergeFrom(byte[]) -> mergeFrom
    com.google.protobuf.MessageLite$Builder mergeFrom(byte[],int,int) -> mergeFrom
    com.google.protobuf.MessageLite$Builder mergeFrom(byte[],com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.protobuf.MessageLite$Builder mergeFrom(byte[],int,int,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.protobuf.MessageLite$Builder mergeFrom(java.io.InputStream) -> mergeFrom
    com.google.protobuf.MessageLite$Builder mergeFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeFrom
    boolean mergeDelimitedFrom(java.io.InputStream) -> mergeDelimitedFrom
    boolean mergeDelimitedFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite) -> mergeDelimitedFrom
com.google.protobuf.UninitializedMessageException -> com.google.protobuf.UninitializedMessageException:
    long serialVersionUID -> serialVersionUID
    java.util.List missingFields -> missingFields
    java.util.List getMissingFields() -> getMissingFields
    com.google.protobuf.InvalidProtocolBufferException asInvalidProtocolBufferException() -> asInvalidProtocolBufferException
    java.lang.String buildDescription(java.util.List) -> buildDescription
com.google.protobuf.WireFormat -> com.google.protobuf.WireFormat:
    int WIRETYPE_VARINT -> WIRETYPE_VARINT
    int WIRETYPE_FIXED64 -> WIRETYPE_FIXED64
    int WIRETYPE_LENGTH_DELIMITED -> WIRETYPE_LENGTH_DELIMITED
    int WIRETYPE_START_GROUP -> WIRETYPE_START_GROUP
    int WIRETYPE_END_GROUP -> WIRETYPE_END_GROUP
    int WIRETYPE_FIXED32 -> WIRETYPE_FIXED32
    int TAG_TYPE_BITS -> TAG_TYPE_BITS
    int TAG_TYPE_MASK -> TAG_TYPE_MASK
    int MESSAGE_SET_ITEM -> MESSAGE_SET_ITEM
    int MESSAGE_SET_TYPE_ID -> MESSAGE_SET_TYPE_ID
    int MESSAGE_SET_MESSAGE -> MESSAGE_SET_MESSAGE
    int MESSAGE_SET_ITEM_TAG -> MESSAGE_SET_ITEM_TAG
    int MESSAGE_SET_ITEM_END_TAG -> MESSAGE_SET_ITEM_END_TAG
    int MESSAGE_SET_TYPE_ID_TAG -> MESSAGE_SET_TYPE_ID_TAG
    int MESSAGE_SET_MESSAGE_TAG -> MESSAGE_SET_MESSAGE_TAG
    int getTagWireType(int) -> getTagWireType
    int getTagFieldNumber(int) -> getTagFieldNumber
    int makeTag(int,int) -> makeTag
com.google.protobuf.WireFormat$1 -> com.google.protobuf.WireFormat$1:
com.google.protobuf.WireFormat$FieldType -> com.google.protobuf.WireFormat$FieldType:
    com.google.protobuf.WireFormat$FieldType DOUBLE -> DOUBLE
    com.google.protobuf.WireFormat$FieldType FLOAT -> FLOAT
    com.google.protobuf.WireFormat$FieldType INT64 -> INT64
    com.google.protobuf.WireFormat$FieldType UINT64 -> UINT64
    com.google.protobuf.WireFormat$FieldType INT32 -> INT32
    com.google.protobuf.WireFormat$FieldType FIXED64 -> FIXED64
    com.google.protobuf.WireFormat$FieldType FIXED32 -> FIXED32
    com.google.protobuf.WireFormat$FieldType BOOL -> BOOL
    com.google.protobuf.WireFormat$FieldType STRING -> STRING
    com.google.protobuf.WireFormat$FieldType GROUP -> GROUP
    com.google.protobuf.WireFormat$FieldType MESSAGE -> MESSAGE
    com.google.protobuf.WireFormat$FieldType BYTES -> BYTES
    com.google.protobuf.WireFormat$FieldType UINT32 -> UINT32
    com.google.protobuf.WireFormat$FieldType ENUM -> ENUM
    com.google.protobuf.WireFormat$FieldType SFIXED32 -> SFIXED32
    com.google.protobuf.WireFormat$FieldType SFIXED64 -> SFIXED64
    com.google.protobuf.WireFormat$FieldType SINT32 -> SINT32
    com.google.protobuf.WireFormat$FieldType SINT64 -> SINT64
    com.google.protobuf.WireFormat$JavaType javaType -> javaType
    int wireType -> wireType
    com.google.protobuf.WireFormat$FieldType[] $VALUES -> $VALUES
    com.google.protobuf.WireFormat$FieldType[] values() -> values
    com.google.protobuf.WireFormat$FieldType valueOf(java.lang.String) -> valueOf
    com.google.protobuf.WireFormat$JavaType getJavaType() -> getJavaType
    int getWireType() -> getWireType
    boolean isPackable() -> isPackable
com.google.protobuf.WireFormat$FieldType$1 -> com.google.protobuf.WireFormat$FieldType$1:
    boolean isPackable() -> isPackable
com.google.protobuf.WireFormat$FieldType$2 -> com.google.protobuf.WireFormat$FieldType$2:
    boolean isPackable() -> isPackable
com.google.protobuf.WireFormat$FieldType$3 -> com.google.protobuf.WireFormat$FieldType$3:
    boolean isPackable() -> isPackable
com.google.protobuf.WireFormat$FieldType$4 -> com.google.protobuf.WireFormat$FieldType$4:
    boolean isPackable() -> isPackable
com.google.protobuf.WireFormat$JavaType -> com.google.protobuf.WireFormat$JavaType:
    com.google.protobuf.WireFormat$JavaType INT -> INT
    com.google.protobuf.WireFormat$JavaType LONG -> LONG
    com.google.protobuf.WireFormat$JavaType FLOAT -> FLOAT
    com.google.protobuf.WireFormat$JavaType DOUBLE -> DOUBLE
    com.google.protobuf.WireFormat$JavaType BOOLEAN -> BOOLEAN
    com.google.protobuf.WireFormat$JavaType STRING -> STRING
    com.google.protobuf.WireFormat$JavaType BYTE_STRING -> BYTE_STRING
    com.google.protobuf.WireFormat$JavaType ENUM -> ENUM
    com.google.protobuf.WireFormat$JavaType MESSAGE -> MESSAGE
    java.lang.Object defaultDefault -> defaultDefault
    com.google.protobuf.WireFormat$JavaType[] $VALUES -> $VALUES
    com.google.protobuf.WireFormat$JavaType[] values() -> values
    com.google.protobuf.WireFormat$JavaType valueOf(java.lang.String) -> valueOf
    java.lang.Object getDefaultDefault() -> getDefaultDefault
com.j256.ormlite.android.AndroidCompiledStatement -> com.j256.ormlite.android.AndroidCompiledStatement:
    java.lang.String sql -> sql
    android.database.sqlite.SQLiteDatabase db -> db
    com.j256.ormlite.stmt.StatementBuilder$StatementType type -> type
    android.database.Cursor cursor -> cursor
    java.util.List args -> args
    java.lang.Integer max -> max
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    com.j256.ormlite.support.DatabaseResults runQuery(com.j256.ormlite.dao.ObjectCache) -> runQuery
    int runUpdate() -> runUpdate
    int runExecute() -> runExecute
    void close() -> close
    void setObject(int,java.lang.Object,com.j256.ormlite.field.SqlType) -> setObject
    void setMaxRows(int) -> setMaxRows
    android.database.Cursor getCursor() -> getCursor
    void isInPrep() -> isInPrep
com.j256.ormlite.android.AndroidConnectionSource -> com.j256.ormlite.android.AndroidConnectionSource:
    com.j256.ormlite.logger.Logger logger -> logger
    android.database.sqlite.SQLiteOpenHelper helper -> helper
    android.database.sqlite.SQLiteDatabase sqliteDatabase -> sqliteDatabase
    com.j256.ormlite.android.AndroidDatabaseConnection connection -> connection
    boolean isOpen -> isOpen
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.support.DatabaseConnection getReadOnlyConnection() -> getReadOnlyConnection
    com.j256.ormlite.support.DatabaseConnection getReadWriteConnection() -> getReadWriteConnection
    void releaseConnection(com.j256.ormlite.support.DatabaseConnection) -> releaseConnection
    boolean saveSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> saveSpecialConnection
    void clearSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> clearSpecialConnection
    void close() -> close
    com.j256.ormlite.db.DatabaseType getDatabaseType() -> getDatabaseType
    boolean isOpen() -> isOpen
com.j256.ormlite.android.AndroidDatabaseConnection -> com.j256.ormlite.android.AndroidDatabaseConnection:
    com.j256.ormlite.logger.Logger logger -> logger
    android.database.sqlite.SQLiteDatabase db -> db
    boolean readWrite -> readWrite
    boolean isAutoCommitSupported() -> isAutoCommitSupported
    boolean getAutoCommit() -> getAutoCommit
    void setAutoCommit(boolean) -> setAutoCommit
    java.sql.Savepoint setSavePoint(java.lang.String) -> setSavePoint
    boolean isReadWrite() -> isReadWrite
    void commit(java.sql.Savepoint) -> commit
    void rollback(java.sql.Savepoint) -> rollback
    com.j256.ormlite.support.CompiledStatement compileStatement(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType,com.j256.ormlite.field.FieldType[]) -> compileStatement
    int insert(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.support.GeneratedKeyHolder) -> insert
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> update
    int delete(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> delete
    java.lang.Object queryForOne(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.stmt.GenericRowMapper,com.j256.ormlite.dao.ObjectCache) -> queryForOne
    long queryForLong(java.lang.String) -> queryForLong
    long queryForLong(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> queryForLong
    void close() -> close
    boolean isClosed() -> isClosed
    boolean isTableExists(java.lang.String) -> isTableExists
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],java.lang.String) -> update
    void bindArgs(android.database.sqlite.SQLiteStatement,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> bindArgs
    java.lang.String[] toStrings(java.lang.Object[]) -> toStrings
com.j256.ormlite.android.AndroidDatabaseConnection$1 -> com.j256.ormlite.android.AndroidDatabaseConnection$1:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> $SwitchMap$com$j256$ormlite$field$SqlType
com.j256.ormlite.android.AndroidDatabaseConnection$OurSavePoint -> com.j256.ormlite.android.AndroidDatabaseConnection$OurSavePoint:
    java.lang.String name -> name
    int getSavepointId() -> getSavepointId
    java.lang.String getSavepointName() -> getSavepointName
com.j256.ormlite.android.AndroidDatabaseResults -> com.j256.ormlite.android.AndroidDatabaseResults:
    android.database.Cursor cursor -> cursor
    com.j256.ormlite.dao.ObjectCache objectCache -> objectCache
    boolean firstCall -> firstCall
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    int getColumnCount() -> getColumnCount
    boolean next() -> next
    int findColumn(java.lang.String) -> findColumn
    java.lang.String getString(int) -> getString
    boolean getBoolean(int) -> getBoolean
    char getChar(int) -> getChar
    byte getByte(int) -> getByte
    byte[] getBytes(int) -> getBytes
    short getShort(int) -> getShort
    int getInt(int) -> getInt
    long getLong(int) -> getLong
    float getFloat(int) -> getFloat
    double getDouble(int) -> getDouble
    java.sql.Timestamp getTimestamp(int) -> getTimestamp
    java.io.InputStream getBlobStream(int) -> getBlobStream
    java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    boolean wasNull(int) -> wasNull
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    android.database.Cursor getRawCursor() -> getRawCursor
com.j256.ormlite.android.AndroidLog -> com.j256.ormlite.android.AndroidLog:
    java.lang.String ALL_LOGS_NAME -> ALL_LOGS_NAME
    int REFRESH_LEVEL_CACHE_EVERY -> REFRESH_LEVEL_CACHE_EVERY
    int MAX_TAG_LENGTH -> MAX_TAG_LENGTH
    java.lang.String className -> className
    int levelCacheC -> levelCacheC
    boolean[] levelCache -> levelCache
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> log
    void refreshLevelCache() -> refreshLevelCache
    boolean isLevelEnabledInternal(int) -> isLevelEnabledInternal
    int levelToAndroidLevel(com.j256.ormlite.logger.Log$Level) -> levelToAndroidLevel
com.j256.ormlite.android.AndroidLog$1 -> com.j256.ormlite.android.AndroidLog$1:
    int[] $SwitchMap$com$j256$ormlite$logger$Log$Level -> $SwitchMap$com$j256$ormlite$logger$Log$Level
com.j256.ormlite.android.DatabaseTableConfigUtil -> com.j256.ormlite.android.DatabaseTableConfigUtil:
    java.lang.Class annotationFactoryClazz -> annotationFactoryClazz
    java.lang.reflect.Field elementsField -> elementsField
    java.lang.Class annotationMemberClazz -> annotationMemberClazz
    java.lang.reflect.Field nameField -> nameField
    java.lang.reflect.Field valueField -> valueField
    int workedC -> workedC
    int[] configFieldNums -> configFieldNums
    com.j256.ormlite.table.DatabaseTableConfig fromClass(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> fromClass
    int getWorkedC() -> getWorkedC
    int[] lookupClasses() -> lookupClasses
    int configFieldNameToNum(java.lang.String) -> configFieldNameToNum
    com.j256.ormlite.field.DatabaseFieldConfig configFromField(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.reflect.Field) -> configFromField
    com.j256.ormlite.field.DatabaseFieldConfig buildConfig(com.j256.ormlite.field.DatabaseField,java.lang.String,java.lang.reflect.Field) -> buildConfig
    void assignConfigField(int,com.j256.ormlite.field.DatabaseFieldConfig,java.lang.reflect.Field,java.lang.Object) -> assignConfigField
    java.lang.String valueIfNotBlank(java.lang.String) -> valueIfNotBlank
com.j256.ormlite.android.DatabaseTableConfigUtil$DatabaseFieldSample -> com.j256.ormlite.android.DatabaseTableConfigUtil$DatabaseFieldSample:
    java.lang.String field -> field
com.j256.ormlite.android.apptools.OpenHelperManager -> com.j256.ormlite.android.apptools.OpenHelperManager:
    java.lang.String HELPER_CLASS_RESOURCE_NAME -> HELPER_CLASS_RESOURCE_NAME
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.Class helperClass -> helperClass
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean wasClosed -> wasClosed
    int instanceCount -> instanceCount
    void setOpenHelperClass(java.lang.Class) -> setOpenHelperClass
    void setHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> setHelper
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper(android.content.Context,java.lang.Class) -> getHelper
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper(android.content.Context) -> getHelper
    void release() -> release
    void releaseHelper() -> releaseHelper
    void innerSetHelperClass(java.lang.Class) -> innerSetHelperClass
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper loadHelper(android.content.Context,java.lang.Class) -> loadHelper
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper constructHelper(android.content.Context,java.lang.Class) -> constructHelper
    java.lang.Class lookupHelperClass(android.content.Context,java.lang.Class) -> lookupHelperClass
com.j256.ormlite.android.apptools.OrmLiteBaseActivity -> com.j256.ormlite.android.apptools.OrmLiteBaseActivity:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteBaseActivityGroup -> com.j256.ormlite.android.apptools.OrmLiteBaseActivityGroup:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteBaseListActivity -> com.j256.ormlite.android.apptools.OrmLiteBaseListActivity:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteBaseService -> com.j256.ormlite.android.apptools.OrmLiteBaseService:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteBaseTabActivity -> com.j256.ormlite.android.apptools.OrmLiteBaseTabActivity:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteConfigUtil -> com.j256.ormlite.android.apptools.OrmLiteConfigUtil:
    java.lang.String RESOURCE_DIR_NAME -> RESOURCE_DIR_NAME
    java.lang.String RAW_DIR_NAME -> RAW_DIR_NAME
    int maxFindSourceLevel -> maxFindSourceLevel
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    void main(java.lang.String[]) -> main
    void writeConfigFile(java.lang.String) -> writeConfigFile
    void writeConfigFile(java.io.File) -> writeConfigFile
    void writeConfigFile(java.lang.String,java.lang.Class[]) -> writeConfigFile
    void writeConfigFile(java.io.File,java.lang.Class[]) -> writeConfigFile
    void writeConfigFile(java.io.OutputStream,java.lang.Class[]) -> writeConfigFile
    java.io.File findRawDir(java.io.File) -> findRawDir
    void writeHeader(java.io.BufferedWriter) -> writeHeader
    void findAnnotatedClasses(java.io.BufferedWriter,java.io.File,int) -> findAnnotatedClasses
    void writeConfigForTable(java.io.BufferedWriter,java.lang.Class) -> writeConfigForTable
    boolean classHasAnnotations(java.lang.Class) -> classHasAnnotations
    java.lang.String getPackageOfClass(java.io.File) -> getPackageOfClass
    java.io.File findResRawDir(java.io.File) -> findResRawDir
com.j256.ormlite.android.apptools.OrmLiteConfigUtil$1 -> com.j256.ormlite.android.apptools.OrmLiteConfigUtil$1:
    boolean accept(java.io.File) -> accept
com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper -> com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.android.AndroidConnectionSource connectionSource -> connectionSource
    boolean isOpen -> isOpen
    void onCreate(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource,int,int) -> onUpgrade
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void close() -> close
    boolean isOpen() -> isOpen
    com.j256.ormlite.dao.Dao getDao(java.lang.Class) -> getDao
    com.j256.ormlite.dao.RuntimeExceptionDao getRuntimeExceptionDao(java.lang.Class) -> getRuntimeExceptionDao
    java.io.InputStream openFileId(android.content.Context,int) -> openFileId
    java.io.InputStream openFile(java.io.File) -> openFile
com.j256.ormlite.dao.BaseDaoImpl -> com.j256.ormlite.dao.BaseDaoImpl:
    boolean initialized -> initialized
    com.j256.ormlite.stmt.StatementExecutor statementExecutor -> statementExecutor
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    java.lang.Class dataClass -> dataClass
    com.j256.ormlite.table.DatabaseTableConfig tableConfig -> tableConfig
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    com.j256.ormlite.dao.CloseableIterator lastIterator -> lastIterator
    java.lang.ThreadLocal daoConfigLevelLocal -> daoConfigLevelLocal
    com.j256.ormlite.dao.ReferenceObjectCache defaultObjectCache -> defaultObjectCache
    com.j256.ormlite.dao.ObjectCache objectCache -> objectCache
    void initialize() -> initialize
    java.lang.Object queryForId(java.lang.Object) -> queryForId
    java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery) -> queryForFirst
    java.util.List queryForAll() -> queryForAll
    java.util.List queryForEq(java.lang.String,java.lang.Object) -> queryForEq
    com.j256.ormlite.stmt.QueryBuilder queryBuilder() -> queryBuilder
    com.j256.ormlite.stmt.UpdateBuilder updateBuilder() -> updateBuilder
    com.j256.ormlite.stmt.DeleteBuilder deleteBuilder() -> deleteBuilder
    java.util.List query(com.j256.ormlite.stmt.PreparedQuery) -> query
    java.util.List queryForMatching(java.lang.Object) -> queryForMatching
    java.util.List queryForMatchingArgs(java.lang.Object) -> queryForMatchingArgs
    java.util.List queryForFieldValues(java.util.Map) -> queryForFieldValues
    java.util.List queryForFieldValuesArgs(java.util.Map) -> queryForFieldValuesArgs
    java.lang.Object queryForSameId(java.lang.Object) -> queryForSameId
    int create(java.lang.Object) -> create
    java.lang.Object createIfNotExists(java.lang.Object) -> createIfNotExists
    com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object) -> createOrUpdate
    int update(java.lang.Object) -> update
    int updateId(java.lang.Object,java.lang.Object) -> updateId
    int update(com.j256.ormlite.stmt.PreparedUpdate) -> update
    int refresh(java.lang.Object) -> refresh
    int delete(java.lang.Object) -> delete
    int deleteById(java.lang.Object) -> deleteById
    int delete(java.util.Collection) -> delete
    int deleteIds(java.util.Collection) -> deleteIds
    int delete(com.j256.ormlite.stmt.PreparedDelete) -> delete
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator seperateIterator() -> seperateIterator
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(com.j256.ormlite.stmt.PreparedQuery) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery) -> iterator
    com.j256.ormlite.dao.CloseableIterator seperateIterator(com.j256.ormlite.stmt.PreparedQuery) -> seperateIterator
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[]) -> queryRaw
    int executeRaw(java.lang.String,java.lang.String[]) -> executeRaw
    int updateRaw(java.lang.String,java.lang.String[]) -> updateRaw
    java.lang.Object callBatchTasks(java.util.concurrent.Callable) -> callBatchTasks
    java.lang.String objectToString(java.lang.Object) -> objectToString
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    java.lang.Object extractId(java.lang.Object) -> extractId
    java.lang.Class getDataClass() -> getDataClass
    com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class) -> findForeignFieldType
    boolean isUpdatable() -> isUpdatable
    boolean isTableExists() -> isTableExists
    long countOf() -> countOf
    long countOf(com.j256.ormlite.stmt.PreparedQuery) -> countOf
    com.j256.ormlite.dao.ForeignCollection getEmptyForeignCollection(java.lang.String) -> getEmptyForeignCollection
    void setObjectCache(boolean) -> setObjectCache
    void setObjectCache(com.j256.ormlite.dao.ObjectCache) -> setObjectCache
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void clearObjectCache() -> clearObjectCache
    java.lang.Object mapSelectStarRow(com.j256.ormlite.support.DatabaseResults) -> mapSelectStarRow
    com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    boolean idExists(java.lang.Object) -> idExists
    com.j256.ormlite.table.DatabaseTableConfig getTableConfig() -> getTableConfig
    com.j256.ormlite.table.TableInfo getTableInfo() -> getTableInfo
    void setConnectionSource(com.j256.ormlite.support.ConnectionSource) -> setConnectionSource
    void setTableConfig(com.j256.ormlite.table.DatabaseTableConfig) -> setTableConfig
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createDao
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createDao
    void checkForInitialized() -> checkForInitialized
    com.j256.ormlite.dao.BaseDaoImpl$DaoConfigLevel getDaoConfigLevel() -> getDaoConfigLevel
    java.util.List queryForMatching(java.lang.Object,boolean) -> queryForMatching
    java.util.List queryForFieldValues(java.util.Map,boolean) -> queryForFieldValues
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.BaseDaoImpl$1 -> com.j256.ormlite.dao.BaseDaoImpl$1:
    com.j256.ormlite.dao.BaseDaoImpl this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
com.j256.ormlite.dao.BaseDaoImpl$2 -> com.j256.ormlite.dao.BaseDaoImpl$2:
    com.j256.ormlite.stmt.PreparedQuery val$preparedQuery -> val$preparedQuery
    com.j256.ormlite.dao.BaseDaoImpl this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
com.j256.ormlite.dao.BaseDaoImpl$3 -> com.j256.ormlite.dao.BaseDaoImpl$3:
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.BaseDaoImpl$4 -> com.j256.ormlite.dao.BaseDaoImpl$4:
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.BaseDaoImpl$DaoConfigLevel -> com.j256.ormlite.dao.BaseDaoImpl$DaoConfigLevel:
    int level -> level
    java.util.List daoList -> daoList
    void addDao(com.j256.ormlite.dao.BaseDaoImpl) -> addDao
com.j256.ormlite.dao.BaseForeignCollection -> com.j256.ormlite.dao.BaseForeignCollection:
    long serialVersionUID -> serialVersionUID
    com.j256.ormlite.dao.Dao dao -> dao
    java.lang.String columnName -> columnName
    java.lang.Object fieldValue -> fieldValue
    com.j256.ormlite.stmt.PreparedQuery preparedQuery -> preparedQuery
    java.lang.String orderColumn -> orderColumn
    java.lang.Object parent -> parent
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    com.j256.ormlite.stmt.PreparedQuery getPreparedQuery() -> getPreparedQuery
com.j256.ormlite.dao.CloseableIterable -> com.j256.ormlite.dao.CloseableIterable:
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
com.j256.ormlite.dao.CloseableIterator -> com.j256.ormlite.dao.CloseableIterator:
    void close() -> close
    com.j256.ormlite.support.DatabaseResults getRawResults() -> getRawResults
    void moveToNext() -> moveToNext
com.j256.ormlite.dao.CloseableWrappedIterable -> com.j256.ormlite.dao.CloseableWrappedIterable:
    void close() -> close
com.j256.ormlite.dao.CloseableWrappedIterableImpl -> com.j256.ormlite.dao.CloseableWrappedIterableImpl:
    com.j256.ormlite.dao.CloseableIterable iterable -> iterable
    com.j256.ormlite.dao.CloseableIterator iterator -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    void close() -> close
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.Dao -> com.j256.ormlite.dao.Dao:
    java.lang.Object queryForId(java.lang.Object) -> queryForId
    java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery) -> queryForFirst
    java.util.List queryForAll() -> queryForAll
    java.util.List queryForEq(java.lang.String,java.lang.Object) -> queryForEq
    java.util.List queryForMatching(java.lang.Object) -> queryForMatching
    java.util.List queryForMatchingArgs(java.lang.Object) -> queryForMatchingArgs
    java.util.List queryForFieldValues(java.util.Map) -> queryForFieldValues
    java.util.List queryForFieldValuesArgs(java.util.Map) -> queryForFieldValuesArgs
    java.lang.Object queryForSameId(java.lang.Object) -> queryForSameId
    com.j256.ormlite.stmt.QueryBuilder queryBuilder() -> queryBuilder
    com.j256.ormlite.stmt.UpdateBuilder updateBuilder() -> updateBuilder
    com.j256.ormlite.stmt.DeleteBuilder deleteBuilder() -> deleteBuilder
    java.util.List query(com.j256.ormlite.stmt.PreparedQuery) -> query
    int create(java.lang.Object) -> create
    java.lang.Object createIfNotExists(java.lang.Object) -> createIfNotExists
    com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object) -> createOrUpdate
    int update(java.lang.Object) -> update
    int updateId(java.lang.Object,java.lang.Object) -> updateId
    int update(com.j256.ormlite.stmt.PreparedUpdate) -> update
    int refresh(java.lang.Object) -> refresh
    int delete(java.lang.Object) -> delete
    int deleteById(java.lang.Object) -> deleteById
    int delete(java.util.Collection) -> delete
    int deleteIds(java.util.Collection) -> deleteIds
    int delete(com.j256.ormlite.stmt.PreparedDelete) -> delete
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery) -> iterator
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(com.j256.ormlite.stmt.PreparedQuery) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[]) -> queryRaw
    int executeRaw(java.lang.String,java.lang.String[]) -> executeRaw
    int updateRaw(java.lang.String,java.lang.String[]) -> updateRaw
    java.lang.Object callBatchTasks(java.util.concurrent.Callable) -> callBatchTasks
    java.lang.String objectToString(java.lang.Object) -> objectToString
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    java.lang.Object extractId(java.lang.Object) -> extractId
    java.lang.Class getDataClass() -> getDataClass
    com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class) -> findForeignFieldType
    boolean isUpdatable() -> isUpdatable
    boolean isTableExists() -> isTableExists
    long countOf() -> countOf
    long countOf(com.j256.ormlite.stmt.PreparedQuery) -> countOf
    com.j256.ormlite.dao.ForeignCollection getEmptyForeignCollection(java.lang.String) -> getEmptyForeignCollection
    void setObjectCache(boolean) -> setObjectCache
    void setObjectCache(com.j256.ormlite.dao.ObjectCache) -> setObjectCache
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void clearObjectCache() -> clearObjectCache
    java.lang.Object mapSelectStarRow(com.j256.ormlite.support.DatabaseResults) -> mapSelectStarRow
    com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    boolean idExists(java.lang.Object) -> idExists
com.j256.ormlite.dao.Dao$CreateOrUpdateStatus -> com.j256.ormlite.dao.Dao$CreateOrUpdateStatus:
    boolean created -> created
    boolean updated -> updated
    int numLinesChanged -> numLinesChanged
    boolean isCreated() -> isCreated
    boolean isUpdated() -> isUpdated
    int getNumLinesChanged() -> getNumLinesChanged
com.j256.ormlite.dao.DaoManager -> com.j256.ormlite.dao.DaoManager:
    java.util.Map configMap -> configMap
    java.util.Map classMap -> classMap
    java.util.Map tableMap -> tableMap
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createDao
    com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> lookupDao
    java.lang.Object lookupDao(com.j256.ormlite.dao.DaoManager$ClassConnectionSource,com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> lookupDao
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createDao
    com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> lookupDao
    void registerDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.Dao) -> registerDao
    void clearCache() -> clearCache
    void addCachedDatabaseConfigs(java.util.Collection) -> addCachedDatabaseConfigs
    com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.dao.DaoManager$ClassConnectionSource) -> lookupDao
    com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource) -> lookupDao
    java.lang.reflect.Constructor findConstructor(java.lang.Class,java.lang.Object[]) -> findConstructor
com.j256.ormlite.dao.DaoManager$ClassConnectionSource -> com.j256.ormlite.dao.DaoManager$ClassConnectionSource:
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    java.lang.Class clazz -> clazz
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource -> com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource:
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    com.j256.ormlite.table.DatabaseTableConfig tableConfig -> tableConfig
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.j256.ormlite.dao.EagerForeignCollection -> com.j256.ormlite.dao.EagerForeignCollection:
    long serialVersionUID -> serialVersionUID
    java.util.List results -> results
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iteratorThrow() -> iteratorThrow
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    void close() -> close
    void closeLastIterator() -> closeLastIterator
    boolean isEager() -> isEager
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.util.Iterator iterator() -> iterator
    java.util.List access$000(com.j256.ormlite.dao.EagerForeignCollection) -> access$000
com.j256.ormlite.dao.EagerForeignCollection$1 -> com.j256.ormlite.dao.EagerForeignCollection$1:
    java.util.Iterator iterator -> iterator
    java.lang.Object last -> last
    com.j256.ormlite.dao.EagerForeignCollection this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    void close() -> close
    com.j256.ormlite.support.DatabaseResults getRawResults() -> getRawResults
    void moveToNext() -> moveToNext
com.j256.ormlite.dao.ForeignCollection -> com.j256.ormlite.dao.ForeignCollection:
    com.j256.ormlite.dao.CloseableIterator iteratorThrow() -> iteratorThrow
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    boolean isEager() -> isEager
com.j256.ormlite.dao.GenericRawResults -> com.j256.ormlite.dao.GenericRawResults:
    int getNumberColumns() -> getNumberColumns
    java.lang.String[] getColumnNames() -> getColumnNames
    java.util.List getResults() -> getResults
    void close() -> close
com.j256.ormlite.dao.LazyForeignCollection -> com.j256.ormlite.dao.LazyForeignCollection:
    long serialVersionUID -> serialVersionUID
    com.j256.ormlite.dao.CloseableIterator lastIterator -> lastIterator
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iteratorThrow() -> iteratorThrow
    com.j256.ormlite.dao.CloseableIterator seperateIteratorThrow() -> seperateIteratorThrow
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    boolean isEager() -> isEager
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.LazyForeignCollection$1 -> com.j256.ormlite.dao.LazyForeignCollection$1:
    com.j256.ormlite.dao.LazyForeignCollection this$0 -> this$0
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.LruObjectCache -> com.j256.ormlite.dao.LruObjectCache:
    int capacity -> capacity
    java.util.concurrent.ConcurrentHashMap classMaps -> classMaps
    java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> put
    void clear(java.lang.Class) -> clear
    void clearAll() -> clearAll
    void remove(java.lang.Class,java.lang.Object) -> remove
    java.lang.Object updateId(java.lang.Class,java.lang.Object,java.lang.Object) -> updateId
    int size(java.lang.Class) -> size
    int sizeAll() -> sizeAll
    java.util.Map getMapForClass(java.lang.Class) -> getMapForClass
com.j256.ormlite.dao.LruObjectCache$LimitedLinkedHashMap -> com.j256.ormlite.dao.LruObjectCache$LimitedLinkedHashMap:
    long serialVersionUID -> serialVersionUID
    int capacity -> capacity
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.j256.ormlite.dao.ObjectCache -> com.j256.ormlite.dao.ObjectCache:
    java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> put
    void remove(java.lang.Class,java.lang.Object) -> remove
    java.lang.Object updateId(java.lang.Class,java.lang.Object,java.lang.Object) -> updateId
    void clear(java.lang.Class) -> clear
    void clearAll() -> clearAll
    int size(java.lang.Class) -> size
    int sizeAll() -> sizeAll
com.j256.ormlite.dao.RawRowMapper -> com.j256.ormlite.dao.RawRowMapper:
    java.lang.Object mapRow(java.lang.String[],java.lang.String[]) -> mapRow
com.j256.ormlite.dao.ReferenceObjectCache -> com.j256.ormlite.dao.ReferenceObjectCache:
    java.util.concurrent.ConcurrentHashMap classMaps -> classMaps
    boolean useWeak -> useWeak
    com.j256.ormlite.dao.ReferenceObjectCache makeWeakCache() -> makeWeakCache
    com.j256.ormlite.dao.ReferenceObjectCache makeSoftCache() -> makeSoftCache
    java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> put
    void clear(java.lang.Class) -> clear
    void clearAll() -> clearAll
    void remove(java.lang.Class,java.lang.Object) -> remove
    java.lang.Object updateId(java.lang.Class,java.lang.Object,java.lang.Object) -> updateId
    int size(java.lang.Class) -> size
    int sizeAll() -> sizeAll
    void cleanNullReferences(java.lang.Class) -> cleanNullReferences
    void cleanNullReferencesAll() -> cleanNullReferencesAll
    void cleanMap(java.util.Map) -> cleanMap
    java.util.Map getMapForClass(java.lang.Class) -> getMapForClass
com.j256.ormlite.dao.RuntimeExceptionDao -> com.j256.ormlite.dao.RuntimeExceptionDao:
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.dao.RuntimeExceptionDao createDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createDao
    com.j256.ormlite.dao.RuntimeExceptionDao createDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createDao
    java.lang.Object queryForId(java.lang.Object) -> queryForId
    java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery) -> queryForFirst
    java.util.List queryForAll() -> queryForAll
    java.util.List queryForEq(java.lang.String,java.lang.Object) -> queryForEq
    java.util.List queryForMatching(java.lang.Object) -> queryForMatching
    java.util.List queryForMatchingArgs(java.lang.Object) -> queryForMatchingArgs
    java.util.List queryForFieldValues(java.util.Map) -> queryForFieldValues
    java.util.List queryForFieldValuesArgs(java.util.Map) -> queryForFieldValuesArgs
    java.lang.Object queryForSameId(java.lang.Object) -> queryForSameId
    com.j256.ormlite.stmt.QueryBuilder queryBuilder() -> queryBuilder
    com.j256.ormlite.stmt.UpdateBuilder updateBuilder() -> updateBuilder
    com.j256.ormlite.stmt.DeleteBuilder deleteBuilder() -> deleteBuilder
    java.util.List query(com.j256.ormlite.stmt.PreparedQuery) -> query
    int create(java.lang.Object) -> create
    java.lang.Object createIfNotExists(java.lang.Object) -> createIfNotExists
    com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object) -> createOrUpdate
    int update(java.lang.Object) -> update
    int updateId(java.lang.Object,java.lang.Object) -> updateId
    int update(com.j256.ormlite.stmt.PreparedUpdate) -> update
    int refresh(java.lang.Object) -> refresh
    int delete(java.lang.Object) -> delete
    int deleteById(java.lang.Object) -> deleteById
    int delete(java.util.Collection) -> delete
    int deleteIds(java.util.Collection) -> deleteIds
    int delete(com.j256.ormlite.stmt.PreparedDelete) -> delete
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(com.j256.ormlite.stmt.PreparedQuery) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery) -> iterator
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[]) -> queryRaw
    int executeRaw(java.lang.String,java.lang.String[]) -> executeRaw
    int updateRaw(java.lang.String,java.lang.String[]) -> updateRaw
    java.lang.Object callBatchTasks(java.util.concurrent.Callable) -> callBatchTasks
    java.lang.String objectToString(java.lang.Object) -> objectToString
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    java.lang.Object extractId(java.lang.Object) -> extractId
    java.lang.Class getDataClass() -> getDataClass
    com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class) -> findForeignFieldType
    boolean isUpdatable() -> isUpdatable
    boolean isTableExists() -> isTableExists
    long countOf() -> countOf
    long countOf(com.j256.ormlite.stmt.PreparedQuery) -> countOf
    com.j256.ormlite.dao.ForeignCollection getEmptyForeignCollection(java.lang.String) -> getEmptyForeignCollection
    void setObjectCache(boolean) -> setObjectCache
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void setObjectCache(com.j256.ormlite.dao.ObjectCache) -> setObjectCache
    void clearObjectCache() -> clearObjectCache
    java.lang.Object mapSelectStarRow(com.j256.ormlite.support.DatabaseResults) -> mapSelectStarRow
    com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    boolean idExists(java.lang.Object) -> idExists
com.j256.ormlite.db.BaseDatabaseType -> com.j256.ormlite.db.BaseDatabaseType:
    java.lang.String DEFAULT_SEQUENCE_SUFFIX -> DEFAULT_SEQUENCE_SUFFIX
    java.sql.Driver driver -> driver
    java.lang.String getDriverClassName() -> getDriverClassName
    void loadDriver() -> loadDriver
    void setDriver(java.sql.Driver) -> setDriver
    void appendColumnArg(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> appendColumnArg
    void appendStringType(java.lang.StringBuilder,int) -> appendStringType
    void appendLongStringType(java.lang.StringBuilder,int) -> appendLongStringType
    void appendDateType(java.lang.StringBuilder,int) -> appendDateType
    void appendBooleanType(java.lang.StringBuilder,int) -> appendBooleanType
    void appendCharType(java.lang.StringBuilder,int) -> appendCharType
    void appendByteType(java.lang.StringBuilder,int) -> appendByteType
    void appendShortType(java.lang.StringBuilder,int) -> appendShortType
    void appendIntegerType(java.lang.StringBuilder,int) -> appendIntegerType
    void appendLongType(java.lang.StringBuilder,int) -> appendLongType
    void appendFloatType(java.lang.StringBuilder,int) -> appendFloatType
    void appendDoubleType(java.lang.StringBuilder,int) -> appendDoubleType
    void appendByteArrayType(java.lang.StringBuilder,int) -> appendByteArrayType
    void appendSerializableType(java.lang.StringBuilder,int) -> appendSerializableType
    void appendBigDecimalNumericType(java.lang.StringBuilder,int) -> appendBigDecimalNumericType
    void appendDefaultValue(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.lang.Object) -> appendDefaultValue
    void configureGeneratedIdSequence(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List) -> configureGeneratedIdSequence
    void configureGeneratedId(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> configureGeneratedId
    void configureId(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List) -> configureId
    void addPrimaryKeySql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addPrimaryKeySql
    boolean generatedIdSqlAtEnd() -> generatedIdSqlAtEnd
    void addUniqueComboSql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addUniqueComboSql
    void dropColumnArg(com.j256.ormlite.field.FieldType,java.util.List,java.util.List) -> dropColumnArg
    void appendEscapedWord(java.lang.StringBuilder,java.lang.String) -> appendEscapedWord
    void appendEscapedEntityName(java.lang.StringBuilder,java.lang.String) -> appendEscapedEntityName
    java.lang.String generateIdSequenceName(java.lang.String,com.j256.ormlite.field.FieldType) -> generateIdSequenceName
    java.lang.String getCommentLinePrefix() -> getCommentLinePrefix
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> getFieldConverter
    boolean isIdSequenceNeeded() -> isIdSequenceNeeded
    boolean isVarcharFieldWidthSupported() -> isVarcharFieldWidthSupported
    boolean isLimitSqlSupported() -> isLimitSqlSupported
    boolean isOffsetSqlSupported() -> isOffsetSqlSupported
    boolean isOffsetLimitArgument() -> isOffsetLimitArgument
    boolean isLimitAfterSelect() -> isLimitAfterSelect
    void appendLimitValue(java.lang.StringBuilder,long,java.lang.Long) -> appendLimitValue
    void appendOffsetValue(java.lang.StringBuilder,long) -> appendOffsetValue
    void appendSelectNextValFromSequence(java.lang.StringBuilder,java.lang.String) -> appendSelectNextValFromSequence
    void appendCreateTableSuffix(java.lang.StringBuilder) -> appendCreateTableSuffix
    boolean isCreateTableReturnsZero() -> isCreateTableReturnsZero
    boolean isEntityNamesMustBeUpCase() -> isEntityNamesMustBeUpCase
    boolean isNestedSavePointsSupported() -> isNestedSavePointsSupported
    java.lang.String getPingStatement() -> getPingStatement
    boolean isBatchUseTransaction() -> isBatchUseTransaction
    boolean isTruncateSupported() -> isTruncateSupported
    boolean isCreateIfNotExistsSupported() -> isCreateIfNotExistsSupported
    boolean isCreateIndexIfNotExistsSupported() -> isCreateIndexIfNotExistsSupported
    boolean isSelectSequenceBeforeInsert() -> isSelectSequenceBeforeInsert
    boolean isAllowGeneratedIdInsertSupported() -> isAllowGeneratedIdInsertSupported
    void appendCanBeNull(java.lang.StringBuilder,com.j256.ormlite.field.FieldType) -> appendCanBeNull
    void addSingleUnique(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List) -> addSingleUnique
com.j256.ormlite.db.BaseDatabaseType$1 -> com.j256.ormlite.db.BaseDatabaseType$1:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> $SwitchMap$com$j256$ormlite$field$SqlType
com.j256.ormlite.db.BaseDatabaseType$BooleanNumberFieldConverter -> com.j256.ormlite.db.BaseDatabaseType$BooleanNumberFieldConverter:
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    boolean isStreamType() -> isStreamType
com.j256.ormlite.db.BaseSqliteDatabaseType -> com.j256.ormlite.db.BaseSqliteDatabaseType:
    com.j256.ormlite.field.FieldConverter booleanConverter -> booleanConverter
    void configureGeneratedId(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> configureGeneratedId
    boolean generatedIdSqlAtEnd() -> generatedIdSqlAtEnd
    boolean isVarcharFieldWidthSupported() -> isVarcharFieldWidthSupported
    boolean isCreateTableReturnsZero() -> isCreateTableReturnsZero
    boolean isCreateIfNotExistsSupported() -> isCreateIfNotExistsSupported
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> getFieldConverter
com.j256.ormlite.db.BaseSqliteDatabaseType$1 -> com.j256.ormlite.db.BaseSqliteDatabaseType$1:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> $SwitchMap$com$j256$ormlite$field$SqlType
com.j256.ormlite.db.DatabaseType -> com.j256.ormlite.db.DatabaseType:
    boolean isDatabaseUrlThisType(java.lang.String,java.lang.String) -> isDatabaseUrlThisType
    void loadDriver() -> loadDriver
    void setDriver(java.sql.Driver) -> setDriver
    void appendColumnArg(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> appendColumnArg
    void addPrimaryKeySql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addPrimaryKeySql
    void addUniqueComboSql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addUniqueComboSql
    void dropColumnArg(com.j256.ormlite.field.FieldType,java.util.List,java.util.List) -> dropColumnArg
    void appendEscapedEntityName(java.lang.StringBuilder,java.lang.String) -> appendEscapedEntityName
    void appendEscapedWord(java.lang.StringBuilder,java.lang.String) -> appendEscapedWord
    java.lang.String generateIdSequenceName(java.lang.String,com.j256.ormlite.field.FieldType) -> generateIdSequenceName
    java.lang.String getCommentLinePrefix() -> getCommentLinePrefix
    boolean isIdSequenceNeeded() -> isIdSequenceNeeded
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> getFieldConverter
    boolean isVarcharFieldWidthSupported() -> isVarcharFieldWidthSupported
    boolean isLimitSqlSupported() -> isLimitSqlSupported
    boolean isLimitAfterSelect() -> isLimitAfterSelect
    void appendLimitValue(java.lang.StringBuilder,long,java.lang.Long) -> appendLimitValue
    boolean isOffsetSqlSupported() -> isOffsetSqlSupported
    boolean isOffsetLimitArgument() -> isOffsetLimitArgument
    void appendOffsetValue(java.lang.StringBuilder,long) -> appendOffsetValue
    void appendSelectNextValFromSequence(java.lang.StringBuilder,java.lang.String) -> appendSelectNextValFromSequence
    void appendCreateTableSuffix(java.lang.StringBuilder) -> appendCreateTableSuffix
    boolean isCreateTableReturnsZero() -> isCreateTableReturnsZero
    boolean isEntityNamesMustBeUpCase() -> isEntityNamesMustBeUpCase
    boolean isNestedSavePointsSupported() -> isNestedSavePointsSupported
    java.lang.String getPingStatement() -> getPingStatement
    boolean isBatchUseTransaction() -> isBatchUseTransaction
    boolean isTruncateSupported() -> isTruncateSupported
    boolean isCreateIfNotExistsSupported() -> isCreateIfNotExistsSupported
    boolean isCreateIndexIfNotExistsSupported() -> isCreateIndexIfNotExistsSupported
    boolean isSelectSequenceBeforeInsert() -> isSelectSequenceBeforeInsert
    boolean isAllowGeneratedIdInsertSupported() -> isAllowGeneratedIdInsertSupported
    java.lang.String getDatabaseName() -> getDatabaseName
com.j256.ormlite.db.SqliteAndroidDatabaseType -> com.j256.ormlite.db.SqliteAndroidDatabaseType:
    void loadDriver() -> loadDriver
    boolean isDatabaseUrlThisType(java.lang.String,java.lang.String) -> isDatabaseUrlThisType
    java.lang.String getDriverClassName() -> getDriverClassName
    java.lang.String getDatabaseName() -> getDatabaseName
    void appendDateType(java.lang.StringBuilder,int) -> appendDateType
    void appendBooleanType(java.lang.StringBuilder,int) -> appendBooleanType
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> getFieldConverter
    boolean isNestedSavePointsSupported() -> isNestedSavePointsSupported
    boolean isBatchUseTransaction() -> isBatchUseTransaction
com.j256.ormlite.db.SqliteAndroidDatabaseType$1 -> com.j256.ormlite.db.SqliteAndroidDatabaseType$1:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> $SwitchMap$com$j256$ormlite$field$SqlType
com.j256.ormlite.field.DataPersister -> com.j256.ormlite.field.DataPersister:
    java.lang.Class[] getAssociatedClasses() -> getAssociatedClasses
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    boolean isEscapedDefaultValue() -> isEscapedDefaultValue
    boolean isEscapedValue() -> isEscapedValue
    boolean isPrimitive() -> isPrimitive
    boolean isComparable() -> isComparable
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    boolean isSelfGeneratedId() -> isSelfGeneratedId
    java.lang.Object generateId() -> generateId
    int getDefaultWidth() -> getDefaultWidth
    boolean dataIsEqual(java.lang.Object,java.lang.Object) -> dataIsEqual
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.DataPersisterManager -> com.j256.ormlite.field.DataPersisterManager:
    com.j256.ormlite.field.DataPersister DEFAULT_ENUM_PERSISTER -> DEFAULT_ENUM_PERSISTER
    java.util.Map builtInMap -> builtInMap
    java.util.List registeredPersisters -> registeredPersisters
    void registerDataPersisters(com.j256.ormlite.field.DataPersister[]) -> registerDataPersisters
    void clear() -> clear
    com.j256.ormlite.field.DataPersister lookupForField(java.lang.reflect.Field) -> lookupForField
com.j256.ormlite.field.DataType -> com.j256.ormlite.field.DataType:
    com.j256.ormlite.field.DataType STRING -> STRING
    com.j256.ormlite.field.DataType LONG_STRING -> LONG_STRING
    com.j256.ormlite.field.DataType STRING_BYTES -> STRING_BYTES
    com.j256.ormlite.field.DataType BOOLEAN -> BOOLEAN
    com.j256.ormlite.field.DataType BOOLEAN_OBJ -> BOOLEAN_OBJ
    com.j256.ormlite.field.DataType DATE -> DATE
    com.j256.ormlite.field.DataType DATE_LONG -> DATE_LONG
    com.j256.ormlite.field.DataType DATE_STRING -> DATE_STRING
    com.j256.ormlite.field.DataType CHAR -> CHAR
    com.j256.ormlite.field.DataType CHAR_OBJ -> CHAR_OBJ
    com.j256.ormlite.field.DataType BYTE -> BYTE
    com.j256.ormlite.field.DataType BYTE_ARRAY -> BYTE_ARRAY
    com.j256.ormlite.field.DataType BYTE_OBJ -> BYTE_OBJ
    com.j256.ormlite.field.DataType SHORT -> SHORT
    com.j256.ormlite.field.DataType SHORT_OBJ -> SHORT_OBJ
    com.j256.ormlite.field.DataType INTEGER -> INTEGER
    com.j256.ormlite.field.DataType INTEGER_OBJ -> INTEGER_OBJ
    com.j256.ormlite.field.DataType LONG -> LONG
    com.j256.ormlite.field.DataType LONG_OBJ -> LONG_OBJ
    com.j256.ormlite.field.DataType FLOAT -> FLOAT
    com.j256.ormlite.field.DataType FLOAT_OBJ -> FLOAT_OBJ
    com.j256.ormlite.field.DataType DOUBLE -> DOUBLE
    com.j256.ormlite.field.DataType DOUBLE_OBJ -> DOUBLE_OBJ
    com.j256.ormlite.field.DataType SERIALIZABLE -> SERIALIZABLE
    com.j256.ormlite.field.DataType ENUM_STRING -> ENUM_STRING
    com.j256.ormlite.field.DataType ENUM_INTEGER -> ENUM_INTEGER
    com.j256.ormlite.field.DataType UUID -> UUID
    com.j256.ormlite.field.DataType BIG_INTEGER -> BIG_INTEGER
    com.j256.ormlite.field.DataType BIG_DECIMAL -> BIG_DECIMAL
    com.j256.ormlite.field.DataType BIG_DECIMAL_NUMERIC -> BIG_DECIMAL_NUMERIC
    com.j256.ormlite.field.DataType UNKNOWN -> UNKNOWN
    com.j256.ormlite.field.DataPersister dataPersister -> dataPersister
    com.j256.ormlite.field.DataType[] $VALUES -> $VALUES
    com.j256.ormlite.field.DataType[] values() -> values
    com.j256.ormlite.field.DataType valueOf(java.lang.String) -> valueOf
    com.j256.ormlite.field.DataPersister getDataPersister() -> getDataPersister
com.j256.ormlite.field.DatabaseField -> com.j256.ormlite.field.DatabaseField:
    java.lang.String DEFAULT_STRING -> DEFAULT_STRING
    int DEFAULT_MAX_FOREIGN_AUTO_REFRESH_LEVEL -> DEFAULT_MAX_FOREIGN_AUTO_REFRESH_LEVEL
    java.lang.String columnName() -> columnName
    com.j256.ormlite.field.DataType dataType() -> dataType
    java.lang.String defaultValue() -> defaultValue
    int width() -> width
    boolean canBeNull() -> canBeNull
    boolean id() -> id
    boolean generatedId() -> generatedId
    java.lang.String generatedIdSequence() -> generatedIdSequence
    boolean foreign() -> foreign
    boolean useGetSet() -> useGetSet
    java.lang.String unknownEnumName() -> unknownEnumName
    boolean throwIfNull() -> throwIfNull
    boolean persisted() -> persisted
    java.lang.String format() -> format
    boolean unique() -> unique
    boolean uniqueCombo() -> uniqueCombo
    boolean index() -> index
    boolean uniqueIndex() -> uniqueIndex
    java.lang.String indexName() -> indexName
    java.lang.String uniqueIndexName() -> uniqueIndexName
    boolean foreignAutoRefresh() -> foreignAutoRefresh
    int maxForeignAutoRefreshLevel() -> maxForeignAutoRefreshLevel
    java.lang.Class persisterClass() -> persisterClass
    boolean allowGeneratedIdInsert() -> allowGeneratedIdInsert
    java.lang.String columnDefinition() -> columnDefinition
    boolean foreignAutoCreate() -> foreignAutoCreate
    boolean version() -> version
com.j256.ormlite.field.DatabaseFieldConfig -> com.j256.ormlite.field.DatabaseFieldConfig:
    int DEFAULT_MAX_FOREIGN_AUTO_REFRESH_LEVEL -> DEFAULT_MAX_FOREIGN_AUTO_REFRESH_LEVEL
    int DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL -> DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL
    java.lang.Class DEFAULT_PERSISTER_CLASS -> DEFAULT_PERSISTER_CLASS
    com.j256.ormlite.field.DataPersister DEFAULT_DATA_PERSISTER -> DEFAULT_DATA_PERSISTER
    boolean DEFAULT_CAN_BE_NULL -> DEFAULT_CAN_BE_NULL
    java.lang.String fieldName -> fieldName
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.DataPersister dataPersister -> dataPersister
    java.lang.String defaultValue -> defaultValue
    int width -> width
    boolean canBeNull -> canBeNull
    boolean id -> id
    boolean generatedId -> generatedId
    java.lang.String generatedIdSequence -> generatedIdSequence
    boolean foreign -> foreign
    com.j256.ormlite.table.DatabaseTableConfig foreignTableConfig -> foreignTableConfig
    boolean useGetSet -> useGetSet
    java.lang.Enum unknownEnumValue -> unknownEnumValue
    boolean throwIfNull -> throwIfNull
    boolean persisted -> persisted
    java.lang.String format -> format
    boolean unique -> unique
    boolean uniqueCombo -> uniqueCombo
    boolean index -> index
    java.lang.String indexName -> indexName
    boolean uniqueIndex -> uniqueIndex
    java.lang.String uniqueIndexName -> uniqueIndexName
    boolean foreignAutoRefresh -> foreignAutoRefresh
    int maxForeignAutoRefreshLevel -> maxForeignAutoRefreshLevel
    boolean foreignCollection -> foreignCollection
    boolean foreignCollectionEager -> foreignCollectionEager
    java.lang.String foreignCollectionOrderColumn -> foreignCollectionOrderColumn
    java.lang.String foreignCollectionColumn -> foreignCollectionColumn
    int maxEagerForeignCollectionLevel -> maxEagerForeignCollectionLevel
    java.lang.Class persisterClass -> persisterClass
    boolean allowGeneratedIdInsert -> allowGeneratedIdInsert
    java.lang.String columnDefinition -> columnDefinition
    boolean foreignAutoCreate -> foreignAutoCreate
    boolean version -> version
    java.lang.String getFieldName() -> getFieldName
    void setFieldName(java.lang.String) -> setFieldName
    java.lang.String getColumnName() -> getColumnName
    void setColumnName(java.lang.String) -> setColumnName
    void setDataType(com.j256.ormlite.field.DataType) -> setDataType
    com.j256.ormlite.field.DataPersister getDataPersister() -> getDataPersister
    void setDataPersister(com.j256.ormlite.field.DataPersister) -> setDataPersister
    java.lang.String getDefaultValue() -> getDefaultValue
    void setDefaultValue(java.lang.String) -> setDefaultValue
    int getWidth() -> getWidth
    void setWidth(int) -> setWidth
    boolean isCanBeNull() -> isCanBeNull
    void setCanBeNull(boolean) -> setCanBeNull
    boolean isId() -> isId
    void setId(boolean) -> setId
    boolean isGeneratedId() -> isGeneratedId
    void setGeneratedId(boolean) -> setGeneratedId
    java.lang.String getGeneratedIdSequence() -> getGeneratedIdSequence
    void setGeneratedIdSequence(java.lang.String) -> setGeneratedIdSequence
    boolean isForeign() -> isForeign
    void setForeign(boolean) -> setForeign
    com.j256.ormlite.table.DatabaseTableConfig getForeignTableConfig() -> getForeignTableConfig
    void setForeignTableConfig(com.j256.ormlite.table.DatabaseTableConfig) -> setForeignTableConfig
    boolean isUseGetSet() -> isUseGetSet
    void setUseGetSet(boolean) -> setUseGetSet
    java.lang.Enum getUnknownEnumvalue() -> getUnknownEnumvalue
    java.lang.Enum getUnknownEnumValue() -> getUnknownEnumValue
    void setUnknownEnumValue(java.lang.Enum) -> setUnknownEnumValue
    boolean isThrowIfNull() -> isThrowIfNull
    void setThrowIfNull(boolean) -> setThrowIfNull
    boolean isPersisted() -> isPersisted
    void setPersisted(boolean) -> setPersisted
    java.lang.String getFormat() -> getFormat
    void setFormat(java.lang.String) -> setFormat
    boolean isUnique() -> isUnique
    void setUnique(boolean) -> setUnique
    boolean isUniqueCombo() -> isUniqueCombo
    void setUniqueCombo(boolean) -> setUniqueCombo
    void setIndex(boolean) -> setIndex
    java.lang.String getIndexName(java.lang.String) -> getIndexName
    void setIndexName(java.lang.String) -> setIndexName
    void setUniqueIndex(boolean) -> setUniqueIndex
    java.lang.String getUniqueIndexName(java.lang.String) -> getUniqueIndexName
    void setUniqueIndexName(java.lang.String) -> setUniqueIndexName
    void setForeignAutoRefresh(boolean) -> setForeignAutoRefresh
    boolean isForeignAutoRefresh() -> isForeignAutoRefresh
    int getMaxForeignAutoRefreshLevel() -> getMaxForeignAutoRefreshLevel
    void setMaxForeignAutoRefreshLevel(int) -> setMaxForeignAutoRefreshLevel
    int getMaxEagerForeignCollectionLevel() -> getMaxEagerForeignCollectionLevel
    void setMaxEagerForeignCollectionLevel(int) -> setMaxEagerForeignCollectionLevel
    void setForeignCollection(boolean) -> setForeignCollection
    boolean isForeignCollection() -> isForeignCollection
    void setForeignCollectionEager(boolean) -> setForeignCollectionEager
    boolean isForeignCollectionEager() -> isForeignCollectionEager
    void setForeignCollectionOrderColumn(java.lang.String) -> setForeignCollectionOrderColumn
    java.lang.String getForeignCollectionOrderColumn() -> getForeignCollectionOrderColumn
    void setForeignCollectionColumn(java.lang.String) -> setForeignCollectionColumn
    java.lang.String getForeignCollectionColumn() -> getForeignCollectionColumn
    java.lang.Class getPersisterClass() -> getPersisterClass
    void setPersisterClass(java.lang.Class) -> setPersisterClass
    boolean isAllowGeneratedIdInsert() -> isAllowGeneratedIdInsert
    void setAllowGeneratedIdInsert(boolean) -> setAllowGeneratedIdInsert
    java.lang.String getColumnDefinition() -> getColumnDefinition
    void setColumnDefinition(java.lang.String) -> setColumnDefinition
    boolean isForeignAutoCreate() -> isForeignAutoCreate
    void setForeignAutoCreate(boolean) -> setForeignAutoCreate
    boolean isVersion() -> isVersion
    void setVersion(boolean) -> setVersion
    com.j256.ormlite.field.DatabaseFieldConfig fromField(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.reflect.Field) -> fromField
    java.lang.reflect.Method findGetMethod(java.lang.reflect.Field,boolean) -> findGetMethod
    java.lang.reflect.Method findSetMethod(java.lang.reflect.Field,boolean) -> findSetMethod
    com.j256.ormlite.field.DatabaseFieldConfig fromDatabaseField(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.reflect.Field,com.j256.ormlite.field.DatabaseField) -> fromDatabaseField
    com.j256.ormlite.field.DatabaseFieldConfig fromDatabaseFieldAnnotations(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.reflect.Field,com.j256.ormlite.field.DatabaseFieldSimple,com.j256.ormlite.field.DatabaseFieldId,com.j256.ormlite.field.DatabaseFieldForeign,com.j256.ormlite.field.DatabaseFieldIndex,com.j256.ormlite.field.DatabaseFieldOther) -> fromDatabaseFieldAnnotations
    java.lang.Enum findMatchingEnumVal(java.lang.reflect.Field,java.lang.String) -> findMatchingEnumVal
    com.j256.ormlite.field.DatabaseFieldConfig fromForeignCollection(com.j256.ormlite.db.DatabaseType,java.lang.reflect.Field,com.j256.ormlite.field.ForeignCollectionField) -> fromForeignCollection
    java.lang.String findIndexName(java.lang.String) -> findIndexName
    java.lang.String valueIfNotBlank(java.lang.String) -> valueIfNotBlank
    java.lang.String methodFromField(java.lang.reflect.Field,java.lang.String) -> methodFromField
com.j256.ormlite.field.DatabaseFieldConfigLoader -> com.j256.ormlite.field.DatabaseFieldConfigLoader:
    java.lang.String CONFIG_FILE_START_MARKER -> CONFIG_FILE_START_MARKER
    java.lang.String CONFIG_FILE_END_MARKER -> CONFIG_FILE_END_MARKER
    int DEFAULT_MAX_FOREIGN_AUTO_REFRESH_LEVEL -> DEFAULT_MAX_FOREIGN_AUTO_REFRESH_LEVEL
    int DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL -> DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL
    java.lang.Class DEFAULT_PERSISTER_CLASS -> DEFAULT_PERSISTER_CLASS
    com.j256.ormlite.field.DataPersister DEFAULT_DATA_PERSISTER -> DEFAULT_DATA_PERSISTER
    boolean DEFAULT_CAN_BE_NULL -> DEFAULT_CAN_BE_NULL
    java.lang.String FIELD_NAME_FIELD_NAME -> FIELD_NAME_FIELD_NAME
    java.lang.String FIELD_NAME_COLUMN_NAME -> FIELD_NAME_COLUMN_NAME
    java.lang.String FIELD_NAME_DATA_PERSISTER -> FIELD_NAME_DATA_PERSISTER
    java.lang.String FIELD_NAME_DEFAULT_VALUE -> FIELD_NAME_DEFAULT_VALUE
    java.lang.String FIELD_NAME_WIDTH -> FIELD_NAME_WIDTH
    java.lang.String FIELD_NAME_CAN_BE_NULL -> FIELD_NAME_CAN_BE_NULL
    java.lang.String FIELD_NAME_ID -> FIELD_NAME_ID
    java.lang.String FIELD_NAME_GENERATED_ID -> FIELD_NAME_GENERATED_ID
    java.lang.String FIELD_NAME_GENERATED_ID_SEQUENCE -> FIELD_NAME_GENERATED_ID_SEQUENCE
    java.lang.String FIELD_NAME_FOREIGN -> FIELD_NAME_FOREIGN
    java.lang.String FIELD_NAME_USE_GET_SET -> FIELD_NAME_USE_GET_SET
    java.lang.String FIELD_NAME_UNKNOWN_ENUM_VALUE -> FIELD_NAME_UNKNOWN_ENUM_VALUE
    java.lang.String FIELD_NAME_THROW_IF_NULL -> FIELD_NAME_THROW_IF_NULL
    java.lang.String FIELD_NAME_FORMAT -> FIELD_NAME_FORMAT
    java.lang.String FIELD_NAME_UNIQUE -> FIELD_NAME_UNIQUE
    java.lang.String FIELD_NAME_UNIQUE_COMBO -> FIELD_NAME_UNIQUE_COMBO
    java.lang.String FIELD_NAME_INDEX_NAME -> FIELD_NAME_INDEX_NAME
    java.lang.String FIELD_NAME_UNIQUE_INDEX_NAME -> FIELD_NAME_UNIQUE_INDEX_NAME
    java.lang.String FIELD_NAME_FOREIGN_AUTO_REFRESH -> FIELD_NAME_FOREIGN_AUTO_REFRESH
    java.lang.String FIELD_NAME_MAX_FOREIGN_AUTO_REFRESH_LEVEL -> FIELD_NAME_MAX_FOREIGN_AUTO_REFRESH_LEVEL
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION -> FIELD_NAME_FOREIGN_COLLECTION
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_EAGER -> FIELD_NAME_FOREIGN_COLLECTION_EAGER
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN -> FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN
    java.lang.String FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL -> FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL
    java.lang.String FIELD_NAME_PERSISTER_CLASS -> FIELD_NAME_PERSISTER_CLASS
    java.lang.String FIELD_NAME_ALLOW_GENERATED_ID_INSERT -> FIELD_NAME_ALLOW_GENERATED_ID_INSERT
    java.lang.String FIELD_NAME_COLUMN_DEFINITION -> FIELD_NAME_COLUMN_DEFINITION
    java.lang.String FIELD_NAME_FOREIGN_AUTO_CREATE -> FIELD_NAME_FOREIGN_AUTO_CREATE
    java.lang.String FIELD_NAME_VERSION -> FIELD_NAME_VERSION
    com.j256.ormlite.field.DatabaseFieldConfig fromReader(java.io.BufferedReader) -> fromReader
    void write(java.io.BufferedWriter,com.j256.ormlite.field.DatabaseFieldConfig,java.lang.String) -> write
    void writeConfig(java.io.BufferedWriter,com.j256.ormlite.field.DatabaseFieldConfig,java.lang.String) -> writeConfig
    void readField(com.j256.ormlite.field.DatabaseFieldConfig,java.lang.String,java.lang.String) -> readField
com.j256.ormlite.field.DatabaseFieldForeign -> com.j256.ormlite.field.DatabaseFieldForeign:
    boolean foreign() -> foreign
    boolean foreignAutoRefresh() -> foreignAutoRefresh
    int maxForeignAutoRefreshLevel() -> maxForeignAutoRefreshLevel
    boolean foreignAutoCreate() -> foreignAutoCreate
com.j256.ormlite.field.DatabaseFieldId -> com.j256.ormlite.field.DatabaseFieldId:
    boolean id() -> id
    boolean generatedId() -> generatedId
    java.lang.String generatedIdSequence() -> generatedIdSequence
    boolean allowGeneratedIdInsert() -> allowGeneratedIdInsert
com.j256.ormlite.field.DatabaseFieldIndex -> com.j256.ormlite.field.DatabaseFieldIndex:
    boolean unique() -> unique
    boolean uniqueCombo() -> uniqueCombo
    boolean index() -> index
    boolean uniqueIndex() -> uniqueIndex
    java.lang.String indexName() -> indexName
    java.lang.String uniqueIndexName() -> uniqueIndexName
com.j256.ormlite.field.DatabaseFieldOther -> com.j256.ormlite.field.DatabaseFieldOther:
    com.j256.ormlite.field.DataType dataType() -> dataType
    java.lang.String unknownEnumName() -> unknownEnumName
    boolean throwIfNull() -> throwIfNull
    java.lang.String format() -> format
    java.lang.Class persisterClass() -> persisterClass
    boolean useGetSet() -> useGetSet
    java.lang.String columnDefinition() -> columnDefinition
    boolean version() -> version
com.j256.ormlite.field.DatabaseFieldSimple -> com.j256.ormlite.field.DatabaseFieldSimple:
    java.lang.String columnName() -> columnName
    java.lang.String defaultValue() -> defaultValue
    int width() -> width
    boolean canBeNull() -> canBeNull
com.j256.ormlite.field.FieldConverter -> com.j256.ormlite.field.FieldConverter:
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    boolean isStreamType() -> isStreamType
com.j256.ormlite.field.FieldType -> com.j256.ormlite.field.FieldType:
    java.lang.String FOREIGN_ID_FIELD_SUFFIX -> FOREIGN_ID_FIELD_SUFFIX
    boolean DEFAULT_VALUE_BOOLEAN -> DEFAULT_VALUE_BOOLEAN
    byte DEFAULT_VALUE_BYTE -> DEFAULT_VALUE_BYTE
    char DEFAULT_VALUE_CHAR -> DEFAULT_VALUE_CHAR
    short DEFAULT_VALUE_SHORT -> DEFAULT_VALUE_SHORT
    int DEFAULT_VALUE_INT -> DEFAULT_VALUE_INT
    long DEFAULT_VALUE_LONG -> DEFAULT_VALUE_LONG
    float DEFAULT_VALUE_FLOAT -> DEFAULT_VALUE_FLOAT
    double DEFAULT_VALUE_DOUBLE -> DEFAULT_VALUE_DOUBLE
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    java.lang.String tableName -> tableName
    java.lang.reflect.Field field -> field
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.DatabaseFieldConfig fieldConfig -> fieldConfig
    boolean isId -> isId
    boolean isGeneratedId -> isGeneratedId
    java.lang.String generatedIdSequence -> generatedIdSequence
    java.lang.reflect.Method fieldGetMethod -> fieldGetMethod
    java.lang.reflect.Method fieldSetMethod -> fieldSetMethod
    com.j256.ormlite.field.DataPersister dataPersister -> dataPersister
    java.lang.Object defaultValue -> defaultValue
    java.lang.Object dataTypeConfigObj -> dataTypeConfigObj
    com.j256.ormlite.field.FieldConverter fieldConverter -> fieldConverter
    com.j256.ormlite.field.FieldType foreignIdField -> foreignIdField
    java.lang.reflect.Constructor foreignConstructor -> foreignConstructor
    com.j256.ormlite.field.FieldType foreignFieldType -> foreignFieldType
    com.j256.ormlite.dao.Dao foreignDao -> foreignDao
    com.j256.ormlite.stmt.mapped.MappedQueryForId mappedQueryForId -> mappedQueryForId
    java.lang.ThreadLocal threadLevelCounters -> threadLevelCounters
    void configDaoInformation(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> configDaoInformation
    java.lang.reflect.Field getField() -> getField
    java.lang.String getFieldName() -> getFieldName
    java.lang.Class getFieldType() -> getFieldType
    java.lang.String getColumnName() -> getColumnName
    com.j256.ormlite.field.DataPersister getDataPersister() -> getDataPersister
    java.lang.Object getDataTypeConfigObj() -> getDataTypeConfigObj
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    java.lang.Object getDefaultValue() -> getDefaultValue
    int getWidth() -> getWidth
    boolean isCanBeNull() -> isCanBeNull
    boolean isId() -> isId
    boolean isGeneratedId() -> isGeneratedId
    boolean isGeneratedIdSequence() -> isGeneratedIdSequence
    java.lang.String getGeneratedIdSequence() -> getGeneratedIdSequence
    boolean isForeign() -> isForeign
    com.j256.ormlite.field.FieldType getForeignFieldType() -> getForeignFieldType
    void assignField(java.lang.Object,java.lang.Object,boolean,com.j256.ormlite.dao.ObjectCache) -> assignField
    java.lang.Object assignIdValue(java.lang.Object,java.lang.Number,com.j256.ormlite.dao.ObjectCache) -> assignIdValue
    java.lang.Object extractRawJavaFieldValue(java.lang.Object) -> extractRawJavaFieldValue
    java.lang.Object extractJavaFieldValue(java.lang.Object) -> extractJavaFieldValue
    java.lang.Object extractJavaFieldToSqlArgValue(java.lang.Object) -> extractJavaFieldToSqlArgValue
    java.lang.Object convertJavaFieldToSqlArgValue(java.lang.Object) -> convertJavaFieldToSqlArgValue
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
    com.j256.ormlite.field.FieldType getForeignIdField() -> getForeignIdField
    boolean isEscapedValue() -> isEscapedValue
    java.lang.Enum getUnknownEnumVal() -> getUnknownEnumVal
    java.lang.String getFormat() -> getFormat
    boolean isUnique() -> isUnique
    boolean isUniqueCombo() -> isUniqueCombo
    java.lang.String getIndexName() -> getIndexName
    java.lang.String getUniqueIndexName() -> getUniqueIndexName
    boolean isEscapedDefaultValue() -> isEscapedDefaultValue
    boolean isComparable() -> isComparable
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    boolean isForeignCollection() -> isForeignCollection
    com.j256.ormlite.dao.BaseForeignCollection buildForeignCollection(java.lang.Object,java.lang.Object,boolean) -> buildForeignCollection
    java.lang.Object resultToJava(com.j256.ormlite.support.DatabaseResults,java.util.Map) -> resultToJava
    boolean isSelfGeneratedId() -> isSelfGeneratedId
    boolean isAllowGeneratedIdInsert() -> isAllowGeneratedIdInsert
    java.lang.String getColumnDefinition() -> getColumnDefinition
    boolean isForeignAutoCreate() -> isForeignAutoCreate
    boolean isVersion() -> isVersion
    java.lang.Object generateId() -> generateId
    java.lang.Object getFieldValueIfNotDefault(java.lang.Object) -> getFieldValueIfNotDefault
    boolean isObjectsFieldValueDefault(java.lang.Object) -> isObjectsFieldValueDefault
    java.lang.Object getJavaDefaultValueDefault() -> getJavaDefaultValueDefault
    boolean isFieldValueDefault(java.lang.Object) -> isFieldValueDefault
    int createWithForeignDao(java.lang.Object) -> createWithForeignDao
    com.j256.ormlite.field.FieldType createFieldType(com.j256.ormlite.support.ConnectionSource,java.lang.String,java.lang.reflect.Field,java.lang.Class) -> createFieldType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void assignDataType(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.DataPersister) -> assignDataType
    com.j256.ormlite.field.FieldType$LevelCounters getLevelCounters() -> getLevelCounters
com.j256.ormlite.field.FieldType$1 -> com.j256.ormlite.field.FieldType$1:
com.j256.ormlite.field.FieldType$LevelCounters -> com.j256.ormlite.field.FieldType$LevelCounters:
    int autoRefreshlevel -> autoRefreshlevel
    int foreignCollectionLevel -> foreignCollectionLevel
com.j256.ormlite.field.ForeignCollectionField -> com.j256.ormlite.field.ForeignCollectionField:
    int MAX_EAGER_FOREIGN_COLLECTION_LEVEL -> MAX_EAGER_FOREIGN_COLLECTION_LEVEL
    boolean eager() -> eager
    int maxEagerForeignCollectionLevel() -> maxEagerForeignCollectionLevel
    java.lang.String columnName() -> columnName
    java.lang.String orderColumnName() -> orderColumnName
    java.lang.String foreignColumnName() -> foreignColumnName
com.j256.ormlite.field.SqlType -> com.j256.ormlite.field.SqlType:
    com.j256.ormlite.field.SqlType STRING -> STRING
    com.j256.ormlite.field.SqlType LONG_STRING -> LONG_STRING
    com.j256.ormlite.field.SqlType DATE -> DATE
    com.j256.ormlite.field.SqlType BOOLEAN -> BOOLEAN
    com.j256.ormlite.field.SqlType CHAR -> CHAR
    com.j256.ormlite.field.SqlType BYTE -> BYTE
    com.j256.ormlite.field.SqlType BYTE_ARRAY -> BYTE_ARRAY
    com.j256.ormlite.field.SqlType SHORT -> SHORT
    com.j256.ormlite.field.SqlType INTEGER -> INTEGER
    com.j256.ormlite.field.SqlType LONG -> LONG
    com.j256.ormlite.field.SqlType FLOAT -> FLOAT
    com.j256.ormlite.field.SqlType DOUBLE -> DOUBLE
    com.j256.ormlite.field.SqlType SERIALIZABLE -> SERIALIZABLE
    com.j256.ormlite.field.SqlType BLOB -> BLOB
    com.j256.ormlite.field.SqlType BIG_DECIMAL -> BIG_DECIMAL
    com.j256.ormlite.field.SqlType UNKNOWN -> UNKNOWN
    com.j256.ormlite.field.SqlType[] $VALUES -> $VALUES
    com.j256.ormlite.field.SqlType[] values() -> values
    com.j256.ormlite.field.SqlType valueOf(java.lang.String) -> valueOf
com.j256.ormlite.field.types.BaseDataType -> com.j256.ormlite.field.types.BaseDataType:
    com.j256.ormlite.field.SqlType sqlType -> sqlType
    java.lang.Class[] classes -> classes
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    java.lang.Class[] getAssociatedClasses() -> getAssociatedClasses
    boolean isStreamType() -> isStreamType
    java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isEscapedDefaultValue() -> isEscapedDefaultValue
    boolean isEscapedValue() -> isEscapedValue
    boolean isPrimitive() -> isPrimitive
    boolean isComparable() -> isComparable
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    boolean isSelfGeneratedId() -> isSelfGeneratedId
    java.lang.Object generateId() -> generateId
    int getDefaultWidth() -> getDefaultWidth
    boolean dataIsEqual(java.lang.Object,java.lang.Object) -> dataIsEqual
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.BaseDateType -> com.j256.ormlite.field.types.BaseDateType:
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig defaultDateFormatConfig -> defaultDateFormatConfig
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig convertDateStringConfig(com.j256.ormlite.field.FieldType) -> convertDateStringConfig
    java.util.Date parseDateString(com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig,java.lang.String) -> parseDateString
    java.lang.String normalizeDateString(com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig,java.lang.String) -> normalizeDateString
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig -> com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig:
    java.lang.ThreadLocal threadLocal -> threadLocal
    java.lang.String dateFormatStr -> dateFormatStr
    java.text.DateFormat getDateFormat() -> getDateFormat
    java.lang.String toString() -> toString
com.j256.ormlite.field.types.BaseEnumType -> com.j256.ormlite.field.types.BaseEnumType:
    java.lang.Enum enumVal(com.j256.ormlite.field.FieldType,java.lang.Object,java.lang.Enum,java.lang.Enum) -> enumVal
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
com.j256.ormlite.field.types.BigDecimalNumericType -> com.j256.ormlite.field.types.BigDecimalNumericType:
    com.j256.ormlite.field.types.BigDecimalNumericType singleTon -> singleTon
    com.j256.ormlite.field.types.BigDecimalNumericType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    boolean isAppropriateId() -> isAppropriateId
    boolean isEscapedValue() -> isEscapedValue
com.j256.ormlite.field.types.BigDecimalStringType -> com.j256.ormlite.field.types.BigDecimalStringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.BigDecimalStringType singleTon -> singleTon
    com.j256.ormlite.field.types.BigDecimalStringType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    int getDefaultWidth() -> getDefaultWidth
    boolean isAppropriateId() -> isAppropriateId
com.j256.ormlite.field.types.BigIntegerType -> com.j256.ormlite.field.types.BigIntegerType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.BigIntegerType singleTon -> singleTon
    com.j256.ormlite.field.types.BigIntegerType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    int getDefaultWidth() -> getDefaultWidth
    boolean isAppropriateId() -> isAppropriateId
com.j256.ormlite.field.types.BooleanObjectType -> com.j256.ormlite.field.types.BooleanObjectType:
    com.j256.ormlite.field.types.BooleanObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.BooleanObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    boolean isEscapedValue() -> isEscapedValue
    boolean isAppropriateId() -> isAppropriateId
com.j256.ormlite.field.types.BooleanType -> com.j256.ormlite.field.types.BooleanType:
    com.j256.ormlite.field.types.BooleanType singleTon -> singleTon
    com.j256.ormlite.field.types.BooleanType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.ByteArrayType -> com.j256.ormlite.field.types.ByteArrayType:
    com.j256.ormlite.field.types.ByteArrayType singleTon -> singleTon
    com.j256.ormlite.field.types.ByteArrayType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    boolean dataIsEqual(java.lang.Object,java.lang.Object) -> dataIsEqual
com.j256.ormlite.field.types.ByteObjectType -> com.j256.ormlite.field.types.ByteObjectType:
    com.j256.ormlite.field.types.ByteObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.ByteObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    boolean isEscapedValue() -> isEscapedValue
com.j256.ormlite.field.types.ByteType -> com.j256.ormlite.field.types.ByteType:
    com.j256.ormlite.field.types.ByteType singleTon -> singleTon
    com.j256.ormlite.field.types.ByteType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.CharType -> com.j256.ormlite.field.types.CharType:
    com.j256.ormlite.field.types.CharType singleTon -> singleTon
    com.j256.ormlite.field.types.CharType getSingleton() -> getSingleton
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.CharacterObjectType -> com.j256.ormlite.field.types.CharacterObjectType:
    com.j256.ormlite.field.types.CharacterObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.CharacterObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
com.j256.ormlite.field.types.DateLongType -> com.j256.ormlite.field.types.DateLongType:
    com.j256.ormlite.field.types.DateLongType singleTon -> singleTon
    com.j256.ormlite.field.types.DateLongType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    boolean isEscapedValue() -> isEscapedValue
com.j256.ormlite.field.types.DateStringType -> com.j256.ormlite.field.types.DateStringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.DateStringType singleTon -> singleTon
    com.j256.ormlite.field.types.DateStringType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    int getDefaultWidth() -> getDefaultWidth
com.j256.ormlite.field.types.DateType -> com.j256.ormlite.field.types.DateType:
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig defaultDateFormatConfig -> defaultDateFormatConfig
    com.j256.ormlite.field.types.DateType singleTon -> singleTon
    com.j256.ormlite.field.types.DateType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
com.j256.ormlite.field.types.DoubleObjectType -> com.j256.ormlite.field.types.DoubleObjectType:
    com.j256.ormlite.field.types.DoubleObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.DoubleObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    boolean isEscapedValue() -> isEscapedValue
com.j256.ormlite.field.types.DoubleType -> com.j256.ormlite.field.types.DoubleType:
    com.j256.ormlite.field.types.DoubleType singleTon -> singleTon
    com.j256.ormlite.field.types.DoubleType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.EnumIntegerType -> com.j256.ormlite.field.types.EnumIntegerType:
    com.j256.ormlite.field.types.EnumIntegerType singleTon -> singleTon
    com.j256.ormlite.field.types.EnumIntegerType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isEscapedValue() -> isEscapedValue
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
com.j256.ormlite.field.types.EnumStringType -> com.j256.ormlite.field.types.EnumStringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.EnumStringType singleTon -> singleTon
    com.j256.ormlite.field.types.EnumStringType getSingleton() -> getSingleton
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    int getDefaultWidth() -> getDefaultWidth
com.j256.ormlite.field.types.FloatObjectType -> com.j256.ormlite.field.types.FloatObjectType:
    com.j256.ormlite.field.types.FloatObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.FloatObjectType getSingleton() -> getSingleton
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    boolean isEscapedValue() -> isEscapedValue
com.j256.ormlite.field.types.FloatType -> com.j256.ormlite.field.types.FloatType:
    com.j256.ormlite.field.types.FloatType singleTon -> singleTon
    com.j256.ormlite.field.types.FloatType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.IntType -> com.j256.ormlite.field.types.IntType:
    com.j256.ormlite.field.types.IntType singleTon -> singleTon
    com.j256.ormlite.field.types.IntType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.IntegerObjectType -> com.j256.ormlite.field.types.IntegerObjectType:
    com.j256.ormlite.field.types.IntegerObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.IntegerObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    boolean isEscapedValue() -> isEscapedValue
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.LongObjectType -> com.j256.ormlite.field.types.LongObjectType:
    com.j256.ormlite.field.types.LongObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.LongObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    boolean isEscapedValue() -> isEscapedValue
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.LongStringType -> com.j256.ormlite.field.types.LongStringType:
    com.j256.ormlite.field.types.LongStringType singleTon -> singleTon
    com.j256.ormlite.field.types.LongStringType getSingleton() -> getSingleton
    boolean isAppropriateId() -> isAppropriateId
    int getDefaultWidth() -> getDefaultWidth
com.j256.ormlite.field.types.LongType -> com.j256.ormlite.field.types.LongType:
    com.j256.ormlite.field.types.LongType singleTon -> singleTon
    com.j256.ormlite.field.types.LongType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.SerializableType -> com.j256.ormlite.field.types.SerializableType:
    com.j256.ormlite.field.types.SerializableType singleTon -> singleTon
    com.j256.ormlite.field.types.SerializableType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    boolean isStreamType() -> isStreamType
    boolean isComparable() -> isComparable
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
com.j256.ormlite.field.types.ShortObjectType -> com.j256.ormlite.field.types.ShortObjectType:
    com.j256.ormlite.field.types.ShortObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.ShortObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    boolean isEscapedValue() -> isEscapedValue
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.ShortType -> com.j256.ormlite.field.types.ShortType:
    com.j256.ormlite.field.types.ShortType singleTon -> singleTon
    com.j256.ormlite.field.types.ShortType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.StringBytesType -> com.j256.ormlite.field.types.StringBytesType:
    java.lang.String DEFAULT_STRING_BYTES_CHARSET_NAME -> DEFAULT_STRING_BYTES_CHARSET_NAME
    com.j256.ormlite.field.types.StringBytesType singleTon -> singleTon
    com.j256.ormlite.field.types.StringBytesType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    java.lang.String getCharsetName(com.j256.ormlite.field.FieldType) -> getCharsetName
com.j256.ormlite.field.types.StringType -> com.j256.ormlite.field.types.StringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.StringType singleTon -> singleTon
    com.j256.ormlite.field.types.StringType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    int getDefaultWidth() -> getDefaultWidth
com.j256.ormlite.field.types.UuidType -> com.j256.ormlite.field.types.UuidType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.UuidType singleTon -> singleTon
    com.j256.ormlite.field.types.UuidType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isSelfGeneratedId() -> isSelfGeneratedId
    java.lang.Object generateId() -> generateId
    int getDefaultWidth() -> getDefaultWidth
com.j256.ormlite.field.types.VoidType -> com.j256.ormlite.field.types.VoidType:
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
com.j256.ormlite.logger.LocalLog -> com.j256.ormlite.logger.LocalLog:
    java.lang.String LOCAL_LOG_LEVEL_PROPERTY -> LOCAL_LOG_LEVEL_PROPERTY
    java.lang.String LOCAL_LOG_FILE_PROPERTY -> LOCAL_LOG_FILE_PROPERTY
    java.lang.String LOCAL_LOG_PROPERTIES_FILE -> LOCAL_LOG_PROPERTIES_FILE
    com.j256.ormlite.logger.Log$Level DEFAULT_LEVEL -> DEFAULT_LEVEL
    java.lang.ThreadLocal dateFormatThreadLocal -> dateFormatThreadLocal
    java.util.List classLevels -> classLevels
    java.lang.String className -> className
    com.j256.ormlite.logger.Log$Level level -> level
    java.io.PrintStream printStream -> printStream
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> log
    void flush() -> flush
    java.util.List configureClassLevels(java.io.InputStream) -> configureClassLevels
    void printMessage(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> printMessage
com.j256.ormlite.logger.LocalLog$PatternLevel -> com.j256.ormlite.logger.LocalLog$PatternLevel:
    java.util.regex.Pattern pattern -> pattern
    com.j256.ormlite.logger.Log$Level level -> level
com.j256.ormlite.logger.Log -> com.j256.ormlite.logger.Log:
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> log
com.j256.ormlite.logger.Log$Level -> com.j256.ormlite.logger.Log$Level:
    com.j256.ormlite.logger.Log$Level TRACE -> TRACE
    com.j256.ormlite.logger.Log$Level DEBUG -> DEBUG
    com.j256.ormlite.logger.Log$Level INFO -> INFO
    com.j256.ormlite.logger.Log$Level WARNING -> WARNING
    com.j256.ormlite.logger.Log$Level ERROR -> ERROR
    com.j256.ormlite.logger.Log$Level FATAL -> FATAL
    int level -> level
    com.j256.ormlite.logger.Log$Level[] $VALUES -> $VALUES
    com.j256.ormlite.logger.Log$Level[] values() -> values
    com.j256.ormlite.logger.Log$Level valueOf(java.lang.String) -> valueOf
    boolean isEnabled(com.j256.ormlite.logger.Log$Level) -> isEnabled
com.j256.ormlite.logger.Logger -> com.j256.ormlite.logger.Logger:
    java.lang.String ARG_STRING -> ARG_STRING
    int ARG_STRING_LENGTH -> ARG_STRING_LENGTH
    com.j256.ormlite.logger.Log log -> log
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    void trace(java.lang.String,java.lang.Object[]) -> trace
    void trace(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> trace
    void debug(java.lang.String,java.lang.Object[]) -> debug
    void debug(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> debug
    void info(java.lang.String,java.lang.Object[]) -> info
    void info(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> info
    void warn(java.lang.String,java.lang.Object[]) -> warn
    void warn(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> warn
    void error(java.lang.String,java.lang.Object[]) -> error
    void error(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> error
    void fatal(java.lang.String,java.lang.Object[]) -> fatal
    void fatal(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> fatal
    void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> log
    java.lang.String buildFullMessage(java.lang.String,java.lang.Object[]) -> buildFullMessage
com.j256.ormlite.logger.LoggerFactory -> com.j256.ormlite.logger.LoggerFactory:
    com.j256.ormlite.logger.LoggerFactory$LogType logType -> logType
    com.j256.ormlite.logger.Logger getLogger(java.lang.Class) -> getLogger
    com.j256.ormlite.logger.Logger getLogger(java.lang.String) -> getLogger
    java.lang.String getSimpleClassName(java.lang.String) -> getSimpleClassName
    com.j256.ormlite.logger.LoggerFactory$LogType findLogType() -> findLogType
com.j256.ormlite.logger.LoggerFactory$1 -> com.j256.ormlite.logger.LoggerFactory$1:
com.j256.ormlite.logger.LoggerFactory$LogType -> com.j256.ormlite.logger.LoggerFactory$LogType:
    com.j256.ormlite.logger.LoggerFactory$LogType ANDROID -> ANDROID
    com.j256.ormlite.logger.LoggerFactory$LogType COMMONS_LOGGING -> COMMONS_LOGGING
    com.j256.ormlite.logger.LoggerFactory$LogType LOG4J -> LOG4J
    com.j256.ormlite.logger.LoggerFactory$LogType LOCAL -> LOCAL
    java.lang.String detectClassName -> detectClassName
    java.lang.String logClassName -> logClassName
    com.j256.ormlite.logger.LoggerFactory$LogType[] $VALUES -> $VALUES
    com.j256.ormlite.logger.LoggerFactory$LogType[] values() -> values
    com.j256.ormlite.logger.LoggerFactory$LogType valueOf(java.lang.String) -> valueOf
    com.j256.ormlite.logger.Log createLog(java.lang.String) -> createLog
    com.j256.ormlite.logger.Log createLogFromClassName(java.lang.String) -> createLogFromClassName
    boolean isAvailable() -> isAvailable
    boolean isAvailableTestClass() -> isAvailableTestClass
com.j256.ormlite.logger.LoggerFactory$LogType$1 -> com.j256.ormlite.logger.LoggerFactory$LogType$1:
    com.j256.ormlite.logger.Log createLog(java.lang.String) -> createLog
    boolean isAvailable() -> isAvailable
com.j256.ormlite.misc.BaseDaoEnabled -> com.j256.ormlite.misc.BaseDaoEnabled:
    com.j256.ormlite.dao.Dao dao -> dao
    int create() -> create
    int refresh() -> refresh
    int update() -> update
    int updateId(java.lang.Object) -> updateId
    int delete() -> delete
    java.lang.String objectToString() -> objectToString
    java.lang.Object extractId() -> extractId
    boolean objectsEqual(java.lang.Object) -> objectsEqual
    void setDao(com.j256.ormlite.dao.Dao) -> setDao
    void checkForDao() -> checkForDao
com.j256.ormlite.misc.JavaxPersistence -> com.j256.ormlite.misc.JavaxPersistence:
    com.j256.ormlite.field.DatabaseFieldConfig createFieldConfig(com.j256.ormlite.db.DatabaseType,java.lang.reflect.Field) -> createFieldConfig
    java.lang.String getEntityName(java.lang.Class) -> getEntityName
com.j256.ormlite.misc.SqlExceptionUtil -> com.j256.ormlite.misc.SqlExceptionUtil:
    java.sql.SQLException create(java.lang.String,java.lang.Throwable) -> create
com.j256.ormlite.misc.TransactionManager -> com.j256.ormlite.misc.TransactionManager:
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.String SAVE_POINT_PREFIX -> SAVE_POINT_PREFIX
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    java.util.concurrent.atomic.AtomicInteger savePointCounter -> savePointCounter
    void initialize() -> initialize
    java.lang.Object callInTransaction(java.util.concurrent.Callable) -> callInTransaction
    java.lang.Object callInTransaction(com.j256.ormlite.support.ConnectionSource,java.util.concurrent.Callable) -> callInTransaction
    java.lang.Object callInTransaction(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.db.DatabaseType,java.util.concurrent.Callable) -> callInTransaction
    java.lang.Object callInTransaction(com.j256.ormlite.support.DatabaseConnection,boolean,com.j256.ormlite.db.DatabaseType,java.util.concurrent.Callable) -> callInTransaction
    void setConnectionSource(com.j256.ormlite.support.ConnectionSource) -> setConnectionSource
    void commit(com.j256.ormlite.support.DatabaseConnection,java.sql.Savepoint) -> commit
    void rollBack(com.j256.ormlite.support.DatabaseConnection,java.sql.Savepoint) -> rollBack
com.j256.ormlite.stmt.ArgumentHolder -> com.j256.ormlite.stmt.ArgumentHolder:
    java.lang.String getColumnName() -> getColumnName
    void setMetaInfo(java.lang.String) -> setMetaInfo
    void setMetaInfo(com.j256.ormlite.field.FieldType) -> setMetaInfo
    void setMetaInfo(java.lang.String,com.j256.ormlite.field.FieldType) -> setMetaInfo
    void setValue(java.lang.Object) -> setValue
    java.lang.Object getSqlArgValue() -> getSqlArgValue
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    com.j256.ormlite.field.FieldType getFieldType() -> getFieldType
com.j256.ormlite.stmt.BaseArgumentHolder -> com.j256.ormlite.stmt.BaseArgumentHolder:
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.FieldType fieldType -> fieldType
    com.j256.ormlite.field.SqlType sqlType -> sqlType
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    boolean isValueSet() -> isValueSet
    java.lang.String getColumnName() -> getColumnName
    void setMetaInfo(java.lang.String) -> setMetaInfo
    void setMetaInfo(com.j256.ormlite.field.FieldType) -> setMetaInfo
    void setMetaInfo(java.lang.String,com.j256.ormlite.field.FieldType) -> setMetaInfo
    java.lang.Object getSqlArgValue() -> getSqlArgValue
    com.j256.ormlite.field.FieldType getFieldType() -> getFieldType
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.DeleteBuilder -> com.j256.ormlite.stmt.DeleteBuilder:
    com.j256.ormlite.stmt.PreparedDelete prepare() -> prepare
    void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    void appendStatementEnd(java.lang.StringBuilder) -> appendStatementEnd
com.j256.ormlite.stmt.GenericRowMapper -> com.j256.ormlite.stmt.GenericRowMapper:
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
com.j256.ormlite.stmt.NullArgHolder -> com.j256.ormlite.stmt.NullArgHolder:
    java.lang.String getColumnName() -> getColumnName
    void setValue(java.lang.Object) -> setValue
    void setMetaInfo(java.lang.String) -> setMetaInfo
    void setMetaInfo(com.j256.ormlite.field.FieldType) -> setMetaInfo
    void setMetaInfo(java.lang.String,com.j256.ormlite.field.FieldType) -> setMetaInfo
    java.lang.Object getSqlArgValue() -> getSqlArgValue
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    com.j256.ormlite.field.FieldType getFieldType() -> getFieldType
com.j256.ormlite.stmt.PreparedDelete -> com.j256.ormlite.stmt.PreparedDelete:
com.j256.ormlite.stmt.PreparedQuery -> com.j256.ormlite.stmt.PreparedQuery:
com.j256.ormlite.stmt.PreparedStmt -> com.j256.ormlite.stmt.PreparedStmt:
    com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType) -> compile
    java.lang.String getStatement() -> getStatement
    com.j256.ormlite.stmt.StatementBuilder$StatementType getType() -> getType
com.j256.ormlite.stmt.PreparedUpdate -> com.j256.ormlite.stmt.PreparedUpdate:
com.j256.ormlite.stmt.QueryBuilder -> com.j256.ormlite.stmt.QueryBuilder:
    boolean distinct -> distinct
    boolean selectIdColumn -> selectIdColumn
    com.j256.ormlite.field.FieldType idField -> idField
    java.util.List selectColumnList -> selectColumnList
    java.util.List selectRawList -> selectRawList
    java.util.List orderByList -> orderByList
    java.lang.String orderByRaw -> orderByRaw
    java.util.List groupByList -> groupByList
    java.lang.String groupByRaw -> groupByRaw
    boolean isInnerQuery -> isInnerQuery
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.field.FieldType[] resultFieldTypes -> resultFieldTypes
    boolean countOf -> countOf
    void enableInnerQuery() -> enableInnerQuery
    int getSelectColumnCount() -> getSelectColumnCount
    com.j256.ormlite.stmt.PreparedQuery prepare() -> prepare
    com.j256.ormlite.stmt.QueryBuilder selectColumns(java.lang.String[]) -> selectColumns
    com.j256.ormlite.stmt.QueryBuilder selectColumns(java.lang.Iterable) -> selectColumns
    com.j256.ormlite.stmt.QueryBuilder selectRaw(java.lang.String[]) -> selectRaw
    com.j256.ormlite.stmt.QueryBuilder groupBy(java.lang.String) -> groupBy
    com.j256.ormlite.stmt.QueryBuilder groupByRaw(java.lang.String) -> groupByRaw
    com.j256.ormlite.stmt.QueryBuilder orderBy(java.lang.String,boolean) -> orderBy
    com.j256.ormlite.stmt.QueryBuilder orderByRaw(java.lang.String) -> orderByRaw
    com.j256.ormlite.stmt.QueryBuilder distinct() -> distinct
    com.j256.ormlite.stmt.QueryBuilder limit(int) -> limit
    com.j256.ormlite.stmt.QueryBuilder limit(java.lang.Long) -> limit
    com.j256.ormlite.stmt.QueryBuilder offset(int) -> offset
    com.j256.ormlite.stmt.QueryBuilder offset(java.lang.Long) -> offset
    com.j256.ormlite.stmt.QueryBuilder setCountOf(boolean) -> setCountOf
    java.util.List query() -> query
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    com.j256.ormlite.field.FieldType[] getResultFieldTypes() -> getResultFieldTypes
    void appendStatementEnd(java.lang.StringBuilder) -> appendStatementEnd
    void addSelectColumnToList(java.lang.String) -> addSelectColumnToList
    void appendRawColumns(java.lang.StringBuilder) -> appendRawColumns
    void appendColumns(java.lang.StringBuilder) -> appendColumns
    void appendFieldColumnName(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List) -> appendFieldColumnName
    void appendLimit(java.lang.StringBuilder) -> appendLimit
    void appendOffset(java.lang.StringBuilder) -> appendOffset
    void appendGroupBys(java.lang.StringBuilder) -> appendGroupBys
    void appendOrderBys(java.lang.StringBuilder) -> appendOrderBys
    com.j256.ormlite.field.FieldType[] access$000(com.j256.ormlite.stmt.QueryBuilder) -> access$000
com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper -> com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper:
    com.j256.ormlite.stmt.QueryBuilder queryBuilder -> queryBuilder
    void appendStatementString(java.lang.StringBuilder,java.util.List) -> appendStatementString
    com.j256.ormlite.field.FieldType[] getResultFieldTypes() -> getResultFieldTypes
com.j256.ormlite.stmt.RawResultsImpl -> com.j256.ormlite.stmt.RawResultsImpl:
    com.j256.ormlite.stmt.SelectIterator iterator -> iterator
    java.lang.String[] columnNames -> columnNames
    int getNumberColumns() -> getNumberColumns
    java.lang.String[] getColumnNames() -> getColumnNames
    java.util.List getResults() -> getResults
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    void close() -> close
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.stmt.SelectArg -> com.j256.ormlite.stmt.SelectArg:
    boolean hasBeenSet -> hasBeenSet
    java.lang.Object value -> value
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    boolean isValueSet() -> isValueSet
com.j256.ormlite.stmt.SelectIterator -> com.j256.ormlite.stmt.SelectIterator:
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.Class dataClass -> dataClass
    com.j256.ormlite.dao.Dao classDao -> classDao
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    com.j256.ormlite.support.DatabaseConnection connection -> connection
    com.j256.ormlite.support.CompiledStatement compiledStmt -> compiledStmt
    com.j256.ormlite.support.DatabaseResults results -> results
    com.j256.ormlite.stmt.GenericRowMapper rowMapper -> rowMapper
    java.lang.String statement -> statement
    boolean closed -> closed
    java.lang.Boolean hasNext -> hasNext
    java.lang.Object last -> last
    int rowC -> rowC
    boolean hasNextThrow() -> hasNextThrow
    boolean hasNext() -> hasNext
    java.lang.Object nextThrow() -> nextThrow
    java.lang.Object next() -> next
    void removeThrow() -> removeThrow
    void remove() -> remove
    void close() -> close
    com.j256.ormlite.support.DatabaseResults getRawResults() -> getRawResults
    void moveToNext() -> moveToNext
com.j256.ormlite.stmt.StatementBuilder -> com.j256.ormlite.stmt.StatementBuilder:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.stmt.StatementBuilder$StatementType type -> type
    com.j256.ormlite.stmt.Where where -> where
    java.lang.Long limit -> limit
    java.lang.Long offset -> offset
    com.j256.ormlite.stmt.Where where() -> where
    void setWhere(com.j256.ormlite.stmt.Where) -> setWhere
    com.j256.ormlite.stmt.mapped.MappedPreparedStmt prepareStatement() -> prepareStatement
    java.lang.String prepareStatementString() -> prepareStatementString
    java.lang.String buildStatementString(java.util.List) -> buildStatementString
    void appendStatementString(java.lang.StringBuilder,java.util.List) -> appendStatementString
    void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    com.j256.ormlite.field.FieldType[] getResultFieldTypes() -> getResultFieldTypes
    void appendStatementEnd(java.lang.StringBuilder) -> appendStatementEnd
    com.j256.ormlite.field.FieldType verifyColumnName(java.lang.String) -> verifyColumnName
    com.j256.ormlite.stmt.StatementBuilder$StatementType getType() -> getType
com.j256.ormlite.stmt.StatementBuilder$StatementType -> com.j256.ormlite.stmt.StatementBuilder$StatementType:
    com.j256.ormlite.stmt.StatementBuilder$StatementType SELECT -> SELECT
    com.j256.ormlite.stmt.StatementBuilder$StatementType SELECT_LONG -> SELECT_LONG
    com.j256.ormlite.stmt.StatementBuilder$StatementType SELECT_RAW -> SELECT_RAW
    com.j256.ormlite.stmt.StatementBuilder$StatementType UPDATE -> UPDATE
    com.j256.ormlite.stmt.StatementBuilder$StatementType DELETE -> DELETE
    com.j256.ormlite.stmt.StatementBuilder$StatementType EXECUTE -> EXECUTE
    boolean okForStatementBuilder -> okForStatementBuilder
    boolean okForQuery -> okForQuery
    boolean okForUpdate -> okForUpdate
    boolean okForExecute -> okForExecute
    com.j256.ormlite.stmt.StatementBuilder$StatementType[] $VALUES -> $VALUES
    com.j256.ormlite.stmt.StatementBuilder$StatementType[] values() -> values
    com.j256.ormlite.stmt.StatementBuilder$StatementType valueOf(java.lang.String) -> valueOf
    boolean isOkForStatementBuilder() -> isOkForStatementBuilder
    boolean isOkForQuery() -> isOkForQuery
    boolean isOkForUpdate() -> isOkForUpdate
    boolean isOkForExecute() -> isOkForExecute
com.j256.ormlite.stmt.StatementExecutor -> com.j256.ormlite.stmt.StatementExecutor:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.field.FieldType[] noFieldTypes -> noFieldTypes
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.stmt.mapped.MappedQueryForId mappedQueryForId -> mappedQueryForId
    com.j256.ormlite.stmt.PreparedQuery preparedQueryForAll -> preparedQueryForAll
    com.j256.ormlite.stmt.mapped.MappedCreate mappedInsert -> mappedInsert
    com.j256.ormlite.stmt.mapped.MappedUpdate mappedUpdate -> mappedUpdate
    com.j256.ormlite.stmt.mapped.MappedUpdateId mappedUpdateId -> mappedUpdateId
    com.j256.ormlite.stmt.mapped.MappedDelete mappedDelete -> mappedDelete
    com.j256.ormlite.stmt.mapped.MappedRefresh mappedRefresh -> mappedRefresh
    java.lang.String countStarQuery -> countStarQuery
    java.lang.String ifExistsQuery -> ifExistsQuery
    com.j256.ormlite.field.FieldType[] ifExistsFieldTypes -> ifExistsFieldTypes
    java.lang.Object queryForId(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> queryForId
    java.lang.Object queryForFirst(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache) -> queryForFirst
    java.util.List queryForAll(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.ObjectCache) -> queryForAll
    long queryForCountStar(com.j256.ormlite.support.DatabaseConnection) -> queryForCountStar
    long queryForCountStar(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedStmt) -> queryForCountStar
    java.util.List query(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache) -> query
    com.j256.ormlite.stmt.SelectIterator buildIterator(com.j256.ormlite.dao.BaseDaoImpl,com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.ObjectCache) -> buildIterator
    com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    com.j256.ormlite.stmt.SelectIterator buildIterator(com.j256.ormlite.dao.BaseDaoImpl,com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache) -> buildIterator
    com.j256.ormlite.dao.GenericRawResults queryRaw(com.j256.ormlite.support.ConnectionSource,java.lang.String,java.lang.String[],com.j256.ormlite.dao.ObjectCache) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(com.j256.ormlite.support.ConnectionSource,java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[],com.j256.ormlite.dao.ObjectCache) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(com.j256.ormlite.support.ConnectionSource,java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[],com.j256.ormlite.dao.ObjectCache) -> queryRaw
    int updateRaw(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.lang.String[]) -> updateRaw
    int executeRaw(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.lang.String[]) -> executeRaw
    int create(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> create
    int update(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> update
    int updateId(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> updateId
    int update(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedUpdate) -> update
    int refresh(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> refresh
    int delete(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> delete
    int deleteById(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> deleteById
    int deleteObjects(com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteObjects
    int deleteIds(com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteIds
    int delete(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedDelete) -> delete
    java.lang.Object callBatchTasks(com.j256.ormlite.support.DatabaseConnection,boolean,java.util.concurrent.Callable) -> callBatchTasks
    java.lang.String[] mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    boolean ifExists(com.j256.ormlite.support.DatabaseConnection,java.lang.Object) -> ifExists
    void assignStatementArguments(com.j256.ormlite.support.CompiledStatement,java.lang.String[]) -> assignStatementArguments
    java.lang.String[] extractColumnNames(com.j256.ormlite.support.CompiledStatement) -> extractColumnNames
    void prepareQueryForAll() -> prepareQueryForAll
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
com.j256.ormlite.stmt.StatementExecutor$ObjectArrayRowMapper -> com.j256.ormlite.stmt.StatementExecutor$ObjectArrayRowMapper:
    com.j256.ormlite.field.DataType[] columnTypes -> columnTypes
    java.lang.Object[] mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
com.j256.ormlite.stmt.StatementExecutor$UserObjectRowMapper -> com.j256.ormlite.stmt.StatementExecutor$UserObjectRowMapper:
    com.j256.ormlite.dao.RawRowMapper mapper -> mapper
    java.lang.String[] columnNames -> columnNames
    com.j256.ormlite.stmt.GenericRowMapper stringRowMapper -> stringRowMapper
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
com.j256.ormlite.stmt.ThreadLocalSelectArg -> com.j256.ormlite.stmt.ThreadLocalSelectArg:
    java.lang.ThreadLocal threadValue -> threadValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    boolean isValueSet() -> isValueSet
com.j256.ormlite.stmt.ThreadLocalSelectArg$ValueWrapper -> com.j256.ormlite.stmt.ThreadLocalSelectArg$ValueWrapper:
    java.lang.Object value -> value
com.j256.ormlite.stmt.UpdateBuilder -> com.j256.ormlite.stmt.UpdateBuilder:
    java.util.List updateClauseList -> updateClauseList
    com.j256.ormlite.stmt.PreparedUpdate prepare() -> prepare
    com.j256.ormlite.stmt.StatementBuilder updateColumnValue(java.lang.String,java.lang.Object) -> updateColumnValue
    com.j256.ormlite.stmt.StatementBuilder updateColumnExpression(java.lang.String,java.lang.String) -> updateColumnExpression
    void escapeColumnName(java.lang.StringBuilder,java.lang.String) -> escapeColumnName
    java.lang.String escapeColumnName(java.lang.String) -> escapeColumnName
    void escapeValue(java.lang.StringBuilder,java.lang.String) -> escapeValue
    java.lang.String escapeValue(java.lang.String) -> escapeValue
    void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    void appendStatementEnd(java.lang.StringBuilder) -> appendStatementEnd
    void addUpdateColumnToList(java.lang.String,com.j256.ormlite.stmt.query.Clause) -> addUpdateColumnToList
com.j256.ormlite.stmt.Where -> com.j256.ormlite.stmt.Where:
    int START_CLAUSE_SIZE -> START_CLAUSE_SIZE
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    com.j256.ormlite.stmt.StatementBuilder statementBuilder -> statementBuilder
    com.j256.ormlite.field.FieldType idFieldType -> idFieldType
    java.lang.String idColumnName -> idColumnName
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.stmt.query.Clause[] clauseStack -> clauseStack
    int clauseStackLevel -> clauseStackLevel
    com.j256.ormlite.stmt.query.NeedsFutureClause needsFuture -> needsFuture
    com.j256.ormlite.stmt.Where and() -> and
    com.j256.ormlite.stmt.Where and(com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where[]) -> and
    com.j256.ormlite.stmt.Where and(int) -> and
    com.j256.ormlite.stmt.Where between(java.lang.String,java.lang.Object,java.lang.Object) -> between
    com.j256.ormlite.stmt.Where eq(java.lang.String,java.lang.Object) -> eq
    com.j256.ormlite.stmt.Where ge(java.lang.String,java.lang.Object) -> ge
    com.j256.ormlite.stmt.Where gt(java.lang.String,java.lang.Object) -> gt
    com.j256.ormlite.stmt.Where in(java.lang.String,java.lang.Iterable) -> in
    com.j256.ormlite.stmt.Where in(java.lang.String,java.lang.Object[]) -> in
    com.j256.ormlite.stmt.Where in(java.lang.String,com.j256.ormlite.stmt.QueryBuilder) -> in
    com.j256.ormlite.stmt.Where exists(com.j256.ormlite.stmt.QueryBuilder) -> exists
    com.j256.ormlite.stmt.Where isNull(java.lang.String) -> isNull
    com.j256.ormlite.stmt.Where isNotNull(java.lang.String) -> isNotNull
    com.j256.ormlite.stmt.Where le(java.lang.String,java.lang.Object) -> le
    com.j256.ormlite.stmt.Where lt(java.lang.String,java.lang.Object) -> lt
    com.j256.ormlite.stmt.Where like(java.lang.String,java.lang.Object) -> like
    com.j256.ormlite.stmt.Where ne(java.lang.String,java.lang.Object) -> ne
    com.j256.ormlite.stmt.Where not() -> not
    com.j256.ormlite.stmt.Where not(com.j256.ormlite.stmt.Where) -> not
    com.j256.ormlite.stmt.Where or() -> or
    com.j256.ormlite.stmt.Where or(com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where[]) -> or
    com.j256.ormlite.stmt.Where or(int) -> or
    com.j256.ormlite.stmt.Where idEq(java.lang.Object) -> idEq
    com.j256.ormlite.stmt.Where idEq(com.j256.ormlite.dao.Dao,java.lang.Object) -> idEq
    com.j256.ormlite.stmt.Where raw(java.lang.String,com.j256.ormlite.stmt.ArgumentHolder[]) -> raw
    com.j256.ormlite.stmt.Where rawComparison(java.lang.String,java.lang.String,java.lang.Object) -> rawComparison
    com.j256.ormlite.stmt.PreparedQuery prepare() -> prepare
    java.util.List query() -> query
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    void clear() -> clear
    java.lang.String getStatement() -> getStatement
    void appendSql(java.lang.StringBuilder,java.util.List) -> appendSql
    com.j256.ormlite.stmt.query.Clause[] buildClauseArray(com.j256.ormlite.stmt.Where[],java.lang.String) -> buildClauseArray
    void addNeedsFuture(com.j256.ormlite.stmt.query.NeedsFutureClause) -> addNeedsFuture
    void addClause(com.j256.ormlite.stmt.query.Clause) -> addClause
    java.lang.String toString() -> toString
    com.j256.ormlite.field.FieldType findColumnFieldType(java.lang.String) -> findColumnFieldType
    void push(com.j256.ormlite.stmt.query.Clause) -> push
    com.j256.ormlite.stmt.query.Clause pop(java.lang.String) -> pop
    com.j256.ormlite.stmt.query.Clause peek() -> peek
com.j256.ormlite.stmt.mapped.BaseMappedQuery -> com.j256.ormlite.stmt.mapped.BaseMappedQuery:
    com.j256.ormlite.field.FieldType[] resultsFieldTypes -> resultsFieldTypes
    java.util.Map columnPositions -> columnPositions
    java.lang.Object parent -> parent
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    void setParentObject(java.lang.Object) -> setParentObject
com.j256.ormlite.stmt.mapped.BaseMappedStatement -> com.j256.ormlite.stmt.mapped.BaseMappedStatement:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    java.lang.Class clazz -> clazz
    com.j256.ormlite.field.FieldType idField -> idField
    java.lang.String statement -> statement
    com.j256.ormlite.field.FieldType[] argFieldTypes -> argFieldTypes
    java.lang.Object[] getFieldObjects(java.lang.Object) -> getFieldObjects
    java.lang.Object convertIdToFieldObject(java.lang.Object) -> convertIdToFieldObject
    void appendWhereId(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,java.util.List) -> appendWhereId
    void appendTableName(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.lang.String,java.lang.String) -> appendTableName
    void appendFieldColumnName(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List) -> appendFieldColumnName
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.mapped.MappedCreate -> com.j256.ormlite.stmt.mapped.MappedCreate:
    java.lang.String queryNextSequenceStmt -> queryNextSequenceStmt
    java.lang.String dataClassName -> dataClassName
    int versionFieldTypeIndex -> versionFieldTypeIndex
    int insert(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> insert
    com.j256.ormlite.stmt.mapped.MappedCreate build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    boolean isFieldCreatable(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType) -> isFieldCreatable
    java.lang.String buildQueryNextSequence(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType) -> buildQueryNextSequence
    void assignSequenceId(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> assignSequenceId
    void assignIdValue(java.lang.Object,java.lang.Number,java.lang.String,com.j256.ormlite.dao.ObjectCache) -> assignIdValue
com.j256.ormlite.stmt.mapped.MappedCreate$1 -> com.j256.ormlite.stmt.mapped.MappedCreate$1:
com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder -> com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder:
    java.lang.Number key -> key
    java.lang.Number getKey() -> getKey
    void addKey(java.lang.Number) -> addKey
com.j256.ormlite.stmt.mapped.MappedDelete -> com.j256.ormlite.stmt.mapped.MappedDelete:
    com.j256.ormlite.stmt.mapped.MappedDelete build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    int delete(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> delete
    int deleteById(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> deleteById
com.j256.ormlite.stmt.mapped.MappedDeleteCollection -> com.j256.ormlite.stmt.mapped.MappedDeleteCollection:
    int deleteObjects(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteObjects
    int deleteIds(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteIds
    com.j256.ormlite.stmt.mapped.MappedDeleteCollection build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,int) -> build
    int updateRows(com.j256.ormlite.support.DatabaseConnection,java.lang.Class,com.j256.ormlite.stmt.mapped.MappedDeleteCollection,java.lang.Object[],com.j256.ormlite.dao.ObjectCache) -> updateRows
    void appendWhereIds(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,int,com.j256.ormlite.field.FieldType[]) -> appendWhereIds
com.j256.ormlite.stmt.mapped.MappedPreparedStmt -> com.j256.ormlite.stmt.mapped.MappedPreparedStmt:
    com.j256.ormlite.stmt.ArgumentHolder[] argHolders -> argHolders
    java.lang.Long limit -> limit
    com.j256.ormlite.stmt.StatementBuilder$StatementType type -> type
    com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType) -> compile
    java.lang.String getStatement() -> getStatement
    com.j256.ormlite.stmt.StatementBuilder$StatementType getType() -> getType
com.j256.ormlite.stmt.mapped.MappedQueryForId -> com.j256.ormlite.stmt.mapped.MappedQueryForId:
    java.lang.String label -> label
    java.lang.Object execute(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> execute
    com.j256.ormlite.stmt.mapped.MappedQueryForId build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    java.lang.String buildStatement(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> buildStatement
    void logArgs(java.lang.Object[]) -> logArgs
com.j256.ormlite.stmt.mapped.MappedRefresh -> com.j256.ormlite.stmt.mapped.MappedRefresh:
    int executeRefresh(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> executeRefresh
    com.j256.ormlite.stmt.mapped.MappedRefresh build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
com.j256.ormlite.stmt.mapped.MappedUpdate -> com.j256.ormlite.stmt.mapped.MappedUpdate:
    com.j256.ormlite.field.FieldType versionFieldType -> versionFieldType
    int versionFieldTypeIndex -> versionFieldTypeIndex
    com.j256.ormlite.stmt.mapped.MappedUpdate build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    int update(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> update
    boolean isFieldUpdatable(com.j256.ormlite.field.FieldType,com.j256.ormlite.field.FieldType) -> isFieldUpdatable
com.j256.ormlite.stmt.mapped.MappedUpdateId -> com.j256.ormlite.stmt.mapped.MappedUpdateId:
    int execute(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> execute
    com.j256.ormlite.stmt.mapped.MappedUpdateId build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    java.lang.Object extractIdToFieldObject(java.lang.Object) -> extractIdToFieldObject
com.j256.ormlite.stmt.query.BaseComparison -> com.j256.ormlite.stmt.query.BaseComparison:
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.FieldType fieldType -> fieldType
    java.lang.Object value -> value
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendSql
    java.lang.String getColumnName() -> getColumnName
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    void appendArgOrValue(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,java.util.List,java.lang.Object) -> appendArgOrValue
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.query.Between -> com.j256.ormlite.stmt.query.Between:
    java.lang.Object low -> low
    java.lang.Object high -> high
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.Clause -> com.j256.ormlite.stmt.query.Clause:
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.Comparison -> com.j256.ormlite.stmt.query.Comparison:
    java.lang.String getColumnName() -> getColumnName
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
com.j256.ormlite.stmt.query.Exists -> com.j256.ormlite.stmt.query.Exists:
    com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper subQueryBuilder -> subQueryBuilder
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.In -> com.j256.ormlite.stmt.query.In:
    java.lang.Iterable objects -> objects
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.InSubQuery -> com.j256.ormlite.stmt.query.InSubQuery:
    com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper subQueryBuilder -> subQueryBuilder
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    java.lang.String toString() -> toString
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.IsNotNull -> com.j256.ormlite.stmt.query.IsNotNull:
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.IsNull -> com.j256.ormlite.stmt.query.IsNull:
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.ManyClause -> com.j256.ormlite.stmt.query.ManyClause:
    java.lang.String AND_OPERATION -> AND_OPERATION
    java.lang.String OR_OPERATION -> OR_OPERATION
    com.j256.ormlite.stmt.query.Clause first -> first
    com.j256.ormlite.stmt.query.Clause second -> second
    com.j256.ormlite.stmt.query.Clause[] others -> others
    int startOthersAt -> startOthersAt
    java.lang.String operation -> operation
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendSql
    void setMissingClause(com.j256.ormlite.stmt.query.Clause) -> setMissingClause
com.j256.ormlite.stmt.query.NeedsFutureClause -> com.j256.ormlite.stmt.query.NeedsFutureClause:
    void setMissingClause(com.j256.ormlite.stmt.query.Clause) -> setMissingClause
com.j256.ormlite.stmt.query.Not -> com.j256.ormlite.stmt.query.Not:
    com.j256.ormlite.stmt.query.Comparison comparison -> comparison
    com.j256.ormlite.stmt.query.Exists exists -> exists
    void setMissingClause(com.j256.ormlite.stmt.query.Clause) -> setMissingClause
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendSql
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.query.OrderBy -> com.j256.ormlite.stmt.query.OrderBy:
    java.lang.String columnName -> columnName
    boolean ascending -> ascending
    java.lang.String getColumnName() -> getColumnName
    boolean isAscending() -> isAscending
com.j256.ormlite.stmt.query.Raw -> com.j256.ormlite.stmt.query.Raw:
    java.lang.String statement -> statement
    com.j256.ormlite.stmt.ArgumentHolder[] args -> args
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.SetExpression -> com.j256.ormlite.stmt.query.SetExpression:
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendArgOrValue(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,java.util.List,java.lang.Object) -> appendArgOrValue
    java.lang.String toString() -> toString
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.SetValue -> com.j256.ormlite.stmt.query.SetValue:
    com.j256.ormlite.stmt.ArgumentHolder nullValue -> nullValue
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    java.lang.String toString() -> toString
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.SimpleComparison -> com.j256.ormlite.stmt.query.SimpleComparison:
    java.lang.String EQUAL_TO_OPERATION -> EQUAL_TO_OPERATION
    java.lang.String GREATER_THAN_OPERATION -> GREATER_THAN_OPERATION
    java.lang.String GREATER_THAN_EQUAL_TO_OPERATION -> GREATER_THAN_EQUAL_TO_OPERATION
    java.lang.String LESS_THAN_OPERATION -> LESS_THAN_OPERATION
    java.lang.String LESS_THAN_EQUAL_TO_OPERATION -> LESS_THAN_EQUAL_TO_OPERATION
    java.lang.String LIKE_OPERATION -> LIKE_OPERATION
    java.lang.String NOT_EQUAL_TO_OPERATION -> NOT_EQUAL_TO_OPERATION
    java.lang.String operation -> operation
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    java.lang.String toString() -> toString
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.support.BaseConnectionSource -> com.j256.ormlite.support.BaseConnectionSource:
    boolean usedSpecialConnection -> usedSpecialConnection
    java.lang.ThreadLocal specialConnection -> specialConnection
    com.j256.ormlite.support.DatabaseConnection getSpecialConnection() -> getSpecialConnection
    com.j256.ormlite.support.DatabaseConnection getSavedConnection() -> getSavedConnection
    boolean isSavedConnection(com.j256.ormlite.support.DatabaseConnection) -> isSavedConnection
    boolean saveSpecial(com.j256.ormlite.support.DatabaseConnection) -> saveSpecial
    boolean clearSpecial(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.logger.Logger) -> clearSpecial
com.j256.ormlite.support.BaseConnectionSource$NestedConnection -> com.j256.ormlite.support.BaseConnectionSource$NestedConnection:
    com.j256.ormlite.support.DatabaseConnection connection -> connection
    int nestedC -> nestedC
    void increment() -> increment
    int decrementAndGet() -> decrementAndGet
com.j256.ormlite.support.CompiledStatement -> com.j256.ormlite.support.CompiledStatement:
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    int runUpdate() -> runUpdate
    com.j256.ormlite.support.DatabaseResults runQuery(com.j256.ormlite.dao.ObjectCache) -> runQuery
    int runExecute() -> runExecute
    void close() -> close
    void setObject(int,java.lang.Object,com.j256.ormlite.field.SqlType) -> setObject
    void setMaxRows(int) -> setMaxRows
com.j256.ormlite.support.ConnectionSource -> com.j256.ormlite.support.ConnectionSource:
    com.j256.ormlite.support.DatabaseConnection getReadOnlyConnection() -> getReadOnlyConnection
    com.j256.ormlite.support.DatabaseConnection getReadWriteConnection() -> getReadWriteConnection
    void releaseConnection(com.j256.ormlite.support.DatabaseConnection) -> releaseConnection
    boolean saveSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> saveSpecialConnection
    void clearSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> clearSpecialConnection
    com.j256.ormlite.support.DatabaseConnection getSpecialConnection() -> getSpecialConnection
    void close() -> close
    com.j256.ormlite.db.DatabaseType getDatabaseType() -> getDatabaseType
    boolean isOpen() -> isOpen
com.j256.ormlite.support.DatabaseConnection -> com.j256.ormlite.support.DatabaseConnection:
    java.lang.Object MORE_THAN_ONE -> MORE_THAN_ONE
    boolean isAutoCommitSupported() -> isAutoCommitSupported
    boolean getAutoCommit() -> getAutoCommit
    void setAutoCommit(boolean) -> setAutoCommit
    java.sql.Savepoint setSavePoint(java.lang.String) -> setSavePoint
    void commit(java.sql.Savepoint) -> commit
    void rollback(java.sql.Savepoint) -> rollback
    com.j256.ormlite.support.CompiledStatement compileStatement(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType,com.j256.ormlite.field.FieldType[]) -> compileStatement
    int insert(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.support.GeneratedKeyHolder) -> insert
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> update
    int delete(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> delete
    java.lang.Object queryForOne(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.stmt.GenericRowMapper,com.j256.ormlite.dao.ObjectCache) -> queryForOne
    long queryForLong(java.lang.String) -> queryForLong
    long queryForLong(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> queryForLong
    void close() -> close
    boolean isClosed() -> isClosed
    boolean isTableExists(java.lang.String) -> isTableExists
com.j256.ormlite.support.DatabaseResults -> com.j256.ormlite.support.DatabaseResults:
    int getColumnCount() -> getColumnCount
    boolean next() -> next
    int findColumn(java.lang.String) -> findColumn
    java.lang.String getString(int) -> getString
    boolean getBoolean(int) -> getBoolean
    char getChar(int) -> getChar
    byte getByte(int) -> getByte
    byte[] getBytes(int) -> getBytes
    short getShort(int) -> getShort
    int getInt(int) -> getInt
    long getLong(int) -> getLong
    float getFloat(int) -> getFloat
    double getDouble(int) -> getDouble
    java.sql.Timestamp getTimestamp(int) -> getTimestamp
    java.io.InputStream getBlobStream(int) -> getBlobStream
    java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    boolean wasNull(int) -> wasNull
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
com.j256.ormlite.support.GeneratedKeyHolder -> com.j256.ormlite.support.GeneratedKeyHolder:
    void addKey(java.lang.Number) -> addKey
com.j256.ormlite.table.DatabaseTable -> com.j256.ormlite.table.DatabaseTable:
    java.lang.String tableName() -> tableName
    java.lang.Class daoClass() -> daoClass
com.j256.ormlite.table.DatabaseTableConfig -> com.j256.ormlite.table.DatabaseTableConfig:
    java.lang.Class dataClass -> dataClass
    java.lang.String tableName -> tableName
    java.util.List fieldConfigs -> fieldConfigs
    com.j256.ormlite.field.FieldType[] fieldTypes -> fieldTypes
    java.lang.reflect.Constructor constructor -> constructor
    void initialize() -> initialize
    java.lang.Class getDataClass() -> getDataClass
    void setDataClass(java.lang.Class) -> setDataClass
    java.lang.String getTableName() -> getTableName
    void setTableName(java.lang.String) -> setTableName
    void setFieldConfigs(java.util.List) -> setFieldConfigs
    void extractFieldTypes(com.j256.ormlite.support.ConnectionSource) -> extractFieldTypes
    com.j256.ormlite.field.FieldType[] getFieldTypes(com.j256.ormlite.db.DatabaseType) -> getFieldTypes
    java.util.List getFieldConfigs() -> getFieldConfigs
    java.lang.reflect.Constructor getConstructor() -> getConstructor
    void setConstructor(java.lang.reflect.Constructor) -> setConstructor
    com.j256.ormlite.table.DatabaseTableConfig fromClass(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> fromClass
    java.lang.String extractTableName(java.lang.Class) -> extractTableName
    com.j256.ormlite.field.FieldType extractIdFieldType(com.j256.ormlite.support.ConnectionSource,java.lang.Class,java.lang.String) -> extractIdFieldType
    java.lang.reflect.Constructor findNoArgConstructor(java.lang.Class) -> findNoArgConstructor
    com.j256.ormlite.field.FieldType[] extractFieldTypes(com.j256.ormlite.support.ConnectionSource,java.lang.Class,java.lang.String) -> extractFieldTypes
    com.j256.ormlite.field.FieldType[] convertFieldConfigs(com.j256.ormlite.support.ConnectionSource,java.lang.String,java.util.List) -> convertFieldConfigs
com.j256.ormlite.table.DatabaseTableConfigLoader -> com.j256.ormlite.table.DatabaseTableConfigLoader:
    java.lang.String CONFIG_FILE_START_MARKER -> CONFIG_FILE_START_MARKER
    java.lang.String CONFIG_FILE_END_MARKER -> CONFIG_FILE_END_MARKER
    java.lang.String CONFIG_FILE_FIELDS_START -> CONFIG_FILE_FIELDS_START
    java.lang.String CONFIG_FILE_FIELDS_END -> CONFIG_FILE_FIELDS_END
    java.lang.String FIELD_NAME_DATA_CLASS -> FIELD_NAME_DATA_CLASS
    java.lang.String FIELD_NAME_TABLE_NAME -> FIELD_NAME_TABLE_NAME
    java.util.List loadDatabaseConfigFromReader(java.io.BufferedReader) -> loadDatabaseConfigFromReader
    com.j256.ormlite.table.DatabaseTableConfig fromReader(java.io.BufferedReader) -> fromReader
    void write(java.io.BufferedWriter,com.j256.ormlite.table.DatabaseTableConfig) -> write
    void writeConfig(java.io.BufferedWriter,com.j256.ormlite.table.DatabaseTableConfig) -> writeConfig
    void readTableField(com.j256.ormlite.table.DatabaseTableConfig,java.lang.String,java.lang.String) -> readTableField
    void readFields(java.io.BufferedReader,com.j256.ormlite.table.DatabaseTableConfig) -> readFields
com.j256.ormlite.table.TableInfo -> com.j256.ormlite.table.TableInfo:
    com.j256.ormlite.dao.Dao dao -> dao
    java.lang.Class dataClass -> dataClass
    java.lang.String tableName -> tableName
    com.j256.ormlite.field.FieldType[] fieldTypes -> fieldTypes
    com.j256.ormlite.field.FieldType idField -> idField
    java.lang.reflect.Constructor constructor -> constructor
    boolean foreignAutoCreate -> foreignAutoCreate
    java.util.Map fieldNameMap -> fieldNameMap
    java.lang.Class getDataClass() -> getDataClass
    java.lang.String getTableName() -> getTableName
    com.j256.ormlite.field.FieldType[] getFieldTypes() -> getFieldTypes
    com.j256.ormlite.field.FieldType getFieldTypeByColumnName(java.lang.String) -> getFieldTypeByColumnName
    com.j256.ormlite.field.FieldType getIdField() -> getIdField
    java.lang.reflect.Constructor getConstructor() -> getConstructor
    java.lang.String objectToString(java.lang.Object) -> objectToString
    java.lang.Object createObject() -> createObject
    java.lang.Object createObject(java.lang.reflect.Constructor,com.j256.ormlite.dao.Dao) -> createObject
    boolean isUpdatable() -> isUpdatable
    boolean isForeignAutoCreate() -> isForeignAutoCreate
    boolean hasColumnName(java.lang.String) -> hasColumnName
com.j256.ormlite.table.TableUtils -> com.j256.ormlite.table.TableUtils:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.field.FieldType[] noFieldTypes -> noFieldTypes
    int createTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createTable
    int createTableIfNotExists(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createTableIfNotExists
    int createTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createTable
    int createTableIfNotExists(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createTableIfNotExists
    java.util.List getCreateTableStatements(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> getCreateTableStatements
    java.util.List getCreateTableStatements(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> getCreateTableStatements
    int dropTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class,boolean) -> dropTable
    int dropTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig,boolean) -> dropTable
    int clearTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> clearTable
    int clearTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> clearTable
    int createTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class,boolean) -> createTable
    int createTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig,boolean) -> createTable
    int clearTable(com.j256.ormlite.support.ConnectionSource,java.lang.String) -> clearTable
    int doDropTable(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.TableInfo,boolean) -> doDropTable
    void addDropIndexStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List) -> addDropIndexStatements
    void addCreateTableStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List,java.util.List,boolean) -> addCreateTableStatements
    void addCreateIndexStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List,boolean,boolean) -> addCreateIndexStatements
    void addDropTableStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List) -> addDropTableStatements
    int doCreateTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.TableInfo,boolean) -> doCreateTable
    int doStatements(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.util.Collection,boolean,boolean) -> doStatements
    int doCreateTestQueries(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.db.DatabaseType,java.util.List) -> doCreateTestQueries
    java.util.List addCreateTableStatements(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.TableInfo,boolean) -> addCreateTableStatements
com.nostra13.universalimageloader.cache.disc.BaseDiscCache -> com.nostra13.universalimageloader.a.a.a:
    java.io.File cacheDir -> a
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator -> b
    java.io.File get(java.lang.String) -> a
    java.io.File getCacheDir() -> a
com.nostra13.universalimageloader.cache.disc.DiscCacheAware -> com.nostra13.universalimageloader.a.a.b:
    void put$53cdd136(java.io.File) -> a
    java.io.File get(java.lang.String) -> a
com.nostra13.universalimageloader.cache.disc.LimitedDiscCache -> com.nostra13.universalimageloader.a.a.c:
    int cacheSize -> a
    int sizeLimit -> b
    java.util.Map lastUsageDates -> c
    void calculateCacheSizeAndFillUsageMap() -> b
    void put$53cdd136(java.io.File) -> a
    java.io.File get(java.lang.String) -> a
    int removeNext() -> c
    int getSize(java.io.File) -> b
com.nostra13.universalimageloader.cache.disc.impl.FileCountLimitedDiscCache -> com.nostra13.universalimageloader.a.a.a.a:
    int getSize(java.io.File) -> b
com.nostra13.universalimageloader.cache.disc.impl.TotalSizeLimitedDiscCache -> com.nostra13.universalimageloader.a.a.a.b:
    int getSize(java.io.File) -> b
com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiscCache -> com.nostra13.universalimageloader.a.a.a.c:
    void put$53cdd136(java.io.File) -> a
com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator -> com.nostra13.universalimageloader.a.a.b.a:
    java.lang.String generate(java.lang.String) -> a
com.nostra13.universalimageloader.cache.disc.naming.HashCodeFileNameGenerator -> com.nostra13.universalimageloader.a.a.b.b:
    java.lang.String generate(java.lang.String) -> a
com.nostra13.universalimageloader.cache.memory.BaseMemoryCache -> com.nostra13.universalimageloader.a.b.a:
    java.util.Map softMap -> a
    java.lang.Object get(java.lang.Object) -> a
    boolean put(java.lang.Object,java.lang.Object) -> a
    void remove(java.lang.Object) -> b
    java.util.Collection keys() -> a
    void clear() -> b
    java.lang.ref.Reference createReference(java.lang.Object) -> c
com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache -> com.nostra13.universalimageloader.a.b.b:
    int sizeLimit -> a
    int cacheSize -> b
    java.util.List hardCache -> c
    boolean put(java.lang.Object,java.lang.Object) -> a
    void remove(java.lang.Object) -> b
    void clear() -> b
    int getSize(java.lang.Object) -> d
    java.lang.Object removeNext() -> c
com.nostra13.universalimageloader.cache.memory.MemoryCacheAware -> com.nostra13.universalimageloader.a.b.c:
    boolean put(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
    void remove(java.lang.Object) -> b
    java.util.Collection keys() -> a
    void clear() -> b
com.nostra13.universalimageloader.cache.memory.impl.FuzzyKeyMemoryCache -> com.nostra13.universalimageloader.a.b.a.a:
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware cache -> a
    java.util.Comparator keyComparator -> b
    boolean put(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
    void remove(java.lang.Object) -> b
    void clear() -> b
    java.util.Collection keys() -> a
com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache -> com.nostra13.universalimageloader.a.b.a.b:
    java.util.Map usingCounts -> a
    void clear() -> b
    android.graphics.Bitmap removeNext() -> d
    java.lang.Object removeNext() -> c
    int getSize(java.lang.Object) -> d
    void remove(java.lang.Object) -> b
    boolean put(java.lang.Object,java.lang.Object) -> a
    java.lang.ref.Reference createReference(java.lang.Object) -> c
    java.lang.Object get(java.lang.Object) -> a
com.nostra13.universalimageloader.core.DisplayBitmapTask -> com.nostra13.universalimageloader.core.a:
    android.graphics.Bitmap bitmap -> a
    android.widget.ImageView imageView -> b
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener listener -> c
    void run() -> run
com.nostra13.universalimageloader.core.DisplayImageOptions -> com.nostra13.universalimageloader.core.b:
    java.lang.Integer stubImage -> a
    java.lang.Integer imageForEmptyUrl -> b
    boolean cacheInMemory -> c
    boolean cacheOnDisc -> d
    com.nostra13.universalimageloader.core.assist.DecodingType decodingType -> e
    boolean isShowStubImage() -> a
    boolean isShowImageForEmptyUrl() -> b
    java.lang.Integer getStubImage() -> c
    java.lang.Integer getImageForEmptyUrl() -> d
    boolean isCacheInMemory() -> e
    boolean isCacheOnDisc() -> f
    com.nostra13.universalimageloader.core.assist.DecodingType getDecodingType() -> g
com.nostra13.universalimageloader.core.DisplayImageOptions$Builder -> com.nostra13.universalimageloader.core.c:
    java.lang.Integer stubImage -> a
    java.lang.Integer imageForEmptyUrl -> b
    boolean cacheInMemory -> c
    boolean cacheOnDisc -> d
    com.nostra13.universalimageloader.core.assist.DecodingType decodingType -> e
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showStubImage(int) -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheInMemory() -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisc() -> b
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder decodingType(com.nostra13.universalimageloader.core.assist.DecodingType) -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions build() -> c
    java.lang.Integer access$000(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> a
    java.lang.Integer access$100(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> b
    boolean access$200(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> c
    boolean access$300(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> d
    com.nostra13.universalimageloader.core.assist.DecodingType access$400(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> e
com.nostra13.universalimageloader.core.ImageDecoder -> com.nostra13.universalimageloader.core.d:
    java.net.URL imageUrl -> a
    com.nostra13.universalimageloader.core.download.ImageDownloader imageDownloader -> b
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> c
    com.nostra13.universalimageloader.core.assist.DecodingType decodingType -> d
    android.graphics.Bitmap decode() -> a
    int computeImageScale() -> b
com.nostra13.universalimageloader.core.ImageDecoder$1 -> com.nostra13.universalimageloader.core.e:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$assist$DecodingType -> a
com.nostra13.universalimageloader.core.ImageLoader -> com.nostra13.universalimageloader.core.f:
    java.lang.String TAG -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> b
    java.util.concurrent.ExecutorService imageLoadingExecutor -> c
    java.util.concurrent.ExecutorService cachedImageLoadingExecutor -> d
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener emptyListener -> e
    java.util.Map cacheKeyForImageView -> f
    com.nostra13.universalimageloader.core.ImageLoader instance -> g
    com.nostra13.universalimageloader.core.ImageLoader getInstance() -> a
    void init(com.nostra13.universalimageloader.core.ImageLoaderConfiguration) -> a
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions) -> a
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> a
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> a
    java.lang.String getLoadingUrlForView(android.widget.ImageView) -> a
    com.nostra13.universalimageloader.core.assist.ImageSize getImageSizeScaleTo(android.widget.ImageView) -> b
com.nostra13.universalimageloader.core.ImageLoaderConfiguration -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration:
    int maxImageWidthForMemoryCache -> a
    int maxImageHeightForMemoryCache -> b
    int threadPoolSize -> c
    boolean handleOutOfMemory -> d
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware memoryCache -> e
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware discCache -> f
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> g
    java.util.concurrent.ThreadFactory displayImageThreadFactory -> h
    boolean loggingEnabled -> i
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> j
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$1 -> com.nostra13.universalimageloader.core.g:
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder val$builder -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration this$0 -> b
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder -> com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder:
    android.content.Context context -> a
    int maxImageWidthForMemoryCache -> b
    int maxImageHeightForMemoryCache -> c
    int httpConnectTimeout -> d
    int httpReadTimeout -> e
    int threadPoolSize -> f
    int threadPriority -> g
    boolean allowCacheImageMultipleSizesInMemory -> h
    boolean handleOutOfMemory -> i
    int memoryCacheSize -> j
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware memoryCache -> k
    int discCacheSize -> l
    int discCacheFileCount -> m
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator discCacheFileNameGenerator -> n
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> o
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware discCache -> p
    boolean loggingEnabled -> q
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> r
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration build() -> a
    int access$000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> a
    int access$100(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> b
    int access$200(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> c
    boolean access$300(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> d
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware access$400(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> e
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware access$500(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> f
    com.nostra13.universalimageloader.core.DisplayImageOptions access$600(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> g
    boolean access$700(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> h
    com.nostra13.universalimageloader.core.download.ImageDownloader access$800(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> i
    int access$900(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> j
com.nostra13.universalimageloader.core.ImageLoadingInfo -> com.nostra13.universalimageloader.core.h:
    java.lang.String url -> a
    java.lang.String memoryCacheKey -> b
    android.widget.ImageView imageView -> c
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> d
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> e
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener listener -> f
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask -> com.nostra13.universalimageloader.core.i:
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> a
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> b
    android.os.Handler handler -> c
    void run() -> run
    boolean checkTaskIsNotActual() -> a
    android.graphics.Bitmap loadBitmap() -> b
    android.graphics.Bitmap decodeImage(java.net.URL) -> a
    android.graphics.Bitmap decodeWithOOMHandling(com.nostra13.universalimageloader.core.ImageDecoder) -> a
    void fireImageLoadingFailedEvent(com.nostra13.universalimageloader.core.assist.FailReason) -> a
    com.nostra13.universalimageloader.core.ImageLoadingInfo access$000(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> a
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1 -> com.nostra13.universalimageloader.core.j:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> a
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2 -> com.nostra13.universalimageloader.core.k:
    com.nostra13.universalimageloader.core.assist.FailReason val$failReason -> a
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> b
    void run() -> run
com.nostra13.universalimageloader.core.assist.DecodingType -> com.nostra13.universalimageloader.core.a.a:
    com.nostra13.universalimageloader.core.assist.DecodingType FAST -> a
    com.nostra13.universalimageloader.core.assist.DecodingType MEMORY_SAVING -> b
    com.nostra13.universalimageloader.core.assist.DecodingType[] $VALUES -> c
    com.nostra13.universalimageloader.core.assist.DecodingType[] values() -> a
com.nostra13.universalimageloader.core.assist.FailReason -> com.nostra13.universalimageloader.core.a.b:
    com.nostra13.universalimageloader.core.assist.FailReason IO_ERROR -> a
    com.nostra13.universalimageloader.core.assist.FailReason OUT_OF_MEMORY -> b
    com.nostra13.universalimageloader.core.assist.FailReason UNKNOWN -> c
    com.nostra13.universalimageloader.core.assist.FailReason[] $VALUES -> d
com.nostra13.universalimageloader.core.assist.FlushedInputStream -> com.nostra13.universalimageloader.core.a.c:
    long skip(long) -> skip
com.nostra13.universalimageloader.core.assist.ImageLoadingListener -> com.nostra13.universalimageloader.core.a.d:
    void onLoadingStarted() -> a
    void onLoadingComplete() -> b
com.nostra13.universalimageloader.core.assist.ImageSize -> com.nostra13.universalimageloader.core.a.e:
    int width -> a
    int height -> b
    int getWidth() -> a
    int getHeight() -> b
    java.lang.String toString() -> toString
com.nostra13.universalimageloader.core.assist.MemoryCacheKeyUtil -> com.nostra13.universalimageloader.core.a.f:
    java.lang.String generateKey(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize) -> a
    java.util.Comparator createFuzzyKeyComparator() -> a
com.nostra13.universalimageloader.core.assist.MemoryCacheKeyUtil$1 -> com.nostra13.universalimageloader.core.a.g:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.nostra13.universalimageloader.core.assist.SimpleImageLoadingListener -> com.nostra13.universalimageloader.core.a.h:
    void onLoadingStarted() -> a
    void onLoadingComplete() -> b
com.nostra13.universalimageloader.core.download.ImageDownloader -> com.nostra13.universalimageloader.core.b.a:
    java.io.InputStream getStream(java.net.URL) -> a
    java.io.InputStream getStreamFromNetwork(java.net.URL) -> b
com.nostra13.universalimageloader.core.download.URLConnectionImageDownloader -> com.nostra13.universalimageloader.core.b.b:
    int connectTimeout -> a
    int readTimeout -> b
    java.io.InputStream getStreamFromNetwork(java.net.URL) -> b
com.nostra13.universalimageloader.utils.FileUtils -> com.nostra13.universalimageloader.b.a:
    void copyStream(java.io.InputStream,java.io.OutputStream) -> a
com.nostra13.universalimageloader.utils.StorageUtils -> com.nostra13.universalimageloader.b.b:
    java.io.File getCacheDirectory(android.content.Context) -> a
    java.io.File getIndividualCacheDirectory(android.content.Context) -> b
    java.io.File getExternalCacheDir(android.content.Context) -> c
com.segment.SegmentAdapter -> com.segment.a:
    java.lang.String TAG -> b
    int page -> c
    int initialPage -> d
    boolean automaticNextPageLoading -> e
    com.segment.SegmentAdapter$HasMorePagesListener hasMorePagesListener -> f
    void setHasMorePagesListener(com.segment.SegmentAdapter$HasMorePagesListener) -> a
    int getPinnedHeaderState(int) -> b
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void bindSectionHeader(android.view.View,int,boolean) -> a
    android.view.View getSectionView$4e45925b(int,android.view.View) -> a
    void configurePinnedHeader(android.view.View,int,int) -> a
    int getPositionForSection(int) -> getPositionForSection
    int getSectionForPosition(int) -> getSectionForPosition
com.segment.SegmentAdapter$HasMorePagesListener -> com.segment.b:
com.segment.SegmentListView -> com.segment.SegmentListView:
    java.lang.String TAG -> a
    boolean footerViewAttached -> b
    android.view.View mHeaderView -> c
    boolean mHeaderViewVisible -> d
    int mHeaderViewWidth -> e
    int mHeaderViewHeight -> f
    com.segment.SegmentAdapter adapter -> g
    void setPinnedHeaderView(android.view.View) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void configureHeaderView(int) -> a
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    android.widget.ListAdapter getAdapter() -> getAdapter
kankan.wheel.R -> kankan.wheel.a:
kankan.wheel.R$drawable -> kankan.wheel.b:
    int picker_center -> a
kankan.wheel.widget.ItemsRange -> kankan.wheel.widget.a:
    int first -> a
    int count -> b
    int getFirst() -> a
    int getLast() -> b
    int getCount() -> c
    boolean contains(int) -> a
kankan.wheel.widget.OnWheelChangedListener -> kankan.wheel.widget.b:
    void onChanged$38d22c4c() -> a
kankan.wheel.widget.OnWheelClickedListener -> kankan.wheel.widget.c:
    void onItemClicked(kankan.wheel.widget.WheelView,int) -> a
kankan.wheel.widget.WheelRecycle -> kankan.wheel.widget.d:
    java.util.List items -> a
    java.util.List emptyItems -> b
    kankan.wheel.widget.WheelView wheel -> c
    int recycleItems(android.widget.LinearLayout,int,kankan.wheel.widget.ItemsRange) -> a
    android.view.View getItem() -> a
    android.view.View getEmptyItem() -> b
    void clearAll() -> c
    java.util.List addView(android.view.View,java.util.List) -> a
    android.view.View getCachedView(java.util.List) -> a
kankan.wheel.widget.WheelScroller -> kankan.wheel.widget.e:
    kankan.wheel.widget.WheelScroller$ScrollingListener listener -> a
    android.content.Context context -> b
    android.view.GestureDetector gestureDetector -> c
    android.widget.Scroller scroller -> d
    int lastScrollY -> e
    float lastTouchedY -> f
    boolean isScrollingPerformed -> g
    android.view.GestureDetector$SimpleOnGestureListener gestureListener -> h
    int MESSAGE_SCROLL -> i
    int MESSAGE_JUSTIFY -> j
    android.os.Handler animationHandler -> k
    void scroll$255f295(int) -> a
    void stopScrolling() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
    void setNextMessage(int) -> b
    void clearMessages() -> c
    void justify() -> d
    void startScrolling() -> e
    void finishScrolling() -> b
    void access$0(kankan.wheel.widget.WheelScroller,int) -> a
    android.widget.Scroller access$1(kankan.wheel.widget.WheelScroller) -> a
    int access$2(kankan.wheel.widget.WheelScroller) -> b
    void access$3$306a2cc4(kankan.wheel.widget.WheelScroller) -> c
    kankan.wheel.widget.WheelScroller$ScrollingListener access$4(kankan.wheel.widget.WheelScroller) -> d
    android.os.Handler access$5(kankan.wheel.widget.WheelScroller) -> e
    void access$6(kankan.wheel.widget.WheelScroller) -> f
kankan.wheel.widget.WheelScroller$1 -> kankan.wheel.widget.f:
    kankan.wheel.widget.WheelScroller this$0 -> a
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
kankan.wheel.widget.WheelScroller$2 -> kankan.wheel.widget.g:
    kankan.wheel.widget.WheelScroller this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
kankan.wheel.widget.WheelScroller$ScrollingListener -> kankan.wheel.widget.h:
    void onScroll(int) -> a
    void onStarted() -> a
    void onFinished() -> b
    void onJustify() -> c
kankan.wheel.widget.WheelView -> kankan.wheel.widget.WheelView:
    int[] SHADOWS_COLORS -> c
    int currentItem -> d
    int visibleItems -> e
    int itemHeight -> f
    android.graphics.drawable.Drawable centerDrawable -> g
    android.graphics.drawable.GradientDrawable topShadow -> h
    android.graphics.drawable.GradientDrawable bottomShadow -> i
    kankan.wheel.widget.WheelScroller scroller -> j
    boolean isScrollingPerformed -> k
    int scrollingOffset -> l
    boolean isCyclic -> a
    android.widget.LinearLayout itemsLayout -> m
    int firstItem -> n
    kankan.wheel.widget.adapters.WheelViewAdapter viewAdapter -> o
    kankan.wheel.widget.WheelRecycle recycle -> p
    java.util.List changingListeners -> q
    java.util.List scrollingListeners -> r
    java.util.List clickingListeners -> s
    kankan.wheel.widget.WheelScroller$ScrollingListener scrollingListener -> b
    android.database.DataSetObserver dataObserver -> t
    void initData$faab20d() -> g
    kankan.wheel.widget.adapters.WheelViewAdapter getViewAdapter() -> a
    void setViewAdapter(kankan.wheel.widget.adapters.WheelViewAdapter) -> a
    void addChangingListener(kankan.wheel.widget.OnWheelChangedListener) -> a
    void notifyScrollingListenersAboutStart() -> b
    void notifyScrollingListenersAboutEnd() -> c
    void addClickingListener(kankan.wheel.widget.OnWheelClickedListener) -> a
    int getCurrentItem() -> d
    void setCurrentItem(int,boolean) -> a
    void setCurrentItem(int) -> a
    boolean isCyclic() -> e
    void setCyclic$1385ff() -> f
    void invalidateWheel(boolean) -> a
    int getItemHeight() -> h
    int calculateLayoutWidth(int,int) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layout(int,int) -> b
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void createItemsLayout() -> i
    boolean addViewItem(int,boolean) -> b
    boolean isValidItemIndex(int) -> b
    void access$0(kankan.wheel.widget.WheelView,boolean) -> a
    void access$1(kankan.wheel.widget.WheelView,int) -> a
    int access$2(kankan.wheel.widget.WheelView) -> a
    void access$3(kankan.wheel.widget.WheelView,int) -> b
    kankan.wheel.widget.WheelScroller access$4(kankan.wheel.widget.WheelView) -> b
    boolean access$5(kankan.wheel.widget.WheelView) -> c
kankan.wheel.widget.WheelView$1 -> kankan.wheel.widget.i:
    kankan.wheel.widget.WheelView this$0 -> a
    void onStarted() -> a
    void onScroll(int) -> a
    void onFinished() -> b
    void onJustify() -> c
kankan.wheel.widget.WheelView$2 -> kankan.wheel.widget.j:
    kankan.wheel.widget.WheelView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
kankan.wheel.widget.adapters.AbstractWheelAdapter -> kankan.wheel.widget.adapters.a:
    java.util.List datasetObservers -> a
    android.view.View getEmptyItem(android.view.View,android.view.ViewGroup) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
kankan.wheel.widget.adapters.AbstractWheelTextAdapter -> kankan.wheel.widget.adapters.b:
    int textColor -> a
    int textSize -> b
    int textGravity -> c
    android.content.Context context -> d
    android.view.LayoutInflater inflater -> e
    int itemResourceId -> f
    int itemTextResourceId -> g
    int emptyItemResourceId -> h
    void setTextGravity$13462e() -> a
    void setTextSize(int) -> a
    java.lang.CharSequence getItemText(int) -> b
    android.view.View getItem(int,android.view.View,android.view.ViewGroup) -> a
    android.view.View getEmptyItem(android.view.View,android.view.ViewGroup) -> a
    void configureTextView(android.widget.TextView) -> a
    android.widget.TextView getTextView(android.view.View,int) -> a
    android.view.View getView(int,android.view.ViewGroup) -> a
kankan.wheel.widget.adapters.ArrayWheelAdapter -> kankan.wheel.widget.adapters.c:
    java.lang.Object[] items -> a
    java.lang.CharSequence getItemText(int) -> b
    int getItemsCount() -> b
kankan.wheel.widget.adapters.DoubleWheelAdapter -> kankan.wheel.widget.adapters.DoubleWheelAdapter:
    double minValue -> a
    double maxValue -> b
    double step -> c
    boolean startFromSecondChar -> i
    java.lang.String format -> j
    java.lang.CharSequence getItemText(int) -> b
    int getItemsCount() -> b
kankan.wheel.widget.adapters.NumericWheelAdapter -> kankan.wheel.widget.adapters.NumericWheelAdapter:
    int minValue -> a
    int maxValue -> b
    java.lang.String format -> c
    java.lang.CharSequence getItemText(int) -> b
    int getItemsCount() -> b
kankan.wheel.widget.adapters.WheelViewAdapter -> kankan.wheel.widget.adapters.d:
    int getItemsCount() -> b
    android.view.View getItem(int,android.view.View,android.view.ViewGroup) -> a
    android.view.View getEmptyItem(android.view.View,android.view.ViewGroup) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
org.achartengine.GraphicalActivity -> org.achartengine.GraphicalActivity:
    org.achartengine.GraphicalView mView -> a
    org.achartengine.chart.AbstractChart mChart -> b
    void onCreate(android.os.Bundle) -> onCreate
org.achartengine.GraphicalView -> org.achartengine.a:
    org.achartengine.chart.AbstractChart mChart -> a
    org.achartengine.renderer.DefaultRenderer mRenderer -> b
    android.graphics.Rect mRect -> c
    android.os.Handler mHandler -> d
    android.graphics.RectF mZoomR -> e
    android.graphics.Bitmap zoomInImage -> f
    android.graphics.Bitmap zoomOutImage -> g
    android.graphics.Bitmap fitZoomImage -> h
    int zoomSize -> i
    int ZOOM_BUTTONS_COLOR -> j
    org.achartengine.tools.Zoom mZoomIn -> k
    org.achartengine.tools.Zoom mZoomOut -> l
    org.achartengine.tools.FitZoom mFitZoom -> m
    android.graphics.Paint mPaint -> n
    org.achartengine.ITouchHandler mTouchHandler -> o
    float oldX -> p
    float oldY -> q
    void onDraw(android.graphics.Canvas) -> onDraw
    void zoomIn() -> a
    void zoomOut() -> b
    void zoomReset() -> c
    android.graphics.RectF getZoomRectangle() -> d
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void repaint() -> e
org.achartengine.GraphicalView$1 -> org.achartengine.b:
    org.achartengine.GraphicalView this$0 -> a
    void run() -> run
org.achartengine.ITouchHandler -> org.achartengine.c:
    boolean handleTouch(android.view.MotionEvent) -> a
org.achartengine.TouchHandler -> org.achartengine.d:
    org.achartengine.renderer.DefaultRenderer mRenderer -> a
    float oldX -> b
    float oldY -> c
    float oldX2 -> d
    float oldY2 -> e
    android.graphics.RectF zoomR -> f
    org.achartengine.tools.Pan mPan -> g
    org.achartengine.tools.Zoom mPinchZoom -> h
    org.achartengine.GraphicalView graphicalView -> i
    boolean handleTouch(android.view.MotionEvent) -> a
org.achartengine.TouchHandlerOld -> org.achartengine.e:
    org.achartengine.renderer.DefaultRenderer mRenderer -> a
    float oldX -> b
    float oldY -> c
    android.graphics.RectF zoomR -> d
    org.achartengine.tools.Pan mPan -> e
    org.achartengine.GraphicalView graphicalView -> f
    boolean handleTouch(android.view.MotionEvent) -> a
org.achartengine.chart.AbstractChart -> org.achartengine.a.a:
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> a
    void drawBackground(org.achartengine.renderer.DefaultRenderer,android.graphics.Canvas,int,int,int,int,android.graphics.Paint,boolean,int) -> a
    int drawLegend(android.graphics.Canvas,org.achartengine.renderer.DefaultRenderer,java.lang.String[],int,int,int,int,int,int,android.graphics.Paint,boolean) -> a
    void drawString(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint) -> a
    boolean getExceed(float,org.achartengine.renderer.DefaultRenderer,int,int) -> a
    boolean isVertical(org.achartengine.renderer.DefaultRenderer) -> a
    float[] calculateDrawPoints(float,float,float,float,int,int) -> a
    void drawPath(android.graphics.Canvas,float[],android.graphics.Paint,boolean) -> a
    int getLegendShapeWidth$134621() -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
org.achartengine.chart.ClickableArea -> org.achartengine.a.b:
    android.graphics.RectF rect -> a
    double x -> b
    double y -> c
org.achartengine.chart.CubicLineChart -> org.achartengine.a.c:
    float firstMultiplier -> c
    float secondMultiplier -> d
    org.achartengine.model.Point p1 -> e
    org.achartengine.model.Point p2 -> f
    org.achartengine.model.Point p3 -> g
    void drawPath(android.graphics.Canvas,float[],android.graphics.Paint,boolean) -> a
    void calc(float[],org.achartengine.model.Point,int,int,float) -> a
org.achartengine.chart.LineChart -> org.achartengine.a.d:
    org.achartengine.chart.ScatterChart pointsChart -> c
    void drawSeries$5b0b722c(android.graphics.Canvas,android.graphics.Paint,float[],org.achartengine.renderer.SimpleSeriesRenderer,float) -> a
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints$1222cb8e(float[],double[]) -> a
    int getLegendShapeWidth$134621() -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    boolean isRenderPoints(org.achartengine.renderer.SimpleSeriesRenderer) -> a
    org.achartengine.chart.ScatterChart getPointsChart() -> b
org.achartengine.chart.PointStyle -> org.achartengine.a.e:
    org.achartengine.chart.PointStyle X -> a
    org.achartengine.chart.PointStyle CIRCLE -> b
    org.achartengine.chart.PointStyle TRIANGLE -> c
    org.achartengine.chart.PointStyle SQUARE -> d
    org.achartengine.chart.PointStyle DIAMOND -> e
    org.achartengine.chart.PointStyle POINT -> f
    java.lang.String mName -> g
    org.achartengine.chart.PointStyle[] $VALUES -> h
    org.achartengine.chart.PointStyle[] values() -> a
    java.lang.String toString() -> toString
org.achartengine.chart.RoundChart -> org.achartengine.a.f:
    org.achartengine.renderer.DefaultRenderer mRenderer -> a
    int mCenterX -> b
    int mCenterY -> c
    org.achartengine.renderer.DefaultRenderer getRenderer() -> b
    int getCenterX() -> c
    int getCenterY() -> d
    void setCenterX(int) -> a
    void setCenterY(int) -> b
org.achartengine.chart.ScatterChart -> org.achartengine.a.g:
    float size -> c
    void drawSeries$5b0b722c(android.graphics.Canvas,android.graphics.Paint,float[],org.achartengine.renderer.SimpleSeriesRenderer,float) -> a
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints$1222cb8e(float[],double[]) -> a
    int getLegendShapeWidth$134621() -> a
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> a
    void drawX(android.graphics.Canvas,android.graphics.Paint,float,float) -> a
    void drawCircle(android.graphics.Canvas,android.graphics.Paint,float,float) -> b
    void drawTriangle(android.graphics.Canvas,android.graphics.Paint,float[],float,float) -> a
    void drawSquare(android.graphics.Canvas,android.graphics.Paint,float,float) -> c
    void drawDiamond(android.graphics.Canvas,android.graphics.Paint,float[],float,float) -> b
org.achartengine.chart.ScatterChart$1 -> org.achartengine.a.h:
    int[] $SwitchMap$org$achartengine$chart$PointStyle -> a
org.achartengine.chart.XYChart -> org.achartengine.a.i:
    org.achartengine.model.XYMultipleSeriesDataset mDataset -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer mRenderer -> b
    float mScale -> c
    float mTranslate -> d
    org.achartengine.model.Point mCenter -> e
    android.graphics.Rect mScreenR -> f
    java.util.Map mCalcRange -> g
    java.util.Map clickableAreas -> h
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> a
    java.util.Map getYLabels(double[],double[],int) -> a
    java.util.List getValidLabels(java.util.List) -> a
    void drawSeries$7a25fd6f(org.achartengine.model.XYSeries,android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation,int) -> a
    void setStroke(android.graphics.Paint$Cap,android.graphics.Paint$Join,float,android.graphics.Paint$Style,android.graphics.PathEffect,android.graphics.Paint) -> a
    void drawChartValuesText$76a1002a(android.graphics.Canvas,org.achartengine.model.XYSeries,org.achartengine.renderer.SimpleSeriesRenderer,android.graphics.Paint,float[],int) -> a
    void drawText(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,float) -> a
    void transform(android.graphics.Canvas,float,boolean) -> a
    java.lang.String getLabel(double) -> a
    void drawXLabels(java.util.List,java.lang.Double[],android.graphics.Canvas,android.graphics.Paint,int,int,int,double,double,double) -> a
    void drawYLabels(java.util.Map,android.graphics.Canvas,android.graphics.Paint,int,int,int,int,double[],double[]) -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer getRenderer() -> c
    org.achartengine.model.XYMultipleSeriesDataset getDataset() -> d
    double[] getCalcRange(int) -> a
    int getLabelLinePos(android.graphics.Paint$Align) -> a
    double[] toRealPoint(float,float,int) -> a
    void drawSeries$5b0b722c(android.graphics.Canvas,android.graphics.Paint,float[],org.achartengine.renderer.SimpleSeriesRenderer,float) -> a
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints$1222cb8e(float[],double[]) -> a
    boolean isRenderPoints(org.achartengine.renderer.SimpleSeriesRenderer) -> a
    org.achartengine.chart.ScatterChart getPointsChart() -> b
org.achartengine.model.Point -> org.achartengine.b.a:
    float mX -> a
    float mY -> b
    float getX() -> a
    float getY() -> b
    void setX(float) -> a
    void setY(float) -> b
org.achartengine.model.XYMultipleSeriesDataset -> org.achartengine.b.b:
    java.util.List mSeries -> a
    void addSeries(org.achartengine.model.XYSeries) -> a
    org.achartengine.model.XYSeries getSeriesAt(int) -> a
    int getSeriesCount() -> a
    org.achartengine.model.XYSeries[] getSeries() -> b
org.achartengine.model.XYSeries -> org.achartengine.b.c:
    java.lang.String mTitle -> a
    org.achartengine.util.IndexXYMap mXY -> b
    double mMinX -> c
    double mMaxX -> d
    double mMinY -> e
    double mMaxY -> f
    int mScaleNumber -> g
    int getScaleNumber() -> a
    void initRange() -> h
    void updateRange(double,double) -> c
    java.lang.String getTitle() -> b
    void add(double,double) -> a
    double getX(int) -> b
    double getY(int) -> a
    java.util.SortedMap getRange$70a7aec0(double,double) -> b
    int getIndexForKey(double) -> a
    int getItemCount() -> c
    double getMinX() -> d
    double getMinY() -> e
    double getMaxX() -> f
    double getMaxY() -> g
org.achartengine.renderer.BasicStroke -> org.achartengine.c.a:
    org.achartengine.renderer.BasicStroke SOLID -> a
    org.achartengine.renderer.BasicStroke DASHED -> b
    org.achartengine.renderer.BasicStroke DOTTED -> c
    android.graphics.Paint$Cap mCap -> d
    android.graphics.Paint$Join mJoin -> e
    float mMiter -> f
    float[] mIntervals -> g
    float mPhase -> h
    android.graphics.Paint$Cap getCap() -> a
    android.graphics.Paint$Join getJoin() -> b
    float getMiter() -> c
    float[] getIntervals() -> d
    float getPhase() -> e
org.achartengine.renderer.DefaultRenderer -> org.achartengine.c.b:
    java.lang.String mChartTitle -> a
    float mChartTitleTextSize -> b
    android.graphics.Typeface REGULAR_TEXT_FONT -> c
    java.lang.String mTextTypefaceName -> d
    int mTextTypefaceStyle -> e
    int mBackgroundColor -> f
    boolean mApplyBackgroundColor -> g
    boolean mShowAxes -> h
    int mAxesColor -> i
    boolean mShowLabels -> j
    int mLabelsColor -> k
    float mLabelsTextSize -> l
    boolean mShowLegend -> m
    float mLegendTextSize -> n
    boolean mFitLegend -> o
    boolean mShowGridX -> p
    boolean mShowGridY -> q
    boolean mShowCustomTextGrid -> r
    java.util.List mRenderers -> s
    boolean mAntialiasing -> t
    int mLegendHeight -> u
    int[] mMargins -> v
    float mScale -> w
    boolean mPanEnabled -> x
    boolean mZoomEnabled -> y
    boolean mZoomButtonsVisible -> z
    float mZoomRate -> A
    boolean mExternalZoomEnabled -> B
    float mOriginalScale -> C
    boolean mClickEnabled -> D
    int selectableBuffer -> E
    boolean mInScroll -> F
    float mStartAngle -> G
    java.lang.String getChartTitle() -> a
    float getChartTitleTextSize() -> b
    void addSeriesRenderer(org.achartengine.renderer.SimpleSeriesRenderer) -> a
    org.achartengine.renderer.SimpleSeriesRenderer getSeriesRendererAt(int) -> a
    int getSeriesRendererCount() -> c
    int getBackgroundColor() -> d
    boolean isApplyBackgroundColor() -> e
    int getAxesColor() -> f
    int getLabelsColor() -> g
    float getLabelsTextSize() -> h
    boolean isShowAxes() -> i
    void setShowAxes$1385ff() -> j
    boolean isShowLabels() -> k
    void setShowLabels$1385ff() -> l
    boolean isShowGridX() -> m
    boolean isShowGridY() -> n
    boolean isShowCustomTextGrid() -> o
    boolean isShowLegend() -> p
    void setShowLegend$1385ff() -> q
    boolean isFitLegend() -> r
    java.lang.String getTextTypefaceName() -> s
    int getTextTypefaceStyle() -> t
    float getLegendTextSize() -> u
    boolean isAntialiasing() -> v
    void setAntialiasing$1385ff() -> w
    float getScale() -> x
    float getOriginalScale() -> y
    void setScale(float) -> a
    boolean isZoomEnabled() -> z
    boolean isZoomButtonsVisible() -> A
    boolean isExternalZoomEnabled() -> B
    float getZoomRate() -> C
    boolean isPanEnabled() -> D
    boolean isClickEnabled() -> E
    void setClickEnabled$1385ff() -> F
    int getSelectableBuffer() -> G
    void setSelectableBuffer(int) -> b
    int getLegendHeight() -> H
    int[] getMargins() -> I
    void setMargins(int[]) -> a
    boolean isInScroll() -> J
org.achartengine.renderer.SimpleSeriesRenderer -> org.achartengine.c.c:
    int mColor -> a
    boolean mDisplayChartValues -> b
    float mChartValuesTextSize -> c
    android.graphics.Paint$Align mChartValuesTextAlign -> d
    float mChartValuesSpacing -> e
    org.achartengine.renderer.BasicStroke mStroke -> f
    boolean mGradientEnabled -> g
    int getColor() -> a
    void setColor(int) -> a
    boolean isDisplayChartValues() -> b
    float getChartValuesTextSize() -> c
    android.graphics.Paint$Align getChartValuesTextAlign() -> d
    float getChartValuesSpacing() -> e
    org.achartengine.renderer.BasicStroke getStroke() -> f
org.achartengine.renderer.XYMultipleSeriesRenderer -> org.achartengine.c.d:
    java.lang.String mXTitle -> a
    java.lang.String[] mYTitle -> b
    float mAxisTitleTextSize -> c
    double[] mMinX -> d
    double[] mMaxX -> e
    double[] mMinY -> f
    double[] mMaxY -> g
    int mXLabels -> h
    int mYLabels -> i
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation mOrientation -> j
    java.util.Map mXTextLabels -> k
    java.util.Map mYTextLabels -> l
    boolean mPanXEnabled -> m
    boolean mPanYEnabled -> n
    boolean mZoomXEnabled -> o
    boolean mZoomYEnabled -> p
    double mBarSpacing -> q
    int mMarginsColor -> r
    double[] mPanLimits -> s
    double[] mZoomLimits -> t
    float mXLabelsAngle -> u
    float mYLabelsAngle -> v
    java.util.Map initialRange -> w
    float mPointSize -> x
    int mGridColor -> y
    int scalesCount -> z
    android.graphics.Paint$Align xLabelsAlign -> A
    android.graphics.Paint$Align[] yLabelsAlign -> B
    android.graphics.Paint$Align[] yAxisAlign -> C
    int mXLabelsColor -> D
    int[] mYLabelsColor -> E
    void initAxesRange$13462e() -> ag
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation getOrientation() -> K
    java.lang.String getXTitle() -> L
    java.lang.String getYTitle() -> M
    java.lang.String getYTitle(int) -> c
    float getAxisTitleTextSize() -> N
    void setYAxisMin(double) -> a
    void setYAxisMax(double) -> b
    double getXAxisMin(int) -> d
    void setXAxisMin(double,int) -> a
    boolean isMinXSet(int) -> e
    double getXAxisMax(int) -> f
    void setXAxisMax(double,int) -> b
    boolean isMaxXSet(int) -> g
    double getYAxisMin(int) -> h
    void setYAxisMin(double,int) -> c
    boolean isMinYSet(int) -> i
    double getYAxisMax(int) -> j
    void setYAxisMax(double,int) -> d
    boolean isMaxYSet(int) -> k
    int getXLabels() -> O
    java.lang.String getXTextLabel(java.lang.Double) -> a
    java.lang.Double[] getXTextLabelLocations() -> P
    java.lang.String getYTextLabel(java.lang.Double,int) -> a
    java.lang.Double[] getYTextLabelLocations(int) -> l
    int getYLabels() -> Q
    boolean isPanEnabled() -> D
    boolean isPanXEnabled() -> R
    boolean isPanYEnabled() -> S
    boolean isZoomEnabled() -> z
    boolean isZoomXEnabled() -> T
    boolean isZoomYEnabled() -> U
    int getMarginsColor() -> V
    void setMarginsColor(int) -> m
    int getGridColor() -> W
    double[] getPanLimits() -> X
    double[] getZoomLimits() -> Y
    float getXLabelsAngle() -> Z
    float getYLabelsAngle() -> aa
    float getPointSize() -> ab
    void setRange(double[],int) -> a
    boolean isInitialRangeSet() -> ac
    boolean isInitialRangeSet(int) -> n
    double[] getInitialRange(int) -> o
    int getXLabelsColor() -> ad
    int getYLabelsColor(int) -> p
    android.graphics.Paint$Align getXLabelsAlign() -> ae
    android.graphics.Paint$Align getYLabelsAlign(int) -> q
    android.graphics.Paint$Align getYAxisAlign(int) -> r
    int getScalesCount() -> af
org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation -> org.achartengine.c.e:
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation HORIZONTAL -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation VERTICAL -> b
    int mAngle -> c
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation[] $VALUES -> d
    int getAngle() -> a
org.achartengine.renderer.XYSeriesRenderer -> org.achartengine.c.f:
    boolean mFillPoints -> a
    boolean mFillBelowLine -> b
    int mFillColor -> c
    org.achartengine.chart.PointStyle mPointStyle -> d
    float mLineWidth -> e
    boolean isFillBelowLine() -> g
    boolean isFillPoints() -> h
    void setFillPoints$1385ff() -> i
    int getFillBelowLineColor() -> j
    org.achartengine.chart.PointStyle getPointStyle() -> k
    float getLineWidth() -> l
    void setLineWidth(float) -> a
org.achartengine.tools.AbstractTool -> org.achartengine.d.a:
    org.achartengine.chart.AbstractChart mChart -> a
    org.achartengine.renderer.XYMultipleSeriesRenderer mRenderer -> b
    double[] getRange(int) -> a
    void checkRange(double[],int) -> a
    void setXRange(double,double,int) -> a
    void setYRange(double,double,int) -> b
org.achartengine.tools.FitZoom -> org.achartengine.d.b:
    void apply() -> a
org.achartengine.tools.Pan -> org.achartengine.d.c:
    java.util.List mPanListeners -> c
    boolean limitsReachedX -> d
    boolean limitsReachedY -> e
    void apply(float,float,float,float) -> a
    void notifyPanListeners() -> a
org.achartengine.tools.Zoom -> org.achartengine.d.d:
    boolean mZoomIn -> c
    float mZoomRate -> d
    java.util.List mZoomListeners -> e
    boolean limitsReachedX -> f
    boolean limitsReachedY -> g
    void setZoomRate(float) -> a
    void apply(int) -> b
    void notifyZoomListeners$8a7ab56() -> b
    void notifyZoomResetListeners() -> a
org.achartengine.tools.ZoomEvent -> org.achartengine.d.e:
    boolean mZoomIn -> a
    float mZoomRate -> b
org.achartengine.util.IndexXYMap -> org.achartengine.e.a:
    java.util.List indexList -> a
    double maxXDifference -> b
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void updateMaxXDifference() -> a
    void clear() -> clear
    java.lang.Object getXByIndex(int) -> a
    java.lang.Object getYByIndex(int) -> b
    int getIndexForKey(java.lang.Object) -> a
org.achartengine.util.MathHelper -> org.achartengine.e.b:
    java.text.NumberFormat FORMAT -> a
    java.util.List getLabels(double,double,int) -> a
    float[] getFloats(java.util.List) -> a
    double[] getDoubles(java.util.List) -> b
org.acra.ACRA -> org.acra.ACRA:
    boolean DEV_LOGGING -> DEV_LOGGING
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String RES_NOTIF_ICON -> RES_NOTIF_ICON
    java.lang.String RES_NOTIF_TICKER_TEXT -> RES_NOTIF_TICKER_TEXT
    java.lang.String RES_NOTIF_TITLE -> RES_NOTIF_TITLE
    java.lang.String RES_NOTIF_TEXT -> RES_NOTIF_TEXT
    java.lang.String RES_DIALOG_ICON -> RES_DIALOG_ICON
    java.lang.String RES_DIALOG_TITLE -> RES_DIALOG_TITLE
    java.lang.String RES_DIALOG_TEXT -> RES_DIALOG_TEXT
    java.lang.String RES_DIALOG_COMMENT_PROMPT -> RES_DIALOG_COMMENT_PROMPT
    java.lang.String RES_DIALOG_OK_TOAST -> RES_DIALOG_OK_TOAST
    java.lang.String RES_TOAST_TEXT -> RES_TOAST_TEXT
    int NOTIF_CRASH_ID -> NOTIF_CRASH_ID
    java.lang.String PREF_DISABLE_ACRA -> PREF_DISABLE_ACRA
    java.lang.String PREF_ENABLE_ACRA -> PREF_ENABLE_ACRA
    java.lang.String PREF_ENABLE_SYSTEM_LOGS -> PREF_ENABLE_SYSTEM_LOGS
    java.lang.String PREF_ENABLE_DEVICE_ID -> PREF_ENABLE_DEVICE_ID
    java.lang.String PREF_USER_EMAIL_ADDRESS -> PREF_USER_EMAIL_ADDRESS
    java.lang.String PREF_ALWAYS_ACCEPT -> PREF_ALWAYS_ACCEPT
    android.app.Application mApplication -> mApplication
    org.acra.annotation.ReportsCrashes mReportsCrashes -> mReportsCrashes
    android.content.SharedPreferences$OnSharedPreferenceChangeListener mPrefListener -> mPrefListener
    android.text.format.Time mAppStartDate -> mAppStartDate
    org.acra.ReportField[] DEFAULT_MAIL_REPORT_FIELDS -> DEFAULT_MAIL_REPORT_FIELDS
    org.acra.ReportField[] DEFAULT_REPORT_FIELDS -> DEFAULT_REPORT_FIELDS
    java.lang.String NULL_VALUE -> NULL_VALUE
    void init(android.app.Application) -> init
    void initAcra() -> initAcra
    void checkCrashResources() -> checkCrashResources
    android.content.SharedPreferences getACRASharedPreferences() -> getACRASharedPreferences
    org.acra.annotation.ReportsCrashes getConfig() -> getConfig
    void access$000() -> access$000
org.acra.ACRA$1 -> org.acra.a:
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
org.acra.ACRA$2 -> org.acra.b:
    int[] $SwitchMap$org$acra$ReportingInteractionMode -> a
org.acra.ACRAConfigurationException -> org.acra.ACRAConfigurationException:
    long serialVersionUID -> serialVersionUID
org.acra.Compatibility -> org.acra.Compatibility:
    int getAPILevel() -> getAPILevel
    java.lang.String getDropBoxServiceName() -> getDropBoxServiceName
org.acra.ConfigurationInspector -> org.acra.ConfigurationInspector:
    java.lang.String SUFFIX_MASK -> SUFFIX_MASK
    java.lang.String FIELD_SCREENLAYOUT -> FIELD_SCREENLAYOUT
    java.lang.String FIELD_UIMODE -> FIELD_UIMODE
    java.lang.String FIELD_MNC -> FIELD_MNC
    java.lang.String FIELD_MCC -> FIELD_MCC
    java.lang.String PREFIX_UI_MODE -> PREFIX_UI_MODE
    java.lang.String PREFIX_TOUCHSCREEN -> PREFIX_TOUCHSCREEN
    java.lang.String PREFIX_SCREENLAYOUT -> PREFIX_SCREENLAYOUT
    java.lang.String PREFIX_ORIENTATION -> PREFIX_ORIENTATION
    java.lang.String PREFIX_NAVIGATIONHIDDEN -> PREFIX_NAVIGATIONHIDDEN
    java.lang.String PREFIX_NAVIGATION -> PREFIX_NAVIGATION
    java.lang.String PREFIX_KEYBOARDHIDDEN -> PREFIX_KEYBOARDHIDDEN
    java.lang.String PREFIX_KEYBOARD -> PREFIX_KEYBOARD
    java.lang.String PREFIX_HARDKEYBOARDHIDDEN -> PREFIX_HARDKEYBOARDHIDDEN
    android.util.SparseArray mHardKeyboardHiddenValues -> mHardKeyboardHiddenValues
    android.util.SparseArray mKeyboardValues -> mKeyboardValues
    android.util.SparseArray mKeyboardHiddenValues -> mKeyboardHiddenValues
    android.util.SparseArray mNavigationValues -> mNavigationValues
    android.util.SparseArray mNavigationHiddenValues -> mNavigationHiddenValues
    android.util.SparseArray mOrientationValues -> mOrientationValues
    android.util.SparseArray mScreenLayoutValues -> mScreenLayoutValues
    android.util.SparseArray mTouchScreenValues -> mTouchScreenValues
    android.util.SparseArray mUiModeValues -> mUiModeValues
    java.util.HashMap mValueArrays -> mValueArrays
    java.lang.String toString(android.content.res.Configuration) -> toString
    java.lang.String getFieldValueName(android.content.res.Configuration,java.lang.reflect.Field) -> getFieldValueName
    java.lang.String activeFlags(android.util.SparseArray,int) -> activeFlags
org.acra.CrashReportData -> org.acra.CrashReportData:
    long serialVersionUID -> serialVersionUID
    java.lang.String PROP_DTD_NAME -> PROP_DTD_NAME
    org.acra.CrashReportData defaults -> defaults
    int NONE -> NONE
    int SLASH -> SLASH
    int UNICODE -> UNICODE
    int CONTINUE -> CONTINUE
    int KEY_DONE -> KEY_DONE
    int IGNORE -> IGNORE
    java.lang.String lineSeparator -> lineSeparator
    void dumpString(java.lang.StringBuilder,java.lang.String,boolean) -> dumpString
    java.lang.String getProperty(org.acra.ReportField) -> getProperty
    java.lang.String getProperty(org.acra.ReportField,java.lang.String) -> getProperty
    void list(java.io.PrintStream) -> list
    void list(java.io.PrintWriter) -> list
    void load(java.io.InputStream) -> load
    boolean isEbcdic(java.io.BufferedInputStream) -> isEbcdic
    void load(java.io.Reader) -> load
    java.util.Enumeration keys() -> keys
    void save(java.io.OutputStream,java.lang.String) -> save
    java.lang.Object setProperty(org.acra.ReportField,java.lang.String) -> setProperty
    void store(java.io.OutputStream,java.lang.String) -> store
    void store(java.io.Writer,java.lang.String) -> store
    void storeToXML(java.io.OutputStream,java.lang.String) -> storeToXML
    void storeToXML(java.io.OutputStream,java.lang.String,java.lang.String) -> storeToXML
    java.lang.String substitutePredefinedEntries(java.lang.String) -> substitutePredefinedEntries
org.acra.CrashReportDialog -> org.acra.CrashReportDialog:
    android.content.SharedPreferences prefs -> prefs
    android.widget.EditText userComment -> userComment
    android.widget.EditText userEmail -> userEmail
    java.lang.String mReportFileName -> mReportFileName
    void onCreate(android.os.Bundle) -> onCreate
    void cancelNotification() -> cancelNotification
    android.widget.EditText access$000(org.acra.CrashReportDialog) -> access$000
    android.content.SharedPreferences access$100(org.acra.CrashReportDialog) -> access$100
    android.widget.EditText access$200(org.acra.CrashReportDialog) -> access$200
org.acra.CrashReportDialog$1 -> org.acra.c:
    org.acra.CrashReportDialog this$0 -> a
    void onClick(android.view.View) -> onClick
org.acra.CrashReportDialog$2 -> org.acra.d:
    org.acra.CrashReportDialog this$0 -> a
    void onClick(android.view.View) -> onClick
org.acra.DeviceFeaturesCollector -> org.acra.DeviceFeaturesCollector:
    java.lang.String getFeatures(android.content.Context) -> getFeatures
org.acra.DropBoxCollector -> org.acra.e:
    java.lang.String[] SYSTEM_TAGS -> a
    java.lang.String read(android.content.Context,java.lang.String[]) -> a
org.acra.DumpSysCollector -> org.acra.f:
    java.lang.String collectMemInfo() -> a
org.acra.ErrorReporter -> org.acra.ErrorReporter:
    java.lang.String REPORTFILE_EXTENSION -> REPORTFILE_EXTENSION
    boolean enabled -> enabled
    java.util.ArrayList mReportSenders -> mReportSenders
    int MAX_SEND_REPORTS -> MAX_SEND_REPORTS
    org.acra.CrashReportData mCrashProperties -> mCrashProperties
    java.util.Map mCustomParameters -> mCustomParameters
    java.lang.String SILENT_SUFFIX -> SILENT_SUFFIX
    java.lang.String APPROVED_SUFFIX -> APPROVED_SUFFIX
    java.lang.String EXTRA_REPORT_FILE_NAME -> EXTRA_REPORT_FILE_NAME
    java.lang.Thread$UncaughtExceptionHandler mDfltExceptionHandler -> mDfltExceptionHandler
    org.acra.ErrorReporter mInstanceSingleton -> mInstanceSingleton
    android.content.Context mContext -> mContext
    java.lang.String mInitialConfiguration -> mInitialConfiguration
    org.acra.ReportingInteractionMode mReportingInteractionMode -> mReportingInteractionMode
    void approvePendingReports() -> approvePendingReports
    void addCustomData(java.lang.String,java.lang.String) -> addCustomData
    java.lang.String putCustomData(java.lang.String,java.lang.String) -> putCustomData
    java.lang.String removeCustomData(java.lang.String) -> removeCustomData
    java.lang.String getCustomData(java.lang.String) -> getCustomData
    java.lang.String createCustomInfoString() -> createCustomInfoString
    org.acra.ErrorReporter getInstance() -> getInstance
    void init(android.content.Context) -> init
    long getAvailableInternalMemorySize() -> getAvailableInternalMemorySize
    long getTotalInternalMemorySize() -> getTotalInternalMemorySize
    void retrieveCrashData(android.content.Context) -> retrieveCrashData
    java.lang.String toString(android.view.Display) -> toString
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    org.acra.ErrorReporter$ReportsSenderWorker handleException(java.lang.Throwable,org.acra.ReportingInteractionMode) -> handleException
    org.acra.ErrorReporter$ReportsSenderWorker handleException(java.lang.Throwable) -> handleException
    java.lang.Thread handleSilentException(java.lang.Throwable) -> handleSilentException
    void notifySendReport(java.lang.String) -> notifySendReport
    void sendCrashReport(android.content.Context,org.acra.CrashReportData) -> sendCrashReport
    java.lang.String saveCrashReportFile(java.lang.String,org.acra.CrashReportData) -> saveCrashReportFile
    java.lang.String[] getCrashReportFilesList() -> getCrashReportFilesList
    void checkAndSendReports(android.content.Context,boolean) -> checkAndSendReports
    org.acra.CrashReportData loadCrashReport(android.content.Context,java.lang.String) -> loadCrashReport
    void deleteFile(android.content.Context,java.lang.String) -> deleteFile
    void setReportingInteractionMode(org.acra.ReportingInteractionMode) -> setReportingInteractionMode
    void checkReportsOnApplicationStart() -> checkReportsOnApplicationStart
    java.lang.String getLatestNonSilentReport(java.lang.String[]) -> getLatestNonSilentReport
    void deletePendingReports() -> deletePendingReports
    void deletePendingSilentReports() -> deletePendingSilentReports
    void deletePendingNonApprovedReports() -> deletePendingNonApprovedReports
    void deletePendingReports(boolean,boolean,int) -> deletePendingReports
    void disable() -> disable
    boolean containsOnlySilentOrApprovedReports(java.lang.String[]) -> containsOnlySilentOrApprovedReports
    boolean isSilent(java.lang.String) -> isSilent
    boolean isApproved(java.lang.String) -> isApproved
    void addUserDataToReport(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> addUserDataToReport
    void addReportSender(org.acra.sender.ReportSender) -> addReportSender
    void removeReportSender(org.acra.sender.ReportSender) -> removeReportSender
    void removeReportSenders(java.lang.Class) -> removeReportSenders
    void removeAllReportSenders() -> removeAllReportSenders
    void setReportSender(org.acra.sender.ReportSender) -> setReportSender
    void setAppStartDate(android.text.format.Time) -> setAppStartDate
    android.content.Context access$000() -> access$000
    void access$100(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> access$100
org.acra.ErrorReporter$1 -> org.acra.g:
    org.acra.ErrorReporter this$0 -> a
    void run() -> run
org.acra.ErrorReporter$2 -> org.acra.h:
    org.acra.ErrorReporter this$0 -> a
    boolean accept(java.io.File,java.lang.String) -> accept
org.acra.ErrorReporter$ReportsSenderWorker -> org.acra.i:
    java.lang.String mCommentedReportFileName -> b
    java.lang.String mUserComment -> c
    java.lang.String mUserEmail -> d
    boolean mSendOnlySilentReports -> e
    boolean mApprovePendingReports -> f
    org.acra.ErrorReporter this$0 -> a
    void run() -> run
    void setUserComment(java.lang.String,java.lang.String) -> a
    void setUserEmail(java.lang.String,java.lang.String) -> b
    void setApprovePendingReports() -> a
org.acra.LogCatCollector -> org.acra.j:
    java.lang.String collectLogCat(java.lang.String) -> a
org.acra.ReflectionCollector -> org.acra.ReflectionCollector:
    java.lang.String collectConstants(java.lang.Class) -> collectConstants
    java.lang.String collectStaticGettersResults(java.lang.Class) -> collectStaticGettersResults
org.acra.ReportField -> org.acra.ReportField:
    org.acra.ReportField REPORT_ID -> REPORT_ID
    org.acra.ReportField APP_VERSION_CODE -> APP_VERSION_CODE
    org.acra.ReportField APP_VERSION_NAME -> APP_VERSION_NAME
    org.acra.ReportField PACKAGE_NAME -> PACKAGE_NAME
    org.acra.ReportField FILE_PATH -> FILE_PATH
    org.acra.ReportField PHONE_MODEL -> PHONE_MODEL
    org.acra.ReportField ANDROID_VERSION -> ANDROID_VERSION
    org.acra.ReportField BUILD -> BUILD
    org.acra.ReportField BRAND -> BRAND
    org.acra.ReportField PRODUCT -> PRODUCT
    org.acra.ReportField TOTAL_MEM_SIZE -> TOTAL_MEM_SIZE
    org.acra.ReportField AVAILABLE_MEM_SIZE -> AVAILABLE_MEM_SIZE
    org.acra.ReportField CUSTOM_DATA -> CUSTOM_DATA
    org.acra.ReportField STACK_TRACE -> STACK_TRACE
    org.acra.ReportField INITIAL_CONFIGURATION -> INITIAL_CONFIGURATION
    org.acra.ReportField CRASH_CONFIGURATION -> CRASH_CONFIGURATION
    org.acra.ReportField DISPLAY -> DISPLAY
    org.acra.ReportField USER_COMMENT -> USER_COMMENT
    org.acra.ReportField USER_APP_START_DATE -> USER_APP_START_DATE
    org.acra.ReportField USER_CRASH_DATE -> USER_CRASH_DATE
    org.acra.ReportField DUMPSYS_MEMINFO -> DUMPSYS_MEMINFO
    org.acra.ReportField DROPBOX -> DROPBOX
    org.acra.ReportField LOGCAT -> LOGCAT
    org.acra.ReportField EVENTSLOG -> EVENTSLOG
    org.acra.ReportField RADIOLOG -> RADIOLOG
    org.acra.ReportField IS_SILENT -> IS_SILENT
    org.acra.ReportField DEVICE_ID -> DEVICE_ID
    org.acra.ReportField INSTALLATION_ID -> INSTALLATION_ID
    org.acra.ReportField USER_EMAIL -> USER_EMAIL
    org.acra.ReportField DEVICE_FEATURES -> DEVICE_FEATURES
    org.acra.ReportField ENVIRONMENT -> ENVIRONMENT
    org.acra.ReportField SETTINGS_SYSTEM -> SETTINGS_SYSTEM
    org.acra.ReportField SETTINGS_SECURE -> SETTINGS_SECURE
    org.acra.ReportField SHARED_PREFERENCES -> SHARED_PREFERENCES
    org.acra.ReportField[] $VALUES -> $VALUES
    org.acra.ReportField[] values() -> values
    org.acra.ReportField valueOf(java.lang.String) -> valueOf
org.acra.ReportingInteractionMode -> org.acra.ReportingInteractionMode:
    org.acra.ReportingInteractionMode SILENT -> SILENT
    org.acra.ReportingInteractionMode NOTIFICATION -> NOTIFICATION
    org.acra.ReportingInteractionMode TOAST -> TOAST
    org.acra.ReportingInteractionMode[] $VALUES -> $VALUES
    org.acra.ReportingInteractionMode[] values() -> values
    org.acra.ReportingInteractionMode valueOf(java.lang.String) -> valueOf
org.acra.SettingsCollector -> org.acra.SettingsCollector:
    java.lang.String collectSystemSettings(android.content.Context) -> collectSystemSettings
    java.lang.String collectSecureSettings(android.content.Context) -> collectSecureSettings
    boolean isAuthorized(java.lang.reflect.Field) -> isAuthorized
org.acra.SharedPreferencesCollector -> org.acra.SharedPreferencesCollector:
    java.lang.String collect(android.content.Context) -> collect
org.acra.annotation.ReportsCrashes -> org.acra.annotation.ReportsCrashes:
    java.lang.String formKey() -> formKey
    java.lang.String formUri() -> formUri
    org.acra.ReportingInteractionMode mode() -> mode
    int resDialogCommentPrompt() -> resDialogCommentPrompt
    int resDialogEmailPrompt() -> resDialogEmailPrompt
    int resDialogIcon() -> resDialogIcon
    int resDialogOkToast() -> resDialogOkToast
    int resDialogText() -> resDialogText
    int resDialogTitle() -> resDialogTitle
    int resNotifIcon() -> resNotifIcon
    int resNotifText() -> resNotifText
    int resNotifTickerText() -> resNotifTickerText
    int resNotifTitle() -> resNotifTitle
    int resToastText() -> resToastText
    java.lang.String sharedPreferencesName() -> sharedPreferencesName
    int sharedPreferencesMode() -> sharedPreferencesMode
    boolean includeDropBoxSystemTags() -> includeDropBoxSystemTags
    java.lang.String[] additionalDropBoxTags() -> additionalDropBoxTags
    int dropboxCollectionMinutes() -> dropboxCollectionMinutes
    java.lang.String[] logcatArguments() -> logcatArguments
    java.lang.String formUriBasicAuthLogin() -> formUriBasicAuthLogin
    java.lang.String formUriBasicAuthPassword() -> formUriBasicAuthPassword
    org.acra.ReportField[] customReportContent() -> customReportContent
    java.lang.String mailTo() -> mailTo
    boolean deleteUnapprovedReportsOnApplicationStart() -> deleteUnapprovedReportsOnApplicationStart
    int socketTimeout() -> socketTimeout
    boolean forceCloseDialogAfterToast() -> forceCloseDialogAfterToast
    java.lang.String[] additionalSharedPreferences() -> additionalSharedPreferences
org.acra.sender.EmailIntentSender -> org.acra.sender.EmailIntentSender:
    android.content.Context mContext -> mContext
    void send(org.acra.CrashReportData) -> send
    java.lang.String buildBody(org.acra.CrashReportData) -> buildBody
org.acra.sender.GoogleFormSender -> org.acra.sender.GoogleFormSender:
    android.net.Uri mFormUri -> mFormUri
    void send(org.acra.CrashReportData) -> send
    java.util.Map remap(java.util.Map) -> remap
org.acra.sender.GoogleFormSender$1 -> org.acra.sender.a:
    int[] $SwitchMap$org$acra$ReportField -> a
org.acra.sender.HttpPostSender -> org.acra.sender.HttpPostSender:
    android.net.Uri mFormUri -> mFormUri
    java.util.Map mMapping -> mMapping
    void send(org.acra.CrashReportData) -> send
    java.util.Map remap(java.util.Map) -> remap
org.acra.sender.ReportSender -> org.acra.sender.ReportSender:
    void send(org.acra.CrashReportData) -> send
org.acra.sender.ReportSenderException -> org.acra.sender.ReportSenderException:
org.acra.util.Base64 -> org.acra.util.Base64:
    int DEFAULT -> DEFAULT
    int NO_PADDING -> NO_PADDING
    int NO_WRAP -> NO_WRAP
    int CRLF -> CRLF
    int URL_SAFE -> URL_SAFE
    int NO_CLOSE -> NO_CLOSE
    boolean $assertionsDisabled -> $assertionsDisabled
    byte[] decode(java.lang.String,int) -> decode
    byte[] decode(byte[],int) -> decode
    byte[] decode(byte[],int,int,int) -> decode
    java.lang.String encodeToString(byte[],int) -> encodeToString
    java.lang.String encodeToString(byte[],int,int,int) -> encodeToString
    byte[] encode(byte[],int) -> encode
    byte[] encode(byte[],int,int,int) -> encode
org.acra.util.Base64$Coder -> org.acra.util.a:
    byte[] output -> a
    int op -> b
org.acra.util.Base64$Decoder -> org.acra.util.b:
    int[] DECODE -> c
    int[] DECODE_WEBSAFE -> d
    int state -> e
    int value -> f
    int[] alphabet -> g
    boolean process$7dcd25fc(byte[],int,int) -> a
org.acra.util.Base64$Encoder -> org.acra.util.c:
    byte[] ENCODE -> h
    byte[] ENCODE_WEBSAFE -> i
    byte[] tail -> j
    int tailLen -> c
    int count -> k
    boolean do_padding -> d
    boolean do_newline -> e
    boolean do_cr -> f
    byte[] alphabet -> l
    boolean $assertionsDisabled -> g
    boolean process$7dcd25fc(byte[],int,int) -> a
org.acra.util.BoundedLinkedList -> org.acra.util.BoundedLinkedList:
    int maxSize -> maxSize
    boolean add(java.lang.Object) -> add
    void add(int,java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    java.lang.String toString() -> toString
org.acra.util.FakeSocketFactory -> org.acra.util.FakeSocketFactory:
    javax.net.ssl.SSLContext sslcontext -> sslcontext
    javax.net.ssl.SSLContext createEasySSLContext() -> createEasySSLContext
    javax.net.ssl.SSLContext getSSLContext() -> getSSLContext
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    java.net.Socket createSocket() -> createSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
org.acra.util.HttpRequest -> org.acra.util.HttpRequest:
    org.apache.http.impl.client.DefaultHttpClient httpClient -> httpClient
    org.apache.http.protocol.HttpContext localContext -> localContext
    org.apache.http.client.methods.HttpPost httpPost -> httpPost
    org.apache.http.client.methods.HttpGet httpGet -> httpGet
    org.apache.http.auth.UsernamePasswordCredentials creds -> creds
    void clearCookies() -> clearCookies
    void abort() -> abort
    java.lang.String sendPost(java.lang.String,java.lang.String) -> sendPost
    java.lang.String sendPost(java.lang.String,java.lang.String,java.lang.String) -> sendPost
    java.lang.String sendGet(java.lang.String) -> sendGet
    java.io.InputStream getHttpStream(java.lang.String) -> getHttpStream
org.acra.util.HttpUtils -> org.acra.util.HttpUtils:
    void doPost(java.util.Map,java.net.URL,java.lang.String,java.lang.String) -> doPost
    boolean isNull(java.lang.String) -> isNull
org.acra.util.Installation -> org.acra.util.Installation:
    java.lang.String sID -> sID
    java.lang.String INSTALLATION -> INSTALLATION
    java.lang.String id(android.content.Context) -> id
    java.lang.String readInstallationFile(java.io.File) -> readInstallationFile
    void writeInstallationFile(java.io.File) -> writeInstallationFile
org.acra.util.NaiveTrustManager -> org.acra.util.d:
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
